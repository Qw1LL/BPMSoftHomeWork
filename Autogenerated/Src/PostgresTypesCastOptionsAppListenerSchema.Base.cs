namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: PostgresTypesCastOptionsAppListenerSchema

	/// <exclude/>
	public class PostgresTypesCastOptionsAppListenerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public PostgresTypesCastOptionsAppListenerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public PostgresTypesCastOptionsAppListenerSchema(PostgresTypesCastOptionsAppListenerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("af99ba40-7ed6-49ab-b28e-17f32134e193");
			Name = "PostgresTypesCastOptionsAppListener";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6e269b86-be8c-4c04-b44a-876ef2a93baf");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,84,91,111,218,48,20,126,78,165,254,135,163,84,170,232,75,242,94,8,85,97,116,170,212,174,76,48,237,161,170,38,19,14,193,154,99,103,182,195,134,38,254,123,237,56,129,196,97,213,94,32,231,226,239,220,190,115,128,147,28,85,65,82,132,201,252,121,33,54,58,154,10,190,161,89,41,137,166,130,95,94,252,189,188,8,74,69,121,214,114,200,115,193,135,103,244,18,251,218,239,184,58,189,48,214,43,137,153,1,134,41,35,74,221,194,92,40,157,73,84,203,125,129,106,74,148,126,41,108,92,117,95,20,79,84,105,228,40,171,103,113,28,195,72,149,121,78,228,126,92,203,198,135,209,180,202,19,112,135,92,3,171,159,128,222,18,13,196,218,81,53,49,22,95,159,64,219,48,144,154,56,32,92,160,168,1,143,61,244,145,66,36,76,9,72,37,110,146,176,95,79,100,226,207,108,216,38,209,9,81,24,66,108,1,138,114,101,82,131,212,22,249,63,53,194,45,156,67,51,72,166,255,230,247,216,182,7,138,108,109,251,38,233,142,104,116,198,194,9,71,8,51,66,141,127,52,252,32,93,197,208,115,54,106,142,105,213,63,235,122,18,59,142,223,20,202,182,103,217,145,221,84,131,43,228,107,151,98,55,223,185,20,5,74,109,198,240,143,156,61,116,79,180,236,11,130,12,53,36,99,63,50,220,221,193,192,215,37,221,186,162,197,222,116,51,239,162,222,84,229,29,122,189,107,193,116,165,83,22,238,43,160,27,19,185,211,49,72,18,224,37,99,55,141,75,224,219,123,211,136,90,252,125,13,59,17,195,55,32,170,155,68,149,115,149,181,253,147,168,75,121,118,106,206,227,240,241,84,158,81,111,69,69,163,138,167,206,232,175,88,165,152,18,198,112,13,191,183,200,225,149,180,22,78,105,34,245,155,221,158,254,250,56,77,65,36,201,193,30,152,36,76,93,201,225,120,185,69,168,133,104,20,87,46,213,139,122,97,196,14,165,164,107,132,157,160,107,120,225,166,5,11,27,104,224,83,187,198,104,218,189,50,203,18,181,220,27,179,107,73,19,112,186,197,244,231,189,204,202,220,32,125,49,211,26,132,30,110,88,191,240,103,101,198,87,131,12,43,187,37,64,151,84,209,167,201,140,103,148,227,241,195,174,187,165,69,91,142,154,91,244,139,213,52,185,190,134,207,76,172,8,179,185,163,214,230,118,170,232,1,137,153,47,206,56,89,49,124,228,122,41,38,66,176,199,220,182,159,106,123,66,78,56,71,198,245,242,49,83,38,139,84,210,194,81,109,239,223,159,65,93,236,7,140,113,218,174,242,240,14,96,32,121,166,53,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("af99ba40-7ed6-49ab-b28e-17f32134e193"));
		}

		#endregion

	}

	#endregion

}

