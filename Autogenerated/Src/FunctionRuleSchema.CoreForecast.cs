namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: FunctionRuleSchema

	/// <exclude/>
	public class FunctionRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FunctionRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FunctionRuleSchema(FunctionRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("13327698-65c3-41bc-9c73-4929199e9a2f");
			Name = "FunctionRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,219,110,219,56,16,125,86,129,254,195,172,218,7,7,205,202,192,62,182,177,129,110,182,238,6,72,118,141,58,232,107,193,72,148,77,172,68,105,73,202,113,26,244,223,119,120,147,104,201,118,28,167,251,144,11,47,115,230,112,56,103,56,226,164,164,178,38,41,133,223,231,55,139,42,87,201,101,197,115,182,108,4,81,172,226,201,172,18,52,37,82,125,253,237,245,171,199,215,175,162,70,50,190,132,197,131,84,180,252,208,27,163,105,81,208,84,219,201,228,51,229,84,176,116,176,231,154,241,127,187,201,206,105,89,86,28,231,113,229,141,160,75,132,128,203,130,72,249,30,102,13,55,144,95,154,130,206,72,170,42,241,96,182,141,199,99,184,144,77,89,18,241,48,117,227,185,168,214,44,163,18,114,187,17,74,170,86,85,134,227,74,192,146,42,165,125,230,14,16,4,34,74,143,52,14,160,234,230,174,96,41,72,133,49,72,33,213,60,118,211,136,116,72,6,76,204,196,23,170,26,193,101,207,27,220,17,73,51,192,97,59,175,30,106,154,180,48,33,13,59,83,19,65,74,224,120,79,147,152,97,4,227,233,237,138,118,230,120,178,178,41,8,232,165,228,98,108,118,119,198,194,178,152,94,72,74,33,21,52,159,196,225,65,226,241,54,152,230,136,32,222,74,195,108,199,34,52,134,207,84,233,191,163,153,165,112,133,12,12,141,51,48,97,137,190,146,130,101,68,209,143,98,217,148,148,43,57,50,171,250,246,163,200,250,0,78,239,97,193,202,26,131,26,64,203,145,221,245,195,220,116,84,11,182,70,28,79,98,93,177,12,134,224,33,141,188,251,223,179,9,166,146,203,21,77,255,241,150,127,53,69,49,210,241,173,242,81,104,231,136,178,28,194,233,228,22,239,11,126,153,64,224,78,79,37,158,191,247,23,169,149,168,238,205,1,189,167,79,155,148,214,122,207,232,109,252,105,83,163,84,48,23,194,11,132,123,166,86,38,35,32,134,119,22,38,122,27,63,238,243,149,220,86,11,37,48,169,71,103,63,224,174,81,112,79,36,212,152,174,136,219,195,123,236,159,33,180,77,98,119,88,12,184,253,101,35,255,134,242,204,170,17,7,135,165,121,132,38,143,213,29,185,147,74,160,196,118,40,207,74,78,147,244,84,102,140,22,25,114,153,219,28,217,78,152,107,38,213,69,16,188,41,124,243,44,230,68,41,42,92,201,217,58,104,136,142,228,107,42,20,163,218,131,97,103,215,119,74,30,245,32,65,133,122,170,173,147,61,242,118,199,29,146,116,220,92,34,97,221,242,41,165,115,177,127,2,152,76,128,99,10,183,121,23,13,119,104,106,127,208,156,113,154,185,57,39,48,119,227,173,28,119,132,39,200,138,195,39,47,201,6,116,180,8,207,32,173,26,174,128,117,17,56,28,2,134,155,253,53,223,144,205,223,22,229,210,128,60,234,194,253,1,158,116,111,93,86,57,72,42,214,12,31,52,45,0,25,114,56,154,194,194,34,232,203,144,207,35,81,87,146,153,155,71,30,57,19,82,181,17,57,137,135,34,66,185,96,204,61,242,179,227,209,102,227,138,146,140,138,211,66,242,167,177,61,33,34,58,43,90,6,5,229,75,44,72,237,35,248,108,26,152,28,215,22,227,37,254,169,169,189,46,30,46,79,126,2,39,91,210,109,164,122,252,246,213,151,27,219,159,188,135,143,174,230,61,117,156,204,170,248,232,18,35,42,101,159,153,182,168,14,203,205,238,226,112,136,54,246,136,136,214,232,46,232,152,194,120,197,49,117,241,189,254,30,18,247,175,192,65,214,97,237,31,249,10,183,175,82,76,124,225,76,204,216,116,27,48,153,218,214,200,60,219,88,42,251,79,41,246,172,77,201,93,53,220,95,0,78,194,118,236,250,224,187,84,221,225,207,24,207,174,120,70,55,47,224,63,80,235,73,244,219,142,102,27,188,211,32,154,236,115,248,238,64,49,237,214,122,55,184,199,207,150,174,58,159,29,143,95,247,242,8,187,200,94,50,15,59,156,97,131,179,163,51,125,186,207,145,198,232,248,118,199,118,57,59,92,65,191,195,10,62,55,24,95,225,231,149,202,170,20,198,61,205,84,107,42,4,50,57,78,233,78,83,107,34,124,41,193,16,235,166,117,96,221,238,141,244,114,216,109,251,198,195,38,210,222,60,58,119,219,176,117,111,244,62,221,181,184,38,228,252,36,96,151,59,231,61,220,120,20,191,8,214,74,170,143,250,191,177,61,243,108,109,175,181,245,121,228,174,196,167,177,249,233,101,45,78,253,7,173,123,110,229,197,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("13327698-65c3-41bc-9c73-4929199e9a2f"));
		}

		#endregion

	}

	#endregion

}

