namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseCountTermSchema

	/// <exclude/>
	public class BaseCountTermSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseCountTermSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseCountTermSchema(BaseCountTermSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2bc19a40-e2b8-4afc-a039-d55edec8109f");
			Name = "BaseCountTerm";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("761f835c-6644-4753-9a3e-2c2ccab7b4d0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,149,81,79,219,48,16,199,159,139,196,119,184,149,151,34,161,246,29,74,36,40,27,170,52,164,106,176,237,217,77,174,193,154,99,87,182,83,212,77,124,247,221,217,117,72,75,83,120,96,218,75,42,59,247,183,255,247,203,221,85,139,10,221,82,228,8,215,179,187,123,179,240,195,137,209,11,89,214,86,120,105,244,112,34,20,234,66,88,119,124,244,231,248,168,87,59,169,75,184,95,59,143,213,197,206,154,148,74,97,206,50,55,188,69,141,86,230,47,49,123,143,167,215,20,112,98,177,164,5,76,148,112,14,206,225,90,56,156,152,90,251,7,180,85,136,24,141,70,48,118,117,85,9,187,206,54,235,16,1,158,66,96,78,2,200,89,61,76,193,163,86,244,178,158,43,153,131,152,59,111,69,238,99,228,238,45,61,74,143,158,141,153,153,53,75,180,94,162,59,135,89,56,32,190,223,181,18,189,176,1,22,242,13,156,24,20,194,35,155,121,237,38,217,89,73,235,107,161,224,134,34,31,100,133,240,173,165,231,77,96,224,189,94,137,254,2,28,61,120,245,124,192,196,189,55,22,93,36,146,11,149,215,42,90,81,166,116,135,173,48,129,201,139,226,171,41,195,89,157,251,221,198,78,168,88,34,192,109,154,119,232,31,77,193,40,173,241,84,35,88,196,247,203,180,108,112,172,140,44,128,110,106,221,59,213,148,211,74,40,55,152,126,214,117,133,86,204,21,142,167,169,52,111,196,58,35,222,107,119,6,133,161,132,16,60,225,188,170,248,219,158,110,188,202,5,12,186,178,249,116,9,186,86,42,133,246,52,62,237,201,188,68,219,117,194,233,240,139,84,106,143,225,65,116,213,178,19,88,49,172,247,18,131,119,84,223,45,82,77,111,96,192,19,226,47,7,34,92,7,222,64,201,141,216,93,140,97,103,41,172,168,64,211,40,184,236,179,229,126,150,216,6,174,195,241,40,68,236,23,80,158,53,246,179,31,252,195,23,166,210,195,215,50,139,190,182,218,101,17,6,152,69,116,75,129,233,77,171,40,155,118,149,20,74,41,254,228,208,208,176,111,150,1,43,130,45,230,221,137,237,42,231,130,147,191,105,116,180,179,133,133,177,237,254,249,103,224,138,77,227,7,81,211,173,75,185,50,126,75,184,203,35,116,72,99,158,210,118,3,139,11,120,11,74,51,103,210,189,7,225,36,75,47,225,48,95,55,160,254,59,147,143,168,194,198,22,247,231,27,53,216,192,107,184,124,80,17,82,97,211,200,126,140,51,11,106,45,125,215,172,126,149,114,250,24,253,236,129,244,205,167,25,31,194,68,127,105,146,166,74,148,108,22,221,132,66,198,193,19,228,220,120,239,107,84,86,125,103,209,160,193,178,3,40,121,61,219,42,218,196,56,77,207,44,25,76,0,119,70,101,28,160,219,155,207,127,1,208,173,136,90,208,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2bc19a40-e2b8-4afc-a039-d55edec8109f"));
		}

		#endregion

	}

	#endregion

}

