namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: PersistentLookupColumnProcessorSchema

	/// <exclude/>
	public class PersistentLookupColumnProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public PersistentLookupColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public PersistentLookupColumnProcessorSchema(PersistentLookupColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9af03088-2f4f-4c07-8b9e-00dc4da8eb75");
			Name = "PersistentLookupColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,87,221,111,219,54,16,127,214,128,253,15,92,250,34,99,158,252,222,218,6,154,196,233,188,37,91,80,167,219,67,81,20,138,116,142,185,72,164,75,82,94,141,193,255,251,142,71,202,150,37,202,78,30,146,72,167,251,252,221,103,68,90,130,94,167,25,176,203,251,187,133,92,154,228,74,138,37,127,170,84,106,184,20,201,13,47,96,94,174,165,50,236,191,31,127,136,42,205,197,19,91,108,181,129,242,93,235,29,37,139,2,50,43,166,147,15,32,64,241,172,195,115,203,197,183,3,241,96,179,44,165,8,209,21,132,169,201,76,24,110,56,232,158,207,55,105,102,164,114,223,145,227,141,130,39,244,139,93,21,169,214,111,217,61,40,205,209,31,97,110,165,124,174,214,232,121,85,138,123,37,51,208,90,42,18,25,141,70,108,204,197,10,195,48,185,204,216,104,138,196,207,215,176,76,171,194,92,114,145,163,205,216,108,215,32,151,241,252,160,176,165,106,48,100,127,32,196,108,194,4,254,65,214,51,166,7,131,47,104,102,93,61,22,60,99,153,245,246,156,179,236,45,187,76,53,180,168,67,214,239,19,67,11,54,153,145,253,169,145,193,175,107,80,22,81,132,71,73,131,137,132,156,128,112,72,232,170,44,83,181,157,214,132,235,212,164,108,147,22,21,48,11,2,171,4,255,134,207,60,71,123,124,201,65,37,123,209,81,83,118,93,235,102,114,3,74,33,63,251,80,241,156,244,253,101,213,61,160,182,79,243,156,77,166,199,180,196,69,223,230,115,249,141,222,128,200,93,36,254,221,135,117,195,161,200,41,36,190,73,13,184,143,107,247,194,20,164,185,20,197,150,205,93,137,123,124,87,149,120,214,214,14,226,176,65,7,21,251,202,233,123,147,246,174,169,200,9,122,128,33,39,255,52,251,90,132,200,103,28,198,246,211,70,85,182,122,173,219,84,8,222,107,87,20,103,202,33,254,164,65,161,18,225,58,145,85,71,175,3,172,150,71,172,150,184,77,166,122,136,2,113,98,229,82,211,184,134,218,98,99,155,241,25,184,166,49,41,139,4,252,219,12,231,189,122,170,74,116,59,190,56,54,126,49,100,199,62,15,72,124,64,8,239,78,163,117,7,102,37,123,243,27,76,203,29,88,39,36,251,77,114,17,100,136,111,17,222,241,41,217,41,43,144,165,6,109,147,42,172,36,141,83,193,118,57,198,124,210,172,147,137,62,146,128,246,18,215,156,2,199,30,25,35,90,56,88,134,33,146,237,147,233,52,118,240,236,8,158,104,137,195,46,205,86,44,182,94,112,156,176,140,139,35,239,162,247,121,238,109,199,206,203,196,219,30,18,127,253,230,224,182,120,227,111,5,166,82,194,71,213,204,67,141,236,70,98,203,54,52,191,38,0,175,22,237,191,74,42,219,111,151,58,180,96,236,93,182,136,47,89,252,147,55,154,60,168,45,150,48,229,36,166,248,127,135,237,144,201,202,244,154,118,83,110,176,87,23,213,170,48,254,134,10,122,34,189,30,202,104,199,160,208,176,23,59,48,36,55,82,205,208,243,152,219,41,71,234,63,115,171,229,11,214,3,111,41,57,164,165,149,131,249,76,96,63,169,244,177,128,177,107,72,219,132,212,142,190,122,233,217,18,17,62,12,250,79,117,133,128,25,168,217,178,103,29,59,193,251,84,225,118,50,56,89,24,111,17,234,176,9,196,192,124,176,3,97,174,221,16,152,125,199,194,211,113,91,69,226,140,44,176,27,16,223,121,126,128,50,164,239,216,71,116,177,227,81,160,82,123,28,59,239,202,43,135,204,249,189,136,86,181,45,66,156,201,44,7,109,184,160,67,10,159,233,112,96,235,253,158,237,89,144,68,89,91,143,233,100,152,92,216,133,106,182,139,108,5,101,234,134,253,197,148,174,159,45,211,68,244,230,146,241,136,196,194,90,28,15,149,214,197,212,169,241,235,155,11,108,164,210,157,123,29,21,14,95,93,75,156,137,104,60,170,249,123,86,125,160,199,228,227,63,200,68,5,234,140,92,31,108,28,142,18,183,82,102,29,40,88,23,29,60,125,40,201,87,135,136,61,66,174,177,124,241,157,112,37,15,121,128,173,105,55,103,114,198,207,128,63,174,214,155,46,184,10,14,154,161,169,242,17,150,160,64,100,224,244,224,153,227,25,182,246,152,28,6,130,78,186,34,222,138,239,144,160,177,215,85,127,227,22,9,30,199,245,133,226,96,196,211,75,184,221,135,211,110,145,110,192,207,154,14,120,77,215,94,152,187,186,235,131,7,86,210,49,124,100,160,147,135,221,11,66,162,125,231,237,188,124,102,218,189,84,180,142,36,44,163,158,81,28,154,115,123,53,171,84,228,5,93,99,116,85,89,117,110,198,187,152,127,117,159,91,199,159,175,0,47,155,120,255,103,74,225,255,0,63,79,216,2,51,222,164,57,110,163,182,245,120,14,31,23,173,128,146,191,17,50,136,11,187,202,138,100,97,236,106,154,76,234,60,90,54,162,37,15,210,219,106,108,82,187,84,58,35,154,22,138,23,79,177,160,113,159,231,237,192,14,42,162,71,244,241,217,47,75,191,20,14,33,207,190,67,86,25,183,233,91,27,149,45,177,36,10,60,254,189,166,32,74,191,244,161,180,115,247,114,176,0,79,157,129,225,12,245,20,50,158,102,120,55,3,225,23,247,223,171,157,140,44,192,158,64,113,102,83,146,37,68,106,201,144,202,1,230,196,222,186,241,96,112,106,15,58,106,147,72,148,255,1,146,232,65,140,58,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9af03088-2f4f-4c07-8b9e-00dc4da8eb75"));
		}

		#endregion

	}

	#endregion

}

