namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseForecastRowSnapshotServiceSchema

	/// <exclude/>
	public class BaseForecastRowSnapshotServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseForecastRowSnapshotServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseForecastRowSnapshotServiceSchema(BaseForecastRowSnapshotServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("182e1258-0961-40a3-8b2c-b12068d94685");
			Name = "BaseForecastRowSnapshotService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,87,219,110,219,56,16,125,118,129,254,3,145,190,200,64,32,3,251,88,199,6,156,91,215,139,54,13,98,180,251,204,74,163,152,128,37,122,73,42,110,80,228,223,59,188,233,66,49,114,179,13,208,23,57,28,114,134,135,103,206,12,153,138,150,32,247,52,3,114,126,251,105,195,11,149,94,240,170,96,247,181,160,138,241,234,237,155,31,111,223,76,106,201,170,123,178,121,148,10,202,121,48,198,245,187,29,100,122,177,76,63,64,5,130,101,131,53,151,84,209,214,216,238,84,150,188,138,217,59,8,210,107,46,32,163,82,125,253,43,182,82,64,220,154,94,158,227,4,78,189,19,112,143,97,200,197,142,74,249,158,156,83,9,62,226,29,63,108,42,186,151,91,174,54,32,30,88,6,198,99,54,155,145,51,89,151,37,21,143,75,55,214,110,164,112,126,68,240,3,145,206,147,72,235,154,122,207,89,199,117,95,127,219,177,140,208,111,82,9,154,41,146,105,16,71,49,76,144,115,252,134,208,189,203,38,219,66,73,145,188,61,21,76,242,202,210,101,93,220,134,118,159,99,14,19,191,81,179,211,173,224,123,16,138,1,110,119,107,66,185,5,46,46,30,195,100,213,4,188,65,233,144,31,228,30,212,28,73,192,207,83,116,241,85,165,152,122,68,149,212,101,245,172,203,59,168,114,139,193,26,156,61,52,239,5,87,168,53,200,73,134,114,83,126,139,85,166,106,186,211,84,182,192,22,228,164,195,241,201,124,196,253,111,38,21,23,143,184,108,181,99,84,106,215,98,43,70,93,58,161,91,159,113,23,203,131,119,108,188,160,208,94,189,116,107,47,81,103,136,41,72,131,35,118,92,63,201,23,84,36,198,168,108,81,146,186,55,156,18,93,208,147,73,176,104,17,44,155,143,36,33,42,22,127,102,187,36,44,33,103,0,32,153,128,98,209,100,198,67,215,253,225,100,182,36,12,79,78,43,91,76,195,106,234,48,27,11,64,252,32,166,176,99,136,76,207,232,147,242,34,64,1,159,193,48,2,232,57,86,63,129,218,242,124,72,105,187,213,3,19,90,238,13,7,173,124,13,11,23,2,168,130,190,49,89,235,239,29,208,28,4,17,230,199,11,225,129,162,133,31,214,57,106,192,206,96,23,87,182,92,191,210,93,13,103,31,106,150,47,147,225,110,70,167,180,82,50,93,231,109,121,79,231,77,88,48,138,255,173,200,97,243,112,209,5,168,90,84,164,130,195,51,44,36,254,120,19,52,88,4,250,247,212,218,108,84,99,246,24,221,140,151,144,153,243,131,180,181,250,101,91,128,112,141,54,33,19,102,193,83,183,126,134,153,219,128,190,49,93,166,110,224,128,24,165,181,37,215,108,167,140,116,176,67,147,194,12,78,137,137,77,164,254,58,0,227,173,29,15,203,155,41,109,56,61,114,23,96,167,210,6,200,187,78,158,66,135,22,9,148,235,220,13,22,14,188,97,215,99,183,0,27,212,33,8,151,59,23,1,190,99,194,176,47,234,179,55,33,126,41,110,20,107,171,58,233,35,105,117,184,8,253,114,156,166,151,102,111,156,152,90,58,39,169,149,88,18,246,245,150,184,163,186,15,34,69,218,253,144,146,161,190,211,149,124,89,65,216,109,211,107,193,203,36,114,15,246,2,250,83,121,167,53,50,34,254,225,172,74,6,192,130,8,145,211,52,7,254,252,26,180,33,24,121,245,31,162,143,19,55,22,206,12,66,62,254,221,130,128,215,72,231,90,147,211,42,223,199,95,85,249,107,68,191,225,168,65,189,71,180,28,166,4,223,8,246,207,94,223,179,18,127,65,143,233,149,83,183,155,144,104,191,57,210,44,100,164,73,116,58,242,255,173,185,95,206,173,209,186,124,70,173,189,252,203,241,90,67,222,237,48,189,165,2,45,120,120,153,88,18,210,59,200,184,200,145,181,105,131,87,231,252,197,234,52,108,143,233,61,68,96,219,29,202,101,26,166,127,152,107,206,114,98,138,120,67,31,192,95,69,73,244,113,228,255,95,137,167,252,15,220,42,173,10,177,87,123,116,150,174,222,69,209,244,243,216,117,233,21,235,212,60,68,120,228,178,192,210,54,79,17,253,20,215,218,253,136,25,60,139,63,41,150,137,243,147,102,235,244,234,59,100,53,150,150,121,217,36,137,127,85,45,150,254,229,209,196,78,87,121,158,68,159,101,206,201,5,126,114,191,248,242,203,64,202,75,86,20,250,168,186,255,216,64,118,126,32,131,230,223,75,163,135,208,123,236,72,237,249,117,232,200,179,212,238,213,55,162,237,39,104,1,181,171,54,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("182e1258-0961-40a3-8b2c-b12068d94685"));
		}

		#endregion

	}

	#endregion

}

