namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ServiceObjectsRightsRegulatorSchema

	/// <exclude/>
	public class ServiceObjectsRightsRegulatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ServiceObjectsRightsRegulatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ServiceObjectsRightsRegulatorSchema(ServiceObjectsRightsRegulatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c0580421-fa6e-d9b0-1190-46f7de66fcbf");
			Name = "ServiceObjectsRightsRegulator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("914c52f8-7161-4b32-82f6-d4cef8b3a889");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,87,109,79,27,71,16,254,124,145,242,31,182,151,47,103,9,206,36,145,104,105,192,146,141,13,114,69,10,197,144,126,68,203,221,216,222,234,110,207,217,221,35,117,42,254,123,103,95,238,213,103,67,66,21,21,9,236,157,157,157,157,121,230,153,217,129,211,20,228,138,70,64,70,87,31,103,217,92,133,167,25,159,179,69,46,168,98,25,127,253,234,159,215,175,188,92,50,190,32,179,181,84,144,126,104,173,81,63,73,32,210,202,50,60,7,14,130,69,27,58,23,140,127,174,132,213,77,105,154,241,46,185,128,110,105,211,185,45,58,227,17,110,224,214,27,1,11,212,34,167,9,149,242,87,50,3,241,192,34,184,188,255,11,189,157,60,0,87,23,12,157,67,135,141,118,191,223,39,199,50,79,83,42,214,3,183,190,134,149,0,137,154,146,8,182,88,234,15,88,228,9,85,153,32,115,252,149,214,36,65,13,166,24,200,176,176,211,175,25,90,229,247,9,139,72,164,189,104,58,33,175,141,209,235,194,38,42,35,218,248,183,116,253,140,65,18,163,239,87,130,61,80,5,118,115,101,23,232,11,141,51,158,172,201,121,206,98,114,151,137,5,229,236,171,65,6,97,31,198,41,227,183,156,169,105,76,78,8,135,47,70,45,240,199,103,71,239,199,167,163,163,253,195,209,248,231,253,241,217,219,183,251,71,163,119,195,253,131,131,183,227,195,131,201,209,251,95,78,15,253,222,135,206,139,110,49,96,204,0,183,233,38,119,121,99,221,125,70,42,161,51,116,39,163,37,164,244,119,164,155,205,142,247,6,120,108,195,108,198,140,6,149,200,35,196,67,7,110,192,179,10,237,12,25,193,20,35,100,52,97,95,65,154,32,25,151,138,114,204,73,54,71,101,0,18,9,152,159,248,59,113,247,251,165,185,70,230,172,100,69,5,77,9,71,199,79,252,102,192,254,64,3,66,162,82,112,220,55,202,221,103,43,0,252,193,204,124,55,27,134,72,142,86,26,40,75,180,176,110,202,49,104,103,12,65,43,55,77,79,247,138,52,84,78,244,136,174,108,207,107,37,17,185,210,145,85,175,150,62,212,104,228,210,243,30,119,39,244,35,168,101,182,149,197,247,89,150,144,27,177,62,7,165,51,79,35,165,35,153,198,129,97,117,100,69,211,120,143,100,185,178,76,151,53,114,23,81,212,101,232,160,214,11,39,233,74,173,173,251,51,208,45,10,235,85,127,252,145,131,88,187,154,176,27,65,11,132,158,57,228,126,116,131,203,83,30,248,211,216,111,110,156,137,44,13,252,79,95,234,213,214,82,249,115,9,2,2,223,69,166,45,132,83,57,249,156,211,36,176,102,195,43,157,102,80,32,130,50,214,94,211,198,144,99,217,214,239,184,89,175,96,195,153,150,89,188,81,170,96,68,37,152,111,50,212,168,110,26,105,94,229,81,233,16,177,176,213,240,10,39,127,67,148,43,152,33,139,18,184,134,40,19,241,177,134,121,16,232,82,199,50,56,49,92,245,60,187,12,77,62,181,43,159,104,146,131,83,53,24,218,84,54,178,104,175,19,160,114,193,27,59,228,167,141,100,62,110,229,207,76,174,46,107,77,176,224,16,141,162,44,231,77,14,213,155,37,162,224,88,212,148,254,119,60,234,162,80,197,30,185,218,100,79,65,156,171,76,40,154,12,139,8,118,209,167,12,179,204,233,147,204,233,38,205,142,151,164,48,253,3,121,210,202,84,131,41,173,124,61,201,149,135,12,83,127,186,164,124,129,158,209,216,182,80,75,18,243,132,175,53,71,54,122,140,22,78,204,182,109,219,54,40,115,248,2,30,32,177,45,219,124,221,210,84,113,36,153,33,42,2,77,76,248,130,113,8,103,160,58,76,162,79,8,91,101,57,104,185,97,129,171,245,226,189,154,223,53,47,186,98,215,195,142,69,151,32,228,142,81,174,47,57,12,42,6,185,48,94,74,247,217,240,214,223,35,221,172,175,247,76,212,209,170,21,45,209,162,248,45,99,104,194,121,136,196,31,74,92,85,58,151,149,253,174,238,138,170,173,155,139,86,172,229,223,87,80,45,214,23,237,106,147,252,19,158,167,32,232,125,2,21,233,201,147,124,239,133,55,153,206,82,208,251,182,87,245,169,17,9,185,38,201,130,225,196,91,76,177,137,161,45,26,177,236,49,35,136,139,54,124,230,36,84,130,227,15,28,152,132,197,218,220,156,97,144,59,7,161,130,178,254,192,150,192,179,15,86,12,47,143,214,3,234,154,153,106,21,95,127,26,170,234,183,117,214,126,39,90,45,225,27,171,159,205,73,69,30,114,82,239,74,133,138,35,143,37,210,99,121,106,219,59,182,229,9,235,106,210,189,242,138,141,70,87,5,180,229,236,102,19,241,30,9,36,18,10,147,211,138,217,174,151,56,207,236,204,38,245,147,185,217,92,170,66,178,54,61,228,27,208,104,73,44,238,205,38,135,19,124,203,104,25,208,174,136,218,13,123,35,16,135,242,99,173,180,94,80,45,110,86,123,110,181,148,163,157,63,112,168,252,223,171,197,185,217,89,40,181,161,252,229,133,18,21,198,190,163,80,154,255,48,148,150,126,124,145,108,239,215,86,218,20,162,236,95,220,0,14,142,119,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c0580421-fa6e-d9b0-1190-46f7de66fcbf"));
		}

		#endregion

	}

	#endregion

}

