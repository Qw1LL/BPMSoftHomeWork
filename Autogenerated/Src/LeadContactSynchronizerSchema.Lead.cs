namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: LeadContactSynchronizerSchema

	/// <exclude/>
	public class LeadContactSynchronizerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LeadContactSynchronizerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LeadContactSynchronizerSchema(LeadContactSynchronizerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2496d37e-0f16-41c9-a9d2-9160f644dc75");
			Name = "LeadContactSynchronizer";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b424f2c1-869b-44e8-aaf1-c9a818421e06");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,77,115,219,54,16,61,43,51,249,15,91,230,66,205,104,168,123,44,169,227,15,57,163,212,106,220,202,105,143,25,136,92,137,72,72,128,1,65,59,76,198,255,189,139,15,74,36,37,186,201,197,99,0,187,139,183,15,143,111,37,88,142,101,193,98,132,171,251,245,70,238,116,116,45,197,142,239,43,197,52,151,226,245,171,31,175,95,141,170,146,139,61,108,234,82,99,126,209,91,83,124,150,97,108,130,203,232,29,10,84,60,62,137,185,227,226,235,113,243,120,147,194,243,187,209,205,213,192,193,82,104,174,57,150,255,115,28,93,150,181,136,63,20,232,218,248,213,240,104,37,52,170,29,209,98,50,41,247,141,194,61,29,192,117,198,202,242,45,220,33,75,136,39,205,98,189,161,196,84,73,193,191,163,178,161,211,233,20,102,101,149,231,76,213,11,191,54,65,46,6,98,151,6,154,146,158,32,163,66,80,40,73,23,149,128,223,48,174,52,129,140,154,50,211,86,157,162,218,102,60,134,216,32,24,6,48,50,239,117,128,123,203,49,75,8,239,189,226,143,76,163,197,55,42,220,2,62,150,168,168,134,112,143,7,159,170,206,250,162,29,170,232,58,41,178,26,238,120,169,103,165,86,4,114,1,159,178,35,10,82,65,149,139,63,141,154,28,99,163,55,40,18,7,195,175,27,10,137,95,173,170,88,75,69,192,108,83,30,151,107,112,160,181,176,7,183,139,118,12,182,239,81,175,9,152,195,153,174,70,3,192,41,90,224,83,183,199,31,16,248,192,96,2,193,90,110,121,134,247,169,20,104,150,203,156,241,204,252,243,94,110,87,73,0,207,182,252,243,203,253,175,81,167,114,240,81,30,37,79,224,99,145,208,255,127,85,44,227,59,142,13,210,240,93,69,103,95,123,187,171,100,226,16,255,129,245,63,44,171,240,158,113,229,225,79,64,110,63,83,227,139,5,201,206,180,105,3,202,134,44,171,254,122,19,167,152,179,70,151,126,53,239,203,33,106,7,175,153,96,123,84,244,185,235,21,61,38,19,49,94,213,134,194,240,64,214,216,49,237,178,154,226,126,53,239,94,22,93,147,188,52,186,195,176,119,175,175,195,119,16,118,138,68,183,168,227,244,86,201,252,230,42,60,229,100,220,244,56,106,55,30,221,74,181,100,113,26,182,54,97,110,62,46,23,217,174,191,65,47,13,27,213,206,136,136,233,73,155,208,200,254,29,123,168,189,58,36,219,203,36,231,226,111,190,79,181,145,216,142,101,165,181,189,211,43,217,35,134,246,216,151,122,110,201,169,17,200,79,188,53,61,75,71,220,174,249,112,181,20,85,78,14,183,205,112,230,110,108,29,47,172,21,93,167,76,236,49,233,202,68,161,174,148,56,61,119,45,68,255,166,168,136,159,214,9,81,58,228,13,102,186,104,198,69,217,73,136,204,217,120,236,11,110,208,204,147,112,205,138,7,121,166,143,113,244,32,13,9,161,35,169,71,207,75,204,192,80,201,240,132,14,104,195,107,136,112,229,224,11,90,9,247,241,195,124,126,244,10,248,29,2,179,25,192,219,211,200,139,54,173,198,113,94,2,29,126,177,106,107,215,112,160,126,205,107,90,62,219,31,80,135,9,229,173,214,13,37,167,239,114,2,79,41,143,83,96,202,140,46,165,232,199,130,20,9,38,240,196,117,122,52,163,38,199,118,111,198,215,233,252,114,59,5,83,44,7,65,44,204,3,147,19,44,140,223,3,186,47,96,54,181,231,231,195,115,153,248,143,252,248,114,62,189,57,106,80,119,10,249,185,98,157,181,213,166,127,170,27,166,153,127,127,219,196,4,78,196,112,252,133,115,184,168,35,72,47,143,1,123,38,173,152,186,198,44,31,234,162,147,58,51,41,139,48,232,59,61,205,146,150,239,157,41,249,219,28,76,106,180,204,11,93,31,172,238,39,172,129,212,230,171,56,236,4,110,192,45,206,118,234,109,203,160,234,87,138,46,69,29,30,109,119,52,48,195,206,141,175,126,169,230,26,107,127,29,19,108,235,220,239,117,165,79,123,255,1,77,42,19,217,210,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2496d37e-0f16-41c9-a9d2-9160f644dc75"));
		}

		#endregion

	}

	#endregion

}

