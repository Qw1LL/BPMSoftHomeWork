namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DiagramElementMapSchema

	/// <exclude/>
	public class DiagramElementMapSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DiagramElementMapSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DiagramElementMapSchema(DiagramElementMapSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2433ee1c-d882-476a-aa3e-688dee2b58c1");
			Name = "DiagramElementMap";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("67ca742a-491c-42e4-bed9-36e7f4e73ff4");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,87,109,111,219,54,16,254,172,2,253,15,156,7,180,50,34,8,235,215,102,201,144,166,65,151,160,121,65,28,244,75,154,14,138,124,118,148,201,148,70,81,78,140,192,255,125,71,242,40,138,182,228,218,203,242,33,182,117,199,231,238,158,123,225,137,39,51,168,202,36,5,246,233,234,124,84,76,100,124,92,240,73,54,173,69,34,179,130,191,125,243,242,246,77,80,87,25,159,178,209,162,146,48,219,95,249,141,250,121,14,169,82,174,226,47,192,65,100,233,154,206,53,76,72,103,77,116,3,207,18,229,211,58,79,196,201,115,41,160,170,20,148,211,187,128,39,137,15,148,107,103,85,193,227,175,25,255,199,73,157,215,2,226,19,46,51,153,129,58,140,10,191,10,152,34,20,59,206,147,170,250,200,62,103,201,84,36,179,147,28,102,192,229,121,82,106,165,178,190,207,179,148,165,74,167,75,37,192,248,241,191,3,67,87,164,168,83,89,8,196,188,210,167,141,6,33,173,97,132,168,175,60,173,210,7,152,37,23,200,119,196,78,79,120,61,3,145,220,231,240,251,218,129,171,34,227,18,196,33,43,205,151,42,98,10,63,32,28,1,19,16,192,83,64,226,235,25,255,150,228,53,40,84,118,192,6,131,33,83,249,10,2,194,168,240,161,69,81,156,5,193,168,241,2,69,206,37,35,188,238,135,238,179,170,15,46,137,35,224,99,67,147,207,217,149,40,74,16,42,49,157,140,109,71,70,19,209,11,155,130,220,103,165,200,230,137,4,86,169,31,75,15,144,136,106,133,186,245,153,94,6,54,32,244,133,125,14,242,161,24,171,152,205,33,178,103,17,36,54,88,202,206,110,138,191,129,179,47,32,245,23,42,150,219,59,86,38,242,161,178,233,204,38,44,212,15,226,175,192,167,242,129,29,178,15,236,221,59,242,58,62,173,46,234,60,191,20,39,179,82,46,140,226,237,135,187,161,61,29,8,144,181,224,140,195,19,59,59,18,34,89,132,67,147,112,140,96,69,124,121,255,136,141,138,242,109,18,235,34,92,207,42,17,138,129,153,16,53,149,159,22,87,232,92,72,65,63,234,143,200,170,206,149,134,146,91,191,125,46,176,8,27,141,120,84,230,153,12,223,199,239,41,16,66,228,197,88,21,171,1,142,63,3,148,199,121,193,193,134,59,193,33,145,164,15,204,182,164,194,101,25,247,185,214,100,247,18,235,72,213,122,202,96,124,179,40,209,234,1,229,82,253,138,53,203,42,67,90,225,207,164,210,225,59,27,65,64,174,170,143,219,223,238,140,127,248,151,22,56,195,120,77,13,105,51,228,212,209,29,18,145,196,122,161,28,80,82,103,130,210,74,161,232,16,186,143,118,5,96,234,192,129,181,221,85,60,88,143,151,12,242,10,118,183,185,187,187,126,173,106,183,139,145,86,166,244,250,13,61,47,178,49,27,97,245,153,72,118,40,191,136,21,250,136,121,210,200,241,106,154,43,177,55,103,123,107,197,21,243,74,23,182,27,111,135,2,39,39,210,90,224,120,146,228,135,233,116,91,61,243,68,224,152,158,194,179,202,19,246,50,94,170,240,28,14,126,12,216,158,119,110,143,13,194,239,223,227,189,225,31,3,31,92,224,184,204,56,126,35,120,13,134,119,115,153,227,126,224,34,138,188,28,17,68,47,17,30,168,35,67,233,83,155,246,181,143,43,13,21,217,163,105,169,3,22,154,17,54,52,167,109,159,24,113,124,52,30,135,222,28,27,54,10,38,233,56,28,180,166,235,57,42,76,35,191,109,17,117,71,60,158,233,218,49,241,91,184,245,92,218,9,4,79,214,80,51,211,205,120,241,7,21,110,61,45,255,119,97,67,233,254,66,202,29,131,101,103,174,180,104,232,147,209,184,215,12,211,134,47,191,225,59,20,219,12,182,9,210,157,239,212,87,218,191,151,254,182,231,59,88,235,238,252,6,32,242,139,61,178,189,222,130,235,29,42,71,101,153,47,66,189,107,46,152,76,4,46,6,145,189,199,171,162,22,41,216,168,154,251,166,111,173,177,203,153,186,132,236,130,211,80,210,158,75,166,156,214,111,82,99,47,178,56,102,3,94,172,44,47,54,185,122,139,32,69,45,180,181,38,241,179,152,80,255,182,110,56,19,92,140,92,182,16,27,8,67,47,45,119,139,22,141,77,207,173,92,102,173,43,160,127,102,190,202,188,46,169,205,214,105,182,151,137,168,96,172,17,253,107,213,200,245,76,198,140,1,45,209,106,14,52,146,23,91,45,109,144,37,157,191,47,138,220,8,174,161,170,115,169,186,80,61,27,90,191,111,4,58,139,98,179,60,197,167,124,142,73,13,149,7,81,203,166,151,51,135,230,200,241,3,112,7,113,241,219,255,207,252,181,64,253,137,176,220,216,11,212,105,77,51,80,111,252,159,205,64,105,51,144,54,106,243,11,223,58,183,12,176,77,170,135,180,186,139,172,152,233,221,102,186,167,140,165,97,99,83,226,45,234,140,120,235,56,133,138,236,246,69,56,56,29,219,171,123,179,7,3,142,150,6,17,98,53,211,44,8,58,54,122,147,217,149,135,63,123,127,166,28,109,241,26,221,104,190,254,109,154,160,236,6,15,61,212,26,105,209,81,226,122,230,233,254,85,223,108,202,59,83,132,252,119,226,27,230,215,203,11,245,215,45,26,229,214,184,117,198,141,232,47,233,13,4,84,104,148,85,222,205,211,112,96,199,6,37,254,117,175,220,196,79,119,212,91,191,44,95,174,51,240,243,179,154,4,71,199,166,3,244,204,48,112,202,39,5,91,225,74,51,65,184,45,45,127,194,178,131,195,142,115,91,54,1,186,242,47,78,186,12,102,34,19,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2433ee1c-d882-476a-aa3e-688dee2b58c1"));
		}

		#endregion

	}

	#endregion

}

