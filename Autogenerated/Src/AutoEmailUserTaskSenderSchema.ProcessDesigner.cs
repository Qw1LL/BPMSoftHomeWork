namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: AutoEmailUserTaskSenderSchema

	/// <exclude/>
	public class AutoEmailUserTaskSenderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public AutoEmailUserTaskSenderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public AutoEmailUserTaskSenderSchema(AutoEmailUserTaskSenderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8b81a07e-f5a5-43a1-b7b8-6c4fdaced4b6");
			Name = "AutoEmailUserTaskSender";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("da7de29a-d2b3-4248-bf8e-b7a592dc81f6");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,88,91,111,219,54,20,126,118,129,253,7,78,5,10,25,48,20,108,47,27,146,216,67,146,58,171,129,230,130,56,93,31,138,98,160,101,198,225,42,137,6,73,57,113,183,252,247,29,222,100,138,162,227,184,125,232,75,98,145,135,231,124,231,126,200,10,151,68,44,113,78,208,233,245,197,148,221,201,236,140,113,146,93,115,150,19,33,224,163,186,163,139,154,99,73,89,245,211,171,127,127,122,213,171,5,173,22,104,186,22,146,148,71,205,247,162,96,51,92,28,30,158,177,178,100,85,246,158,45,22,176,188,217,223,112,87,251,177,117,79,208,142,109,135,238,45,17,116,81,17,30,35,7,29,198,149,164,146,18,177,101,251,28,231,146,241,232,254,5,166,69,124,53,155,146,106,238,75,4,59,76,137,148,240,83,160,97,91,64,27,179,71,8,167,225,252,107,78,22,176,129,206,10,44,196,33,58,169,37,27,151,32,226,131,32,252,22,139,47,70,146,38,93,214,179,130,230,40,87,148,219,8,209,33,154,68,207,247,192,105,240,183,145,119,78,73,49,7,129,215,156,174,176,36,102,115,105,62,144,144,128,54,71,156,224,57,171,138,53,154,128,35,209,223,5,252,25,34,248,121,129,43,188,32,60,251,147,72,229,97,194,211,196,250,34,233,27,173,122,175,65,172,145,212,22,11,116,75,194,149,63,182,136,126,207,114,92,208,175,120,86,144,169,228,202,182,151,236,134,228,100,73,73,37,199,156,51,142,134,35,117,160,87,145,135,46,117,10,152,110,136,96,53,207,97,133,113,192,153,246,7,40,217,98,174,100,160,89,245,146,14,35,145,133,114,179,191,112,81,147,164,159,221,50,43,107,47,101,181,243,172,174,198,145,10,10,68,71,69,114,21,26,225,167,74,178,94,111,65,164,138,178,94,79,216,31,79,134,197,193,193,1,58,166,213,61,225,84,206,89,142,14,70,30,227,25,99,5,186,36,100,174,88,78,42,73,56,54,60,135,35,116,135,11,65,118,224,190,32,242,158,109,13,142,73,96,95,20,51,185,133,207,137,172,121,168,90,246,145,241,47,186,218,100,193,57,95,195,157,224,180,98,21,46,60,131,136,186,44,49,95,143,220,194,25,68,176,36,2,54,8,65,57,39,119,195,228,4,32,172,168,92,235,96,176,65,112,48,66,180,130,152,175,0,81,195,235,32,100,118,188,196,28,151,168,130,82,57,76,136,58,126,86,168,224,48,21,100,157,140,52,75,72,79,181,8,118,214,171,217,241,129,62,102,220,195,153,4,19,144,57,90,81,46,107,92,160,8,26,11,58,178,147,142,59,66,81,23,71,96,122,149,37,49,94,221,131,131,192,77,253,189,188,17,137,111,167,228,138,209,57,82,98,181,252,143,84,222,191,37,119,184,46,164,175,214,5,84,15,21,76,196,251,24,152,72,134,234,14,133,84,231,160,112,218,173,48,71,117,11,238,9,87,213,73,169,11,107,66,242,90,41,5,139,117,9,42,166,73,155,56,137,43,171,217,118,45,3,124,117,121,182,159,170,238,29,119,125,49,74,59,128,44,87,122,135,210,159,131,28,0,30,19,113,14,158,174,65,181,74,213,157,121,154,92,21,198,70,42,180,23,166,99,36,125,244,230,13,50,85,170,183,23,19,101,221,164,239,12,166,85,19,38,194,134,223,29,21,170,30,169,3,186,17,166,109,159,129,233,137,165,122,66,4,170,141,143,0,146,112,14,204,41,84,33,11,67,245,211,51,111,213,18,247,222,49,33,129,36,21,186,214,246,189,198,169,212,214,181,56,109,67,131,50,63,45,229,82,29,76,250,182,176,247,174,25,87,108,104,37,179,107,204,5,73,95,206,72,29,109,149,251,134,41,144,79,69,161,208,169,0,221,3,155,113,18,156,221,0,84,116,151,80,83,190,73,87,119,184,205,238,26,98,245,129,241,249,55,179,116,12,146,190,225,250,100,157,46,33,23,156,127,226,169,178,35,11,35,101,115,16,171,97,71,161,16,136,51,29,184,157,60,156,120,225,59,138,196,47,200,30,116,43,69,35,96,195,60,22,202,94,180,186,19,79,40,199,50,191,71,233,248,17,134,3,221,85,73,147,99,61,53,35,101,186,82,165,46,7,108,250,199,138,152,178,232,61,103,15,142,16,106,237,230,223,147,87,125,253,190,62,126,36,121,45,73,218,30,243,44,100,152,56,86,84,165,120,217,254,30,32,59,160,153,211,16,6,96,14,73,30,37,202,205,127,7,73,51,189,37,229,178,128,30,228,152,107,251,233,31,195,144,113,214,66,97,20,105,213,115,75,31,57,9,222,243,41,245,52,101,173,101,73,33,245,178,137,184,172,139,226,138,143,203,165,92,67,10,58,211,41,50,7,43,155,68,141,107,59,160,170,71,206,121,54,140,149,209,117,144,54,78,76,195,105,207,85,176,14,166,115,206,74,64,21,226,121,166,191,217,147,38,12,187,120,45,182,14,90,35,90,23,205,110,42,137,31,221,235,98,152,44,99,175,105,223,208,197,189,198,154,54,246,185,93,47,73,191,177,68,107,25,13,135,168,181,144,169,177,125,19,22,205,169,246,136,212,245,193,7,117,41,115,219,209,166,230,88,13,92,88,14,90,136,163,253,171,97,255,61,28,253,217,172,241,245,83,123,194,214,6,60,39,80,102,198,143,84,72,95,151,231,243,115,128,88,45,145,190,241,174,17,14,204,227,190,85,228,64,74,69,204,234,164,76,230,145,0,183,152,221,253,161,209,197,74,35,1,82,144,18,12,43,134,112,154,223,131,245,188,27,228,196,78,222,167,107,213,200,210,102,64,119,189,199,58,219,156,14,90,150,53,106,40,59,3,170,147,121,73,171,38,252,60,212,186,26,119,78,104,107,171,212,126,123,26,179,199,192,112,216,109,13,207,200,161,140,163,151,184,94,207,202,183,124,189,137,181,93,30,87,236,161,9,169,121,204,252,108,150,88,101,239,203,218,223,14,186,215,195,55,103,92,241,125,182,187,197,154,155,182,230,142,58,108,113,252,145,77,170,21,251,210,20,250,118,243,139,52,61,223,36,91,82,251,69,55,162,1,218,97,67,131,32,214,182,90,55,16,155,200,86,175,216,213,205,77,19,102,200,222,126,145,219,58,241,40,115,198,19,191,157,226,186,118,7,36,155,224,108,197,207,230,32,220,202,225,1,192,195,104,71,158,128,207,64,135,75,80,189,156,207,54,133,123,93,229,224,190,138,126,37,240,152,183,44,8,92,107,157,101,27,208,170,67,133,139,234,224,149,14,173,205,172,239,21,141,14,26,75,114,67,74,182,34,239,97,211,78,130,42,131,220,166,7,6,134,124,40,35,240,50,160,71,92,97,9,109,140,69,203,186,45,96,185,246,214,220,131,178,165,221,216,74,212,68,136,169,12,71,223,98,250,64,230,182,214,225,212,52,92,54,229,105,222,156,180,46,0,163,58,11,133,188,157,7,77,158,109,50,86,4,44,224,113,98,248,124,117,10,74,211,143,201,62,255,98,176,185,210,190,147,101,225,51,218,247,86,187,159,247,226,206,106,61,155,248,131,187,51,112,51,130,167,47,50,204,121,93,229,199,108,246,15,0,253,244,217,88,100,4,85,186,40,78,177,0,217,250,117,73,32,71,96,190,85,252,55,166,178,29,199,29,73,61,138,8,84,237,226,51,213,144,139,61,129,154,78,210,64,221,15,228,11,209,153,219,172,122,113,180,224,88,245,22,75,188,3,96,96,9,195,36,211,3,206,238,55,213,79,87,51,193,148,223,210,228,183,236,151,223,179,95,209,127,246,213,11,81,129,42,38,225,109,65,73,66,184,154,163,7,90,20,104,70,224,229,92,85,43,160,128,173,101,206,96,20,89,160,89,77,225,197,61,233,127,246,244,153,216,107,217,37,147,244,142,66,28,131,102,193,82,170,3,32,36,28,161,25,88,43,88,140,60,253,105,37,67,142,207,189,236,153,213,246,34,172,253,15,124,57,9,210,33,26,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateNoRecepientErrorLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateNoRecepientErrorLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("375faf11-5ab9-484f-9233-56a6e1fa0ff3"),
				Name = "NoRecepientError",
				CreatedInPackageId = new Guid("a1a6f4c5-4ce0-49cf-afb2-f720b4b96f90"),
				CreatedInSchemaUId = new Guid("8b81a07e-f5a5-43a1-b7b8-6c4fdaced4b6"),
				ModifiedInSchemaUId = new Guid("8b81a07e-f5a5-43a1-b7b8-6c4fdaced4b6")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8b81a07e-f5a5-43a1-b7b8-6c4fdaced4b6"));
		}

		#endregion

	}

	#endregion

}

