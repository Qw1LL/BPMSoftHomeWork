namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: UpdateQueueItemsAsyncOperationSchema

	/// <exclude/>
	public class UpdateQueueItemsAsyncOperationSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public UpdateQueueItemsAsyncOperationSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public UpdateQueueItemsAsyncOperationSchema(UpdateQueueItemsAsyncOperationSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("69242731-0c77-4b1b-9e5a-124fa41acd25");
			Name = "UpdateQueueItemsAsyncOperation";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("64ebcdcc-1a9c-4eb3-9403-16c8221d18f7");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,85,77,111,218,64,16,61,19,41,255,97,75,47,70,66,230,158,18,36,74,72,132,170,180,164,36,189,68,57,108,236,49,217,202,94,187,187,107,90,171,202,127,239,236,140,109,176,19,210,30,122,1,118,118,222,155,217,55,31,104,153,129,45,100,4,226,227,250,122,147,39,46,92,228,58,81,219,210,72,167,114,125,122,242,251,244,100,80,90,165,183,98,83,89,7,217,135,222,25,253,211,20,34,239,108,195,43,208,96,84,180,247,89,228,6,186,167,112,169,157,114,10,108,56,183,149,142,190,20,192,145,236,63,186,133,43,237,192,36,152,113,31,113,41,35,151,27,117,104,223,191,233,128,241,200,245,198,113,174,120,251,222,192,22,99,137,69,42,173,61,19,119,69,44,29,220,148,80,194,10,95,108,187,25,17,98,50,153,136,169,45,179,76,154,106,86,159,9,45,74,2,91,241,195,195,133,242,120,193,209,167,22,64,68,6,146,243,225,138,114,171,150,59,208,174,203,62,156,204,132,202,138,20,50,188,34,75,216,132,155,28,196,43,202,199,84,69,34,162,144,111,231,43,206,196,241,112,72,133,5,199,207,86,131,107,112,79,121,140,42,172,41,4,95,82,124,165,159,176,216,46,206,163,191,190,34,92,254,130,168,116,16,220,89,48,216,96,154,27,6,133,56,60,142,197,81,130,185,217,90,33,205,182,244,50,216,17,170,226,211,168,95,189,203,85,44,254,115,4,225,251,126,48,216,73,195,149,155,55,55,226,92,4,36,237,155,76,163,150,201,119,219,96,176,90,200,232,9,168,197,132,44,10,204,154,92,201,138,140,221,44,195,121,207,131,57,174,74,124,38,80,212,85,140,160,54,4,119,54,26,217,47,127,252,142,60,194,82,48,116,235,145,221,55,20,225,109,190,113,6,59,49,24,61,48,82,37,34,96,216,187,115,161,203,52,109,100,32,29,232,230,155,76,177,141,81,131,79,80,209,239,181,84,102,234,83,27,139,11,236,186,91,149,193,108,68,174,204,185,39,37,247,16,113,158,189,43,106,216,138,183,138,219,152,3,3,174,52,186,166,121,166,47,254,196,70,67,156,145,143,41,76,249,237,51,38,244,213,233,49,83,173,234,42,36,152,5,74,32,2,6,53,51,169,107,112,27,153,148,38,27,9,77,191,194,181,81,126,218,112,221,149,153,166,183,212,153,89,18,145,189,62,227,58,237,35,46,148,45,82,121,28,152,168,20,55,26,138,39,91,228,21,184,219,170,128,248,0,51,101,239,89,48,188,36,255,101,172,156,199,12,71,93,54,174,238,6,11,157,201,58,155,126,163,236,47,187,80,201,35,243,66,194,57,217,107,223,118,34,44,175,153,59,167,82,90,171,136,163,141,199,107,184,242,111,152,222,188,230,56,11,52,252,188,127,104,203,140,39,92,224,26,147,40,61,178,137,27,12,187,83,49,28,247,198,100,84,55,70,35,192,171,89,97,17,114,252,171,176,252,242,118,39,210,216,6,109,201,198,77,181,199,47,244,107,44,254,142,5,26,31,84,172,142,205,109,217,159,180,240,43,100,249,14,130,87,6,142,113,8,163,85,11,58,230,109,75,103,182,118,141,104,251,3,55,118,188,13,170,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("69242731-0c77-4b1b-9e5a-124fa41acd25"));
		}

		#endregion

	}

	#endregion

}

