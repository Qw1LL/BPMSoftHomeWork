namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MLModelTrainerJobSchema

	/// <exclude/>
	public class MLModelTrainerJobSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLModelTrainerJobSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLModelTrainerJobSchema(MLModelTrainerJobSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("aefb7462-a622-4629-b00c-1d503eb5e1dd");
			Name = "MLModelTrainerJob";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("73704ec6-562c-4400-8a4a-17477a18625f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,85,223,111,218,48,16,126,166,210,254,135,83,186,135,32,161,176,103,10,72,91,215,78,76,164,170,250,99,175,149,113,14,112,231,216,204,118,90,88,213,255,125,103,39,105,66,40,219,94,130,125,62,223,125,231,251,190,67,177,28,237,134,113,132,47,215,233,173,94,186,228,92,171,165,88,21,134,57,161,85,146,206,63,156,188,124,56,233,21,86,168,21,220,238,172,195,252,172,179,167,43,82,34,247,254,54,249,134,10,141,224,141,207,74,234,5,147,163,209,185,206,115,10,56,215,171,21,153,155,243,38,175,193,247,173,251,144,142,248,92,50,238,180,17,104,233,156,60,78,13,174,200,25,206,37,179,118,4,233,60,213,25,202,59,195,4,193,251,174,23,193,105,56,28,194,216,22,121,206,204,110,90,237,111,112,99,208,162,114,22,54,84,136,206,4,103,18,28,179,63,97,169,13,228,140,175,41,4,72,100,70,121,16,185,143,11,206,7,166,109,82,71,29,182,194,110,138,133,20,28,184,135,114,136,4,70,48,163,159,139,45,242,130,42,32,127,122,111,250,54,37,208,179,58,70,128,70,112,109,196,19,115,88,158,119,209,7,3,117,228,22,157,243,200,20,181,22,158,133,91,119,48,194,198,104,142,182,169,79,184,29,8,5,185,80,133,67,235,75,56,172,161,183,41,83,3,247,104,192,58,227,35,17,238,235,16,164,73,107,175,124,218,9,68,237,66,201,94,250,165,101,142,168,108,82,239,20,85,86,86,185,95,242,165,64,153,117,235,173,17,208,99,56,122,78,131,44,211,74,238,96,70,148,130,7,73,159,9,208,50,101,138,173,208,16,17,157,231,26,154,152,160,68,253,179,118,136,230,110,58,175,1,86,247,224,193,117,12,147,146,68,37,193,118,62,238,248,240,218,52,238,255,163,166,20,221,90,31,45,234,73,139,204,163,191,48,70,155,248,98,203,113,227,201,14,88,175,250,224,101,216,235,249,66,147,224,117,169,77,206,92,28,53,206,207,204,130,91,27,253,172,32,43,66,131,210,121,187,249,84,204,163,94,68,131,86,212,240,44,175,255,139,60,16,249,47,236,187,41,148,103,120,135,112,22,152,202,192,242,53,102,133,68,11,10,183,206,3,57,194,180,96,217,48,195,242,64,225,73,84,88,52,36,2,85,142,152,104,122,79,123,207,195,202,144,140,135,193,251,253,203,97,141,14,141,141,166,94,109,205,126,239,94,165,209,208,134,82,138,24,223,239,229,133,125,24,3,152,125,21,97,69,184,199,165,30,6,160,23,143,116,60,109,101,169,251,38,148,131,165,193,95,5,42,190,35,78,181,20,227,41,245,131,201,2,227,110,138,99,250,26,192,167,178,115,61,177,132,184,21,118,66,7,85,194,146,41,51,181,212,241,199,168,53,22,94,142,5,125,5,10,195,36,81,72,195,111,52,58,129,59,63,245,56,83,28,105,190,103,161,139,212,54,154,41,82,130,210,14,22,94,73,117,95,179,164,18,89,175,103,208,21,38,12,234,192,45,250,58,179,123,131,213,209,87,114,93,142,163,207,82,134,129,97,59,175,80,5,125,37,32,142,175,33,158,41,174,141,161,179,189,127,133,182,98,250,123,47,80,42,10,183,73,74,73,40,97,55,222,187,55,223,148,72,182,170,168,32,172,250,238,82,40,38,105,126,84,238,183,213,27,152,123,39,164,77,234,237,21,17,157,36,113,208,86,207,76,189,140,15,254,10,250,3,146,175,176,131,134,40,53,216,227,42,45,173,251,70,178,253,1,72,161,117,226,216,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("aefb7462-a622-4629-b00c-1d503eb5e1dd"));
		}

		#endregion

	}

	#endregion

}

