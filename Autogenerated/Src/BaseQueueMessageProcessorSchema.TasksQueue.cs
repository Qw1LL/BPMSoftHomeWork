namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseQueueMessageProcessorSchema

	/// <exclude/>
	public class BaseQueueMessageProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseQueueMessageProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseQueueMessageProcessorSchema(BaseQueueMessageProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("151229c5-48aa-47de-b322-2b45835cb899");
			Name = "BaseQueueMessageProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0feb11c-442a-4bb5-a527-aa32bcda81de");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,87,95,111,211,48,16,127,14,18,223,225,40,47,32,85,45,207,219,82,36,42,64,147,24,140,109,124,0,55,185,166,22,137,29,108,103,163,160,125,119,206,127,146,182,110,154,118,218,27,47,91,99,251,238,126,247,187,127,182,96,21,234,154,101,8,31,174,175,110,229,210,76,230,82,44,121,209,40,102,184,20,47,95,252,125,249,34,105,52,23,197,214,1,133,231,221,106,81,202,5,43,207,206,230,178,170,164,152,124,145,69,65,203,180,79,39,94,43,44,72,9,204,75,166,245,25,124,96,26,191,55,216,224,21,106,205,10,188,86,50,163,95,82,185,195,117,179,40,121,6,108,161,141,98,153,129,204,10,13,201,36,4,141,254,110,172,72,65,162,77,102,164,34,99,215,78,157,63,49,157,78,225,66,55,85,197,212,122,214,46,92,10,110,56,43,249,31,212,192,64,224,3,112,146,103,130,168,144,75,48,43,36,17,68,200,20,46,211,209,65,24,163,233,204,35,157,116,134,166,177,165,139,154,41,86,129,32,170,211,81,163,81,17,82,129,153,229,119,52,155,55,74,161,48,96,215,33,235,54,38,23,83,39,213,175,164,36,150,81,141,102,4,227,158,231,36,24,16,219,117,27,148,10,205,74,230,122,88,137,144,134,47,121,159,26,191,147,185,12,232,213,21,98,117,144,149,55,63,118,188,116,206,109,62,199,112,73,105,226,192,162,26,91,125,73,18,171,250,26,192,5,44,168,222,130,205,196,36,137,52,167,145,110,155,152,73,98,179,144,100,211,96,195,47,118,42,211,78,169,219,120,252,63,146,228,121,49,121,10,189,129,176,215,40,114,95,122,187,117,72,22,107,84,134,163,173,66,37,13,73,98,238,143,212,237,39,220,115,101,26,86,194,66,202,18,230,76,184,224,172,33,157,1,149,176,107,47,61,135,93,218,132,216,254,133,2,205,57,104,251,231,113,247,120,228,67,244,57,32,120,48,9,187,31,145,240,16,13,87,190,110,6,56,232,90,29,167,208,134,56,5,203,111,44,148,59,166,127,110,195,161,82,116,255,223,158,15,100,236,13,154,70,9,221,158,133,218,235,181,93,65,55,153,253,9,54,60,190,182,21,234,166,52,96,240,183,57,53,53,51,217,8,227,90,134,213,69,94,40,204,164,202,53,184,141,253,142,163,60,158,217,213,97,60,219,40,46,166,173,64,127,10,16,99,86,244,51,154,111,173,23,183,94,205,29,137,15,210,54,118,60,59,152,109,182,123,91,65,233,228,99,85,155,245,209,150,48,64,240,146,241,146,176,62,153,223,1,142,130,202,103,82,244,201,105,57,202,208,115,104,9,37,66,109,114,33,27,211,199,206,30,45,15,43,84,8,156,242,95,83,107,197,28,243,83,147,48,104,31,205,46,183,186,113,212,137,99,39,109,19,54,43,102,96,197,114,88,32,138,22,27,153,29,156,147,79,205,248,109,217,144,226,163,190,208,122,22,118,123,248,94,48,239,37,207,61,183,235,83,147,123,236,155,106,48,221,198,244,158,169,77,4,110,124,0,210,246,144,159,193,201,251,131,117,213,89,241,229,19,206,159,29,74,178,173,70,21,76,135,144,167,110,134,246,204,167,128,200,99,77,130,233,13,192,112,75,248,182,231,64,228,82,56,119,75,72,136,142,20,94,117,163,37,236,220,200,7,61,183,62,208,166,243,197,45,63,238,222,16,38,129,240,206,107,143,222,187,115,114,219,63,118,1,253,248,27,179,198,80,197,208,37,133,103,7,82,63,76,245,157,116,8,148,157,84,202,54,43,58,238,223,121,55,141,90,183,68,119,91,209,248,217,13,224,35,208,93,48,91,181,66,253,236,140,169,87,149,186,21,73,204,74,201,135,32,190,33,183,71,202,206,251,65,102,253,114,180,26,61,45,14,102,148,59,28,211,111,191,157,32,24,73,56,106,130,98,211,101,175,54,109,87,249,101,53,183,172,218,32,237,197,40,132,200,191,87,6,128,196,239,149,157,123,210,209,215,74,55,38,67,69,12,231,139,235,0,109,21,245,92,90,122,109,248,186,32,159,235,184,213,13,27,179,57,182,169,171,83,173,217,70,97,141,197,99,97,50,104,43,12,183,184,17,156,106,244,83,201,10,27,116,46,114,251,190,193,110,176,74,26,9,160,125,219,88,202,246,217,17,158,64,122,173,13,86,195,192,60,227,94,193,241,91,98,95,78,211,218,63,115,194,161,26,142,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("151229c5-48aa-47de-b322-2b45835cb899"));
		}

		#endregion

	}

	#endregion

}

