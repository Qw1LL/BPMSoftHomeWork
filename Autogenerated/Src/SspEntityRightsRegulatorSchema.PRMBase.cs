namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SspEntityRightsRegulatorSchema

	/// <exclude/>
	public class SspEntityRightsRegulatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SspEntityRightsRegulatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SspEntityRightsRegulatorSchema(SspEntityRightsRegulatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e98ae8a4-6d29-4f42-a417-d516acb01055");
			Name = "SspEntityRightsRegulator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6efc2b6b-5901-4b9d-a21e-e587e5c1977b");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,88,109,79,35,55,16,254,28,36,254,131,155,147,232,34,133,5,122,18,45,61,56,137,144,128,34,149,35,37,220,245,35,50,187,147,100,165,93,59,181,189,164,105,149,255,222,177,189,187,217,119,194,29,156,90,62,132,216,30,207,60,51,243,204,216,14,163,17,200,5,245,128,244,199,55,19,62,85,238,37,103,211,96,22,11,170,2,206,118,119,254,217,221,233,196,50,96,51,50,89,73,5,209,135,108,188,217,16,69,156,213,205,11,168,159,45,218,104,144,25,244,113,1,151,222,9,152,161,20,185,12,169,148,191,146,137,92,12,153,10,212,234,46,152,205,149,188,131,89,28,82,197,133,145,61,60,60,36,103,50,142,34,42,86,31,147,177,217,215,35,203,121,224,205,73,32,73,68,25,157,1,1,163,132,8,240,184,240,137,48,202,220,84,197,97,78,199,34,126,12,3,143,120,90,77,139,245,14,6,10,63,51,184,87,1,132,62,226,29,139,224,137,42,176,139,11,59,64,171,212,231,44,92,145,235,56,240,201,3,23,51,202,130,191,77,52,48,202,23,126,20,176,207,44,80,35,159,156,19,6,75,35,230,116,7,87,167,239,7,151,253,211,131,147,254,224,231,131,193,213,241,241,193,105,255,167,139,131,163,163,227,193,201,209,240,244,253,47,151,39,221,253,15,181,134,62,75,16,24,117,6,158,54,66,30,226,194,184,126,143,84,66,103,229,193,134,106,226,205,33,162,159,144,47,54,47,157,119,192,124,235,108,226,156,13,84,83,136,156,18,132,34,130,94,106,173,108,108,159,104,6,118,58,37,196,24,152,26,23,58,21,172,40,87,3,191,211,89,23,179,117,3,106,206,27,211,245,200,121,72,238,197,234,26,212,237,146,129,64,23,181,51,35,223,49,249,227,122,110,228,247,8,143,21,217,204,76,38,99,43,149,186,80,156,69,100,90,214,29,70,11,181,178,232,39,16,162,51,68,154,127,191,199,32,86,73,254,237,130,83,138,193,190,217,148,252,97,209,132,113,196,156,238,200,239,22,23,174,4,143,156,238,151,37,162,206,152,85,18,249,99,14,2,156,46,170,86,212,67,218,117,247,221,145,28,254,25,211,208,177,106,221,49,21,24,58,5,194,73,188,221,47,106,184,96,72,208,60,119,239,87,11,168,64,41,41,69,123,82,57,125,42,193,124,147,174,142,76,85,73,209,84,135,202,36,30,54,104,185,104,185,195,191,192,139,21,76,144,72,33,220,153,210,62,211,65,254,232,104,82,131,32,231,186,162,241,207,14,93,76,168,133,242,133,134,49,36,162,38,130,54,153,165,60,90,131,2,84,44,88,105,141,252,80,73,231,186,145,68,152,137,219,92,201,167,60,90,80,161,42,76,42,200,101,76,42,204,190,30,147,234,72,212,206,159,148,58,99,46,20,13,47,60,143,199,236,25,2,101,110,102,121,125,150,61,245,196,105,233,155,169,234,239,201,149,98,166,138,92,41,230,107,59,174,140,228,39,0,255,158,15,128,173,48,176,32,165,165,9,166,49,43,212,94,194,146,208,207,166,82,142,36,166,243,210,218,112,94,148,236,237,21,199,47,3,118,45,40,83,111,135,172,188,222,142,236,137,163,53,131,232,70,31,240,152,85,123,254,88,100,178,192,142,4,155,61,24,54,184,74,69,129,55,144,9,82,68,160,204,144,161,66,112,39,160,134,185,195,196,146,230,14,233,145,90,251,13,158,32,116,74,198,44,139,42,39,83,47,179,223,35,53,90,51,117,238,69,24,242,37,86,136,113,46,225,213,215,65,29,250,129,250,222,80,235,210,164,25,253,118,89,186,226,194,131,1,86,186,130,54,176,245,190,55,236,184,93,128,189,172,186,58,221,61,210,18,162,109,51,244,182,48,117,170,255,7,48,173,226,45,128,174,235,239,156,213,251,155,185,132,218,197,242,107,192,76,24,222,129,76,110,252,132,79,137,154,103,175,129,41,23,186,13,17,202,76,51,43,244,237,31,101,122,64,235,103,66,245,157,96,103,80,132,70,132,161,7,231,221,212,131,238,199,145,175,191,79,3,60,85,138,6,151,115,46,33,197,178,12,194,144,60,2,241,230,148,205,192,119,207,14,141,182,122,229,8,111,156,30,164,117,6,18,172,218,130,85,140,47,29,8,158,192,44,166,206,179,28,150,118,115,24,149,173,204,169,57,85,214,94,152,243,172,217,80,242,104,120,10,132,194,243,221,182,7,155,34,203,157,252,61,41,223,42,54,13,41,61,121,50,120,155,147,39,155,74,123,71,48,37,78,221,233,85,220,94,220,185,183,151,92,66,154,238,110,165,205,13,55,183,20,66,167,238,140,42,202,86,138,116,93,1,159,187,19,124,19,246,188,120,30,123,232,223,54,192,175,233,221,21,233,122,7,214,175,86,149,203,255,74,17,38,111,161,58,221,158,189,186,188,98,253,221,62,111,236,213,171,79,155,108,41,187,236,229,155,177,102,185,85,189,109,94,204,185,45,37,178,150,94,218,13,143,236,228,101,214,94,93,27,193,151,149,214,215,192,204,36,75,229,84,7,182,161,150,158,131,107,62,26,75,201,68,64,110,126,223,162,233,175,91,68,113,195,131,124,179,121,121,21,89,98,144,32,227,96,59,111,245,185,128,47,68,189,51,105,52,77,91,83,46,102,247,248,66,235,71,55,90,120,152,89,201,19,175,169,231,45,104,34,188,69,179,126,173,39,65,169,193,39,12,250,198,139,118,77,115,45,221,143,236,108,113,114,189,187,243,47,87,126,108,179,245,21,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e98ae8a4-6d29-4f42-a417-d516acb01055"));
		}

		#endregion

	}

	#endregion

}

