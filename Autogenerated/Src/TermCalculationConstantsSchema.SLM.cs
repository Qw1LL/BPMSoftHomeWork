namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TermCalculationConstantsSchema

	/// <exclude/>
	public class TermCalculationConstantsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TermCalculationConstantsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TermCalculationConstantsSchema(TermCalculationConstantsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("44a1c26f-f10d-44bc-b55d-3aa49d42a06c");
			Name = "TermCalculationConstants";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e9cdff4a-a92d-4d26-906f-df90167f5485");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,84,93,111,155,48,20,125,38,82,254,3,162,47,155,52,175,96,27,176,27,237,193,31,208,237,161,93,180,100,219,51,75,220,8,141,152,136,15,77,81,213,255,62,3,35,75,210,194,26,105,18,15,216,247,222,115,206,61,182,111,93,166,122,99,47,246,101,165,182,179,233,100,58,209,201,86,149,187,100,165,108,62,191,91,228,15,213,123,145,235,135,116,83,23,73,149,230,122,58,121,156,78,44,243,93,21,106,99,214,182,200,146,178,188,177,191,152,162,92,151,106,153,110,149,200,179,122,171,203,174,174,193,180,118,245,143,44,93,217,171,38,119,44,213,106,192,15,208,243,34,223,169,162,74,149,193,159,183,8,45,88,143,86,86,69,163,253,91,146,213,127,112,238,141,118,251,209,110,114,172,141,170,102,221,95,217,255,61,189,84,222,168,248,170,211,234,18,132,43,165,215,157,70,179,234,246,78,182,158,219,179,84,197,86,36,217,170,206,90,23,77,191,101,149,232,170,236,146,15,138,76,176,119,105,164,226,196,164,67,224,175,71,86,131,121,6,90,168,100,157,235,108,223,183,205,147,82,25,120,163,58,41,204,233,47,84,85,153,109,115,16,107,101,127,176,157,227,176,51,235,33,175,175,239,63,47,163,155,131,103,35,52,183,117,186,182,123,4,153,236,251,146,79,107,3,175,213,175,54,225,141,131,2,25,35,23,70,192,103,60,0,24,49,23,176,72,132,0,251,2,134,212,151,4,81,233,188,109,47,230,235,168,62,230,117,49,192,197,67,66,56,150,13,87,68,1,134,17,4,44,70,24,8,137,152,164,81,32,104,16,95,196,117,151,234,186,82,3,108,216,112,197,49,37,32,66,60,6,56,246,41,96,129,136,1,36,56,194,46,193,49,135,175,99,251,158,23,63,205,209,12,123,200,165,224,156,120,20,80,14,141,135,1,12,1,197,65,12,164,235,6,216,103,80,98,215,187,132,105,196,66,200,2,151,68,50,4,210,243,8,192,46,100,128,82,225,2,24,251,4,65,234,69,18,70,151,80,141,58,136,24,199,200,48,2,193,8,54,119,195,243,1,103,8,1,115,102,72,132,62,97,36,118,15,100,253,213,28,27,46,67,138,6,107,76,36,89,53,175,239,121,164,19,58,92,217,190,81,235,133,225,98,30,215,49,106,215,183,243,174,77,63,31,101,103,185,109,216,105,231,208,184,197,195,178,22,102,245,255,27,58,70,253,87,67,199,185,167,13,117,51,230,124,182,182,195,244,104,239,233,55,43,129,130,66,178,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("44a1c26f-f10d-44bc-b55d-3aa49d42a06c"));
		}

		#endregion

	}

	#endregion

}

