namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: IReportEngineSchema

	/// <exclude/>
	public class IReportEngineSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IReportEngineSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IReportEngineSchema(IReportEngineSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("60dd28c3-b84b-c20a-3b0d-4527842a3dc6");
			Name = "IReportEngine";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("3c624d29-361c-47f2-ac8f-7824eb3cde6f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,86,221,79,219,48,16,127,30,18,255,131,85,94,64,154,90,109,143,124,84,218,160,160,74,43,67,45,210,30,16,15,110,114,109,173,37,118,100,59,176,10,237,127,223,249,18,39,110,218,132,118,219,75,193,206,125,254,238,119,119,150,60,5,147,241,8,216,215,135,201,76,45,108,255,90,201,133,88,230,154,91,161,228,241,209,219,241,209,135,220,8,185,100,179,181,177,144,94,52,206,40,159,36,16,57,97,211,191,3,9,90,68,59,100,210,76,73,144,118,162,98,72,234,207,222,231,125,46,250,51,208,47,34,2,146,232,223,112,203,49,16,171,121,100,81,28,21,78,52,44,209,7,187,78,184,49,231,108,10,153,210,118,6,214,162,29,67,18,131,193,128,93,154,60,77,185,94,15,203,115,33,198,76,41,215,247,98,131,64,46,203,231,137,136,88,228,12,111,217,253,128,249,227,111,229,254,65,171,12,180,21,128,49,60,144,98,241,189,233,156,46,198,49,83,11,102,87,192,52,153,117,238,183,253,251,0,238,114,17,59,149,55,182,4,123,225,98,190,96,191,59,172,151,185,45,68,98,65,155,110,219,183,133,80,245,119,95,31,55,128,226,169,144,96,216,235,10,48,19,205,172,66,93,44,51,183,128,250,25,167,127,116,21,11,74,42,205,164,122,39,217,185,82,9,27,155,89,105,160,200,101,103,92,39,32,227,2,124,58,23,183,141,203,157,228,152,130,201,19,219,74,141,71,42,139,19,217,44,146,207,14,237,117,209,69,72,68,102,225,26,103,188,233,238,159,24,83,214,52,70,250,183,224,55,95,91,120,122,102,174,65,60,90,93,5,28,199,216,117,98,33,176,112,85,150,145,210,113,152,240,43,55,85,73,99,182,80,186,197,53,221,104,192,243,79,51,156,130,205,181,52,232,17,128,69,26,22,87,61,71,224,254,40,205,236,186,55,24,58,190,200,10,75,236,117,206,92,203,39,53,87,144,38,41,34,38,178,196,7,101,250,151,3,111,223,57,164,142,152,210,167,186,47,58,179,149,104,53,165,218,49,62,87,185,165,52,235,220,58,219,176,172,227,35,164,89,130,210,206,86,89,143,141,171,61,194,24,253,178,32,141,11,194,37,25,244,70,139,103,99,181,67,168,112,86,43,111,122,58,164,15,70,50,79,125,27,60,174,51,104,109,130,160,191,3,66,88,84,233,226,62,160,249,192,58,59,103,142,149,53,245,119,130,50,17,145,86,6,167,61,251,225,248,215,89,138,167,27,48,145,22,153,43,228,105,111,50,35,149,222,217,179,251,54,49,164,127,197,62,125,236,240,118,203,13,118,36,101,115,128,167,90,171,116,22,152,185,98,159,223,131,125,236,103,194,185,31,10,142,49,173,224,127,145,56,69,118,17,182,142,120,239,233,19,82,244,255,204,32,81,77,142,22,232,26,251,106,143,85,21,113,194,185,187,11,174,11,161,3,204,122,186,238,176,25,144,148,126,246,48,122,143,47,162,198,70,112,64,216,53,51,209,10,135,83,119,244,35,18,157,145,36,89,250,251,38,222,102,211,72,46,177,85,91,249,84,41,96,236,28,11,104,88,110,138,129,30,206,225,34,39,115,16,187,188,227,38,175,38,248,36,80,241,62,164,162,151,33,242,115,99,206,188,10,187,162,115,166,213,11,242,45,198,57,66,231,75,247,42,72,113,169,48,137,24,94,245,252,251,205,237,149,240,45,215,182,164,72,189,169,59,28,75,99,185,140,170,234,6,171,107,243,217,231,220,16,132,49,13,135,121,99,58,42,239,199,47,22,92,91,228,49,220,146,180,29,135,110,16,163,200,60,169,156,54,151,145,161,217,89,108,190,66,135,118,81,173,120,185,241,190,24,86,72,158,110,198,92,225,114,118,209,89,6,116,232,194,72,132,161,119,15,127,225,34,161,248,2,94,180,193,42,36,62,0,133,141,85,84,194,54,14,233,129,175,255,114,86,250,97,228,128,220,3,146,160,14,165,193,112,154,81,49,176,119,93,220,91,37,217,14,191,129,227,20,120,252,93,38,235,111,152,175,71,50,180,238,240,108,70,125,234,33,220,163,91,177,131,255,0,150,196,190,207,67,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("60dd28c3-b84b-c20a-3b0d-4527842a3dc6"));
		}

		#endregion

	}

	#endregion

}

