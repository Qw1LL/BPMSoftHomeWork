namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastConstsSchema

	/// <exclude/>
	public class ForecastConstsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastConstsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastConstsSchema(ForecastConstsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9ddba69f-54ab-463d-85d0-bc0e3119f357");
			Name = "ForecastConsts";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("0db428d0-fc38-40d1-af3f-5cbb75ee95a9");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,84,91,111,155,48,24,125,94,164,252,7,148,167,237,193,19,24,8,70,83,31,240,133,41,210,218,85,35,217,187,3,110,202,100,76,132,141,182,104,218,127,175,33,161,75,115,233,232,36,36,227,239,114,142,125,190,35,183,186,84,27,39,219,105,35,170,79,211,201,116,162,120,37,244,150,231,194,193,247,183,89,253,96,62,146,90,61,148,155,182,225,166,172,213,116,242,123,58,121,183,109,215,178,204,29,109,108,44,119,114,201,181,118,210,186,17,57,215,198,150,107,163,109,81,87,120,82,217,8,94,212,74,238,156,82,25,231,150,255,186,23,77,89,23,154,212,173,221,223,56,48,232,143,112,181,235,115,91,22,207,60,76,153,210,236,178,252,81,84,124,181,40,108,187,18,63,251,146,247,51,156,248,113,236,198,8,36,33,116,65,144,120,24,196,9,134,0,50,18,177,4,209,56,34,241,236,195,235,100,218,52,157,52,171,109,193,141,24,72,245,178,222,218,162,27,103,118,18,159,141,2,123,214,136,203,60,51,188,49,162,184,21,90,243,141,232,32,47,100,223,6,155,61,10,97,142,145,250,192,56,140,47,7,226,86,246,115,166,246,114,203,178,234,207,117,37,53,14,247,142,239,65,186,117,92,199,222,20,203,221,182,239,251,187,91,188,81,141,189,65,142,229,216,71,254,15,103,161,136,144,242,2,90,31,95,141,5,205,132,49,221,106,113,14,191,179,17,158,255,186,254,33,114,243,157,203,86,144,90,182,149,218,235,241,194,243,1,164,233,60,240,25,72,72,128,64,192,230,17,64,105,132,64,8,169,135,48,99,36,245,220,127,121,190,39,99,69,105,248,90,94,103,66,97,226,50,74,9,112,231,190,101,34,52,4,216,163,1,136,82,152,34,152,178,208,11,210,81,76,86,201,202,154,234,42,145,135,3,215,243,34,8,168,71,152,37,138,66,128,66,223,5,36,132,17,196,49,246,33,162,167,68,121,247,252,12,106,95,212,237,238,224,200,163,228,201,12,94,96,156,203,49,0,12,153,215,186,207,174,56,52,31,18,99,166,159,150,138,171,92,124,171,229,217,36,40,101,40,116,49,240,163,152,218,153,135,46,136,99,70,0,158,19,18,120,73,154,66,234,15,2,253,153,78,236,247,4,60,60,107,90,240,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9ddba69f-54ab-463d-85d0-bc0e3119f357"));
		}

		#endregion

	}

	#endregion

}

