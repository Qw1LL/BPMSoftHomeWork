namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForFreeOperatorRoutingRuleSchema

	/// <exclude/>
	public class ForFreeOperatorRoutingRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForFreeOperatorRoutingRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForFreeOperatorRoutingRuleSchema(ForFreeOperatorRoutingRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("289920d1-619f-499a-989e-72bdeaf05bf9");
			Name = "ForFreeOperatorRoutingRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e4f7a9b6-58b1-45d5-9bbc-68954d2de669");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,223,111,219,56,12,126,246,128,253,15,156,15,24,28,92,225,188,111,77,134,54,77,135,0,237,53,151,174,119,207,170,205,52,194,217,146,171,31,189,101,67,254,247,163,36,187,182,19,39,219,238,165,173,36,242,35,63,242,35,93,193,74,212,21,203,16,46,151,183,247,114,109,210,153,20,107,254,100,21,51,92,138,244,174,20,60,219,48,33,176,72,111,81,107,246,196,197,211,219,55,223,223,190,137,172,166,63,225,126,171,13,150,31,247,206,132,82,20,152,57,8,157,126,70,129,138,103,7,54,55,92,60,183,151,109,252,178,148,98,232,94,225,240,109,122,117,73,15,244,244,155,194,39,138,8,179,130,105,253,1,174,165,154,191,160,218,74,129,119,21,18,33,169,86,210,26,114,95,217,2,189,199,120,60,134,115,109,203,146,169,237,180,62,59,27,212,64,172,13,172,165,130,181,66,4,89,3,164,141,211,184,227,85,217,199,130,103,144,185,176,46,234,53,121,12,68,132,15,112,201,244,112,46,17,85,148,126,182,20,168,112,70,217,140,236,136,201,210,7,8,22,251,41,251,139,133,224,134,179,130,127,163,196,5,254,11,156,188,153,160,174,202,53,25,83,254,153,194,245,36,62,158,91,60,158,58,106,135,220,194,77,197,20,43,65,144,88,38,177,213,168,40,61,17,218,27,79,59,248,15,253,167,241,244,53,145,244,124,236,49,60,100,93,175,227,217,36,125,32,232,135,28,81,33,31,169,144,201,254,245,119,216,213,85,68,145,135,66,246,171,186,84,174,143,134,227,80,77,185,216,144,76,77,46,179,154,205,145,102,165,11,61,35,109,92,113,106,16,127,36,173,228,95,228,69,81,52,150,154,104,119,72,74,82,160,226,57,194,163,148,5,252,192,21,38,83,88,179,66,59,161,159,226,113,139,102,35,115,71,66,241,23,102,130,150,163,42,28,224,69,242,28,238,209,132,80,138,170,131,121,19,34,249,108,233,209,105,123,145,159,129,59,124,130,124,207,102,145,195,4,132,45,10,170,168,195,141,28,80,243,56,99,217,6,211,21,150,68,172,1,119,239,73,192,28,185,17,141,162,23,166,192,86,185,203,102,226,5,249,224,15,123,125,61,131,216,237,23,231,30,143,188,95,148,82,222,73,188,159,245,34,143,207,104,36,10,91,138,116,233,100,132,6,85,114,152,55,1,58,74,241,136,208,32,2,135,247,55,53,21,147,152,16,70,212,184,249,179,101,69,114,128,84,231,94,39,31,18,79,231,95,49,163,22,37,225,118,247,211,29,145,198,103,245,127,148,181,228,217,63,15,149,27,138,63,45,218,87,19,237,187,22,218,53,106,228,213,196,105,21,118,67,178,58,119,54,83,56,9,212,107,63,60,59,3,34,95,247,218,117,206,109,188,142,38,73,75,90,19,201,21,86,82,115,186,219,210,74,55,164,219,11,234,226,75,7,124,84,87,59,99,78,200,25,75,93,103,125,2,218,125,86,12,163,109,144,52,241,66,191,223,191,135,119,97,40,110,120,201,205,252,107,134,152,99,78,16,77,55,248,26,146,119,189,140,210,11,177,77,70,77,194,209,49,165,247,4,25,41,52,86,9,175,197,182,78,117,111,93,115,59,212,251,180,136,127,47,122,173,211,59,149,163,186,220,182,92,187,195,160,103,210,10,3,191,187,251,128,214,222,54,66,255,178,65,65,254,210,185,203,244,134,105,207,226,34,203,176,34,148,43,82,96,99,121,205,149,54,119,234,10,215,204,22,166,201,249,52,237,179,1,38,169,155,190,215,138,28,41,8,45,209,163,158,176,235,142,194,175,73,155,20,211,93,35,201,15,180,236,165,57,228,83,139,183,43,87,141,238,95,141,122,209,220,251,195,222,162,105,42,25,6,63,137,59,123,101,255,105,96,245,4,147,244,90,201,50,217,95,88,191,182,95,128,233,58,193,118,77,186,183,222,230,117,44,211,121,89,153,109,48,10,244,154,117,180,66,70,194,75,148,255,229,180,83,79,129,175,141,236,226,4,19,95,120,159,207,95,172,176,88,183,185,87,129,143,29,132,193,111,193,73,164,161,130,213,136,110,116,219,148,168,60,127,72,227,137,117,166,55,58,224,223,122,212,48,59,64,250,36,130,67,59,76,175,135,10,180,78,22,186,121,12,26,30,240,57,21,253,208,186,201,34,108,138,254,244,244,221,79,124,40,194,109,255,114,247,31,29,107,79,49,125,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("289920d1-619f-499a-989e-72bdeaf05bf9"));
		}

		#endregion

	}

	#endregion

}

