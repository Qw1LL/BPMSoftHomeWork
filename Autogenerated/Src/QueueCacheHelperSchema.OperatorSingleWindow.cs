namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: QueueCacheHelperSchema

	/// <exclude/>
	public class QueueCacheHelperSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public QueueCacheHelperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public QueueCacheHelperSchema(QueueCacheHelperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f0ca6f55-e26d-43ea-9e90-79e4972683b0");
			Name = "QueueCacheHelper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("32e311e2-322a-4bd2-a082-89dd3de597a9");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,84,223,79,219,48,16,126,14,18,255,131,21,94,138,180,166,8,216,42,6,84,42,109,97,104,192,24,104,218,195,52,85,198,185,182,222,18,59,248,71,183,106,226,127,223,217,78,11,73,211,137,135,189,68,241,249,124,247,221,119,223,157,160,57,232,130,50,32,103,183,215,247,114,98,146,129,20,19,62,181,138,26,46,197,246,214,159,237,173,200,106,46,166,47,28,242,92,138,227,6,187,130,102,107,50,18,134,27,14,122,195,245,189,9,79,241,118,71,193,20,243,146,65,70,181,126,79,62,91,176,48,160,108,6,31,32,43,64,121,159,78,167,67,78,180,205,115,170,22,189,242,124,171,228,156,167,160,9,37,204,185,19,35,137,118,97,201,68,193,163,5,97,178,5,161,140,129,214,144,18,52,88,32,41,53,52,89,198,235,188,8,88,216,135,140,51,194,28,134,6,8,17,114,130,223,21,214,115,14,89,138,96,111,21,159,83,3,225,178,8,7,4,129,68,50,162,128,166,82,32,6,109,148,171,127,12,191,11,174,224,66,73,91,124,132,5,57,37,177,79,52,68,76,75,227,120,239,237,168,127,48,220,31,182,71,253,119,71,237,195,131,126,183,125,212,63,218,111,159,119,15,15,206,246,14,187,163,238,176,27,31,191,38,155,231,228,210,64,126,131,253,174,36,251,63,121,46,61,65,190,143,100,76,139,2,233,243,250,241,102,204,231,111,18,127,250,230,191,87,48,135,44,233,63,123,126,119,225,163,228,43,55,179,43,201,104,230,188,16,250,39,140,222,170,145,181,91,129,178,194,224,69,182,184,199,224,57,197,242,212,2,73,214,143,205,190,95,52,40,20,186,0,230,114,147,177,173,156,131,20,163,29,16,105,104,113,181,223,232,136,188,90,134,53,185,174,123,177,4,143,186,50,189,97,128,89,141,87,166,128,95,132,227,91,42,112,222,228,132,24,228,230,68,3,16,166,96,114,26,215,149,22,119,122,196,44,10,112,26,93,23,105,176,20,84,209,156,8,236,234,105,92,45,34,238,185,34,9,91,25,146,147,142,247,110,126,140,84,197,189,59,40,20,104,28,22,237,70,4,25,156,72,229,81,134,129,145,15,63,48,20,209,158,226,74,184,114,98,234,21,180,106,60,87,17,190,105,104,25,194,216,37,110,231,68,81,213,57,25,204,128,253,236,171,169,205,17,223,141,205,178,86,189,224,160,139,8,67,52,57,187,2,75,143,90,187,81,159,107,253,95,198,41,245,187,166,233,154,203,139,209,170,206,90,153,16,29,241,106,41,199,167,127,235,11,119,25,114,231,246,229,43,212,117,1,216,44,183,201,150,130,242,61,216,32,153,178,77,129,246,129,204,178,146,0,135,86,151,180,79,193,148,127,145,2,99,21,78,135,43,19,243,212,159,181,106,60,150,236,62,189,162,196,107,48,51,233,119,102,89,95,20,109,158,159,12,168,210,97,173,167,171,165,189,185,186,114,55,205,37,79,195,91,223,161,214,82,86,107,173,76,70,207,219,165,121,213,52,188,185,131,92,206,161,85,109,118,240,110,46,61,88,171,70,180,253,5,221,167,33,255,128,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f0ca6f55-e26d-43ea-9e90-79e4972683b0"));
		}

		#endregion

	}

	#endregion

}

