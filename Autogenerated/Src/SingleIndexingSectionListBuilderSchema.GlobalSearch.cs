namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SingleIndexingSectionListBuilderSchema

	/// <exclude/>
	public class SingleIndexingSectionListBuilderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SingleIndexingSectionListBuilderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SingleIndexingSectionListBuilderSchema(SingleIndexingSectionListBuilderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b0d0400c-be97-4c80-b4ab-924948561d23");
			Name = "SingleIndexingSectionListBuilder";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("22387ba7-4aa5-4ad3-8c5e-98af882ce17b");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,84,223,107,219,48,16,126,118,160,255,131,232,6,117,193,115,216,107,215,22,210,44,13,101,43,100,113,183,61,14,197,190,36,2,89,114,244,35,171,9,249,223,123,178,236,198,142,75,75,11,126,176,238,190,187,251,190,211,233,4,205,65,23,52,5,114,51,187,79,228,210,196,99,41,150,108,101,21,53,76,138,120,202,229,130,242,4,168,74,215,39,131,221,201,32,176,154,137,21,73,74,109,32,255,118,116,198,96,206,33,117,145,58,158,130,0,197,210,3,230,80,65,193,203,214,120,34,12,51,12,52,186,17,240,73,193,10,83,145,49,167,90,95,144,4,225,28,238,68,6,143,248,151,248,58,63,153,54,55,150,241,12,20,70,224,87,216,5,103,41,73,93,204,155,33,228,130,188,154,207,9,118,73,15,84,80,153,81,54,53,82,33,163,89,85,171,193,12,135,67,114,201,196,26,85,155,76,166,195,107,103,172,233,188,69,36,252,173,65,97,114,225,61,196,118,142,231,200,115,65,53,132,199,230,221,254,153,32,136,204,115,60,166,124,15,102,45,51,199,86,73,131,129,144,189,78,184,65,17,185,5,165,88,6,207,45,170,110,167,36,83,48,93,75,248,3,202,63,148,91,152,81,166,46,177,63,232,137,136,247,37,233,26,114,250,203,130,42,175,9,84,166,234,128,220,93,181,96,75,21,97,221,252,87,149,214,184,95,166,29,238,6,40,8,186,145,241,157,246,125,198,20,120,73,213,144,5,129,2,99,149,56,42,82,185,246,239,109,68,79,146,235,69,2,110,228,111,165,170,216,86,207,38,108,3,107,213,254,208,150,13,122,131,68,49,195,119,88,78,244,38,236,224,58,220,17,249,49,194,91,201,50,50,42,10,94,206,20,203,169,42,241,129,218,92,204,45,135,176,39,198,251,72,225,145,200,200,27,162,138,73,95,58,146,138,136,191,236,94,204,136,51,170,219,90,151,140,27,124,110,87,46,42,30,43,160,6,110,43,211,95,102,214,51,170,112,13,225,65,135,222,56,150,121,65,21,211,82,60,148,5,110,133,141,165,60,122,185,72,68,170,26,193,212,178,44,158,228,133,41,35,114,248,175,219,232,138,250,204,58,30,101,89,232,217,156,127,172,167,181,100,119,243,27,254,0,143,166,223,73,167,178,81,95,195,181,199,182,134,187,137,118,88,79,179,134,50,225,185,34,246,243,233,217,110,183,59,232,217,239,247,103,17,233,219,78,59,227,82,215,138,231,80,112,92,237,97,147,48,34,255,88,230,150,206,61,77,149,108,201,127,95,3,152,48,135,169,157,203,255,99,105,133,9,27,189,53,135,47,95,155,244,189,237,228,74,186,237,222,182,157,12,208,250,4,134,26,143,75,141,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b0d0400c-be97-4c80-b4ab-924948561d23"));
		}

		#endregion

	}

	#endregion

}

