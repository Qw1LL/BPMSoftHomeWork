namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CaseMessageListenerSchema

	/// <exclude/>
	public class CaseMessageListenerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseMessageListenerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseMessageListenerSchema(CaseMessageListenerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("aeb83d7e-bd4f-4fc4-aca2-39d357ab89e4");
			Name = "CaseMessageListener";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("080146f8-bb59-4a0f-bbe7-1f7bf34882f8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,87,109,79,227,56,16,254,190,210,254,7,95,79,218,11,82,137,128,187,61,216,242,34,149,66,185,158,40,139,40,123,247,97,181,66,110,50,109,179,164,113,228,56,64,133,250,223,111,198,113,218,56,73,95,224,219,5,9,213,241,204,120,230,153,103,198,147,52,9,162,49,27,135,98,200,195,86,171,35,166,83,17,185,215,98,60,198,215,199,31,63,164,122,123,48,75,20,76,75,75,183,35,194,16,60,21,136,40,113,175,32,2,25,120,11,145,243,219,254,64,140,20,202,72,168,125,233,118,185,167,132,12,32,169,223,30,120,19,240,211,16,100,233,212,1,40,133,171,132,157,218,242,29,17,141,130,113,42,57,249,227,162,108,46,136,250,244,23,241,41,36,49,247,160,160,86,208,248,248,225,149,164,24,62,191,74,24,227,27,214,9,121,146,180,88,135,39,208,135,36,225,99,184,14,208,3,140,51,151,140,211,97,24,120,204,35,193,58,57,214,98,231,117,218,164,187,56,206,58,18,161,84,60,82,120,236,173,12,158,184,130,162,84,156,189,98,30,73,177,68,73,66,229,167,24,222,96,104,8,71,131,60,184,21,82,241,208,156,216,79,67,21,92,243,104,156,226,226,86,10,15,95,255,45,134,141,227,205,54,175,164,72,227,183,26,214,74,117,214,49,40,133,64,73,224,190,136,194,25,235,33,193,216,67,136,255,78,25,254,236,243,8,237,72,36,145,34,230,129,116,244,145,37,220,26,59,199,22,102,16,249,25,108,117,72,118,3,8,253,245,48,46,188,249,150,128,68,228,163,140,203,236,33,181,214,199,107,52,175,210,192,103,15,177,134,230,70,168,96,20,128,236,249,24,84,4,207,122,211,105,236,117,254,220,191,104,31,181,119,15,219,7,95,118,255,56,232,236,237,126,57,58,60,220,221,59,186,248,220,189,236,238,127,238,30,28,233,200,54,28,226,45,114,144,29,228,105,218,26,236,123,254,27,160,209,36,147,41,85,31,226,163,41,108,193,147,145,186,38,1,78,9,40,27,167,29,100,251,16,149,156,242,235,215,165,109,122,254,66,107,66,206,168,190,167,188,200,48,115,154,217,47,210,168,162,118,7,35,144,16,121,128,45,40,157,70,69,43,61,191,172,153,187,159,169,126,211,249,33,73,141,67,226,210,207,197,86,73,245,6,192,239,76,192,123,188,124,209,70,60,248,58,186,3,79,72,178,129,24,66,73,190,68,29,20,90,201,37,45,190,33,169,168,111,55,61,170,144,127,120,152,194,9,145,226,172,4,117,211,182,78,207,118,165,219,104,106,146,185,151,211,88,205,138,92,156,111,207,170,62,168,137,200,42,78,40,244,7,124,187,230,204,75,214,211,30,165,201,36,175,23,134,49,21,215,78,133,49,18,84,42,77,63,206,110,141,25,1,113,82,49,117,230,80,221,21,248,221,150,227,116,10,145,114,26,54,82,24,112,41,85,59,43,195,94,186,254,36,176,16,239,210,60,63,142,46,76,169,233,208,243,43,94,175,45,22,204,236,234,54,67,207,80,136,144,5,73,150,126,50,133,26,35,30,38,101,198,5,35,230,148,44,185,157,84,98,113,40,210,114,151,175,239,103,49,22,201,169,246,139,126,187,131,193,109,197,105,122,54,121,234,182,227,184,176,90,186,184,50,24,237,168,29,75,77,241,208,67,119,130,219,139,70,162,43,228,148,99,222,76,44,218,41,166,40,132,32,97,232,185,171,227,160,194,111,177,215,189,121,115,145,7,92,238,207,171,249,181,64,33,181,165,70,49,243,58,251,12,16,231,58,100,182,243,238,230,235,253,86,30,190,223,193,26,10,108,234,36,191,156,50,31,70,28,139,95,211,118,167,54,243,79,92,178,105,118,23,87,90,151,107,108,101,173,210,220,216,199,245,54,226,162,40,90,50,54,221,110,16,249,61,228,192,249,12,91,237,70,159,203,97,231,177,218,214,49,176,40,13,195,218,120,232,185,8,180,251,92,206,78,178,233,166,201,196,240,39,198,116,198,98,46,17,103,5,146,134,73,234,28,107,100,87,88,167,231,181,145,93,9,120,243,44,115,86,202,209,34,117,53,49,213,50,203,160,64,147,147,164,214,207,158,3,53,41,82,104,143,40,180,138,33,249,131,149,186,152,163,221,123,25,208,108,133,115,154,147,69,71,205,1,49,119,204,8,217,100,141,135,162,205,166,53,7,54,237,172,102,20,93,13,74,137,60,255,10,249,168,167,111,67,237,141,220,95,230,166,105,181,142,157,119,1,136,205,251,205,248,173,110,3,235,206,179,202,131,186,1,145,147,141,132,180,207,206,16,48,205,97,223,44,237,94,141,27,7,115,151,229,113,60,243,228,55,149,71,83,112,125,11,44,183,190,30,106,97,120,127,115,220,102,244,96,137,78,45,75,242,207,58,132,12,104,12,249,191,98,54,223,56,70,136,39,144,50,240,33,187,227,123,17,218,84,6,161,234,236,163,91,114,182,73,216,98,163,162,25,219,205,39,158,254,114,171,118,128,208,198,239,32,65,228,115,213,210,129,37,53,61,211,80,99,214,211,103,225,100,55,31,163,147,11,174,248,247,202,80,253,163,102,48,177,142,255,244,41,59,223,156,92,252,92,58,173,126,67,213,246,115,37,103,171,234,145,112,202,211,91,114,60,55,154,119,233,109,59,200,247,236,115,66,115,234,7,219,146,205,19,145,134,62,27,194,162,239,16,141,141,134,97,241,93,105,14,40,250,106,36,139,84,205,146,177,170,239,21,198,209,245,205,12,27,189,55,97,206,229,139,7,177,158,235,224,101,229,157,169,161,184,148,82,200,42,22,191,35,22,109,212,166,93,38,60,47,149,212,92,39,65,8,203,187,202,220,20,165,184,59,60,12,7,138,123,143,166,124,123,88,70,114,225,79,139,96,70,52,224,101,9,2,254,214,10,247,18,111,14,189,180,117,214,129,83,115,1,87,62,52,50,106,204,110,224,57,47,135,122,123,37,91,230,123,164,200,238,109,190,153,172,77,251,99,106,254,31,116,194,38,240,134,19,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("aeb83d7e-bd4f-4fc4-aca2-39d357ab89e4"));
		}

		#endregion

	}

	#endregion

}

