namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastColumnSettingsMapperSchema

	/// <exclude/>
	public class ForecastColumnSettingsMapperSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnSettingsMapperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnSettingsMapperSchema(ForecastColumnSettingsMapperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9177fffe-d3e8-4d30-8661-d77d7d6e57f8");
			Name = "ForecastColumnSettingsMapper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,88,75,111,227,54,16,62,123,129,253,15,131,236,69,6,2,25,232,49,177,29,52,206,122,225,162,118,130,117,211,30,138,30,88,105,100,19,149,40,149,164,178,112,23,249,239,29,138,148,101,189,188,74,178,189,245,18,155,28,206,55,239,135,35,88,130,42,99,1,194,237,195,122,155,70,218,95,164,34,226,187,92,50,205,83,225,47,83,137,1,83,250,215,31,222,191,251,250,254,221,40,87,92,236,96,131,95,116,42,148,121,254,147,74,197,245,145,176,61,40,141,73,243,236,255,204,197,223,213,101,37,41,73,78,153,235,247,13,228,138,40,177,251,214,95,178,64,167,146,163,106,211,55,57,247,183,40,159,120,128,235,52,196,216,191,99,154,145,165,90,18,15,61,39,134,15,18,119,100,49,172,132,70,25,145,71,174,96,85,90,191,72,227,60,17,91,212,154,64,213,154,101,25,202,130,41,203,255,140,121,0,188,228,249,22,203,136,124,72,127,143,194,214,168,247,105,168,174,224,161,0,178,196,201,100,2,83,149,39,9,147,135,121,121,241,9,181,2,189,71,136,156,0,8,10,9,160,156,8,8,201,36,136,100,154,52,159,248,71,208,73,19,117,154,49,201,18,16,148,5,179,139,92,161,36,159,8,12,76,232,47,230,143,116,38,136,242,130,172,84,154,137,0,253,233,164,96,235,70,177,50,47,230,203,134,18,45,38,137,58,151,66,205,23,29,118,76,39,37,213,60,175,251,210,132,206,184,163,219,211,134,234,61,214,44,129,186,97,151,6,114,84,231,118,74,142,109,42,140,62,160,8,109,132,138,243,179,77,144,250,101,25,194,69,204,148,26,146,43,191,223,97,196,242,88,223,114,17,18,201,211,135,12,211,200,59,203,56,30,255,81,101,89,96,36,193,185,231,112,245,250,4,148,252,137,105,180,212,204,30,64,105,105,170,136,156,109,209,54,20,97,175,168,181,143,66,115,77,165,102,191,28,182,193,30,19,6,120,114,184,132,79,57,15,157,99,31,87,225,24,76,255,24,141,108,96,107,79,169,124,205,35,229,47,185,84,250,94,58,71,121,1,204,230,16,248,196,12,179,217,9,210,141,111,20,49,85,238,66,211,140,77,151,121,169,166,240,99,88,26,232,142,240,196,165,206,89,12,29,57,182,228,113,92,94,124,35,165,160,59,157,156,201,53,108,8,145,120,57,139,249,63,36,126,6,166,205,249,119,213,221,180,246,122,238,185,242,41,21,49,41,90,64,246,6,65,217,143,89,67,199,218,163,53,19,108,135,210,167,200,174,92,85,223,30,200,181,222,169,114,254,54,205,101,128,198,227,165,208,150,143,142,85,59,3,129,95,186,188,104,93,48,178,88,86,7,19,61,98,176,138,22,177,180,53,57,250,140,17,74,36,101,170,116,163,119,53,157,232,137,37,62,48,189,135,155,155,70,114,90,204,203,30,30,178,196,73,122,32,106,26,246,139,57,165,191,64,210,41,91,37,108,153,139,160,95,84,69,125,129,160,138,169,41,38,236,17,16,150,78,38,29,3,170,190,123,234,7,76,152,12,108,90,112,66,45,145,121,76,3,174,8,103,19,251,72,241,87,106,147,234,77,30,199,247,242,99,146,233,131,55,134,27,203,62,106,229,184,101,83,115,175,7,108,76,157,76,16,148,149,255,124,125,218,57,202,148,123,89,253,255,63,95,251,231,171,155,47,255,197,152,237,153,179,174,43,184,222,182,216,99,240,215,143,114,151,39,148,121,38,131,60,179,74,208,108,116,175,93,251,225,17,52,187,161,73,186,34,227,126,219,115,141,91,179,200,122,227,18,189,76,24,147,72,22,225,121,64,27,171,117,253,102,155,175,214,132,225,249,56,104,125,104,235,84,188,106,174,130,230,252,25,51,73,85,35,104,31,236,90,1,205,182,215,90,246,92,132,105,3,211,84,108,110,147,232,146,217,220,15,104,110,82,39,48,67,102,104,13,165,210,232,99,119,85,19,70,72,163,226,187,42,6,128,155,251,231,86,210,39,22,231,120,60,254,50,16,166,226,114,182,186,221,165,53,119,190,194,14,245,181,209,241,26,158,95,107,140,44,7,149,83,100,192,166,125,222,172,10,176,133,212,103,89,215,176,252,46,198,101,197,16,123,179,73,125,48,125,246,180,70,242,119,49,38,162,225,87,116,167,183,154,211,15,212,103,80,99,236,191,218,156,168,24,139,199,226,30,174,126,55,99,75,93,55,140,221,167,93,218,94,173,107,229,165,16,95,168,109,15,235,121,247,134,111,112,44,101,168,217,117,192,180,184,226,223,29,246,155,8,135,43,238,214,165,14,198,51,105,126,186,126,117,40,63,224,215,39,189,252,23,205,237,33,119,186,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9177fffe-d3e8-4d30-8661-d77d7d6e57f8"));
		}

		#endregion

	}

	#endregion

}

