namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: StatusValidationRuleSchema

	/// <exclude/>
	public class StatusValidationRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public StatusValidationRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public StatusValidationRuleSchema(StatusValidationRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cdd50151-87d2-40cc-8e2c-6723fe839559");
			Name = "StatusValidationRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bbfdb6d8-67aa-4e5b-af46-39321e13789f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,86,77,111,219,56,16,61,187,64,255,195,172,186,7,25,27,208,104,47,5,82,219,64,147,117,90,23,73,27,84,233,238,33,200,129,150,198,14,17,153,84,249,225,214,219,230,191,239,144,212,151,99,183,240,69,150,134,195,55,51,228,155,55,150,124,141,166,226,57,194,217,245,85,166,150,150,157,43,185,20,43,167,185,21,74,62,127,246,227,249,179,129,51,66,174,32,219,26,139,235,55,79,190,217,165,144,95,59,99,135,162,241,176,149,253,125,70,11,180,52,26,141,96,108,220,122,205,245,118,90,127,127,198,74,163,65,105,13,216,123,132,202,111,54,168,55,130,18,228,149,128,13,47,69,17,50,3,237,74,100,13,204,168,135,83,185,69,41,114,200,75,110,12,100,150,91,103,254,105,183,125,166,93,112,10,243,43,46,74,2,247,203,184,187,74,8,84,51,61,7,47,52,174,124,164,107,173,42,212,86,160,57,245,239,22,115,139,69,116,121,90,67,48,220,80,230,92,107,190,5,181,4,19,18,64,3,124,67,33,249,130,194,47,149,6,252,142,185,11,117,44,92,249,0,184,166,69,95,205,126,57,131,219,79,11,163,74,180,152,38,175,217,203,215,236,21,252,132,47,6,161,95,2,123,219,160,95,40,61,107,176,179,38,182,144,116,85,188,96,201,240,206,35,86,77,17,176,17,218,58,94,194,59,39,138,219,59,248,61,138,167,194,96,176,66,91,191,13,52,90,167,37,72,252,70,123,107,219,160,78,139,104,100,172,97,103,84,221,204,23,23,81,174,75,46,37,22,243,226,228,24,111,122,106,235,183,28,189,227,109,110,197,6,143,116,158,105,173,244,209,169,168,170,242,105,68,231,71,207,109,250,241,207,199,154,45,40,139,72,152,93,246,92,161,189,87,69,160,142,216,208,85,197,213,42,126,132,131,135,119,104,159,132,75,131,125,209,24,41,73,127,229,154,114,147,116,113,30,214,237,124,14,235,227,223,112,77,253,82,146,17,38,254,94,32,11,31,233,19,239,88,4,187,81,85,250,178,249,56,87,165,91,203,52,137,9,204,139,164,89,184,208,106,157,38,109,130,173,253,223,123,212,196,73,239,201,230,102,246,149,120,148,70,16,118,205,53,233,138,69,157,246,74,24,14,129,155,58,161,120,124,49,83,150,85,152,139,229,246,163,186,84,249,195,123,65,205,159,14,163,67,77,176,218,47,50,18,179,156,151,92,143,253,9,77,107,199,163,175,32,72,195,175,91,119,80,135,232,235,140,239,214,182,138,186,157,91,241,57,208,174,193,82,249,3,0,73,135,48,73,252,22,76,166,94,21,194,107,64,236,2,176,241,40,120,119,155,99,213,102,58,39,34,114,73,202,71,50,50,54,136,144,107,92,78,146,158,92,145,116,19,91,49,25,77,65,119,202,217,23,73,52,174,36,54,143,71,13,104,32,95,84,200,125,160,198,132,105,95,92,98,218,125,138,117,231,49,137,139,126,106,88,252,110,187,182,153,73,43,236,246,205,254,150,121,65,155,218,47,70,220,191,217,82,103,69,230,80,124,135,245,213,6,102,29,0,104,8,74,48,7,26,103,167,103,118,115,219,237,160,26,122,161,84,9,194,28,84,190,182,186,223,234,98,192,231,36,177,233,94,138,117,12,177,132,244,143,95,196,104,142,181,145,159,47,150,126,252,172,97,151,106,197,230,114,169,210,228,246,208,20,99,205,93,221,65,2,127,213,26,22,218,52,78,19,42,10,164,178,164,253,52,108,170,40,247,145,189,140,166,34,86,189,17,68,45,135,90,187,138,92,24,156,105,228,15,32,200,18,233,217,67,255,147,196,1,171,83,248,17,79,165,190,186,116,200,62,18,209,31,79,32,233,28,219,90,219,1,24,182,105,170,144,125,80,130,116,6,146,147,99,78,119,232,113,123,25,144,194,251,129,21,81,9,115,239,204,31,79,160,229,196,188,232,123,208,90,67,168,222,232,58,212,6,205,44,203,92,158,35,253,139,152,192,146,151,6,155,73,113,153,255,151,133,82,206,85,129,180,88,107,102,7,116,65,209,176,72,246,103,197,113,113,187,176,86,59,255,135,164,1,57,172,115,193,74,143,255,1,164,3,114,209,204,9,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateStatusValidationFailedLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateStatusValidationFailedLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("85992a83-ec04-453e-82ba-ff4c8579627e"),
				Name = "StatusValidationFailed",
				CreatedInPackageId = new Guid("bbfdb6d8-67aa-4e5b-af46-39321e13789f"),
				CreatedInSchemaUId = new Guid("cdd50151-87d2-40cc-8e2c-6723fe839559"),
				ModifiedInSchemaUId = new Guid("cdd50151-87d2-40cc-8e2c-6723fe839559")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cdd50151-87d2-40cc-8e2c-6723fe839559"));
		}

		#endregion

	}

	#endregion

}

