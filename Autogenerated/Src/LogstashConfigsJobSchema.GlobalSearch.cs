namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: LogstashConfigsJobSchema

	/// <exclude/>
	public class LogstashConfigsJobSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LogstashConfigsJobSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LogstashConfigsJobSchema(LogstashConfigsJobSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("36403bfb-5e11-45bd-984b-85bda8e31923");
			Name = "LogstashConfigsJob";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("eef27540-b1e9-466b-87b9-62933f9468f4");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,84,193,142,218,48,16,61,103,165,253,135,17,123,201,74,40,169,122,164,16,169,165,11,74,85,164,85,209,238,21,153,100,18,188,114,108,100,59,116,209,106,255,189,227,56,1,130,128,99,47,9,140,159,223,188,153,121,19,201,42,52,91,150,33,252,120,94,44,85,97,163,169,146,5,47,107,205,44,87,50,154,11,181,102,98,137,76,103,155,251,187,143,251,187,160,54,92,150,176,220,27,139,21,129,133,192,204,33,77,52,71,137,154,103,223,14,152,178,185,59,26,77,85,85,17,213,111,85,150,20,62,158,31,51,106,188,28,141,102,44,179,74,115,52,87,206,151,217,6,243,90,160,166,115,66,60,104,44,73,11,76,5,51,102,4,148,209,88,102,54,190,36,243,75,173,27,212,182,94,11,158,65,230,64,23,48,48,130,148,94,79,239,152,213,148,156,46,80,217,244,60,176,207,56,138,156,232,159,53,223,49,139,254,48,142,99,24,155,186,170,152,222,39,93,128,200,161,98,146,149,168,163,3,40,62,69,109,61,7,144,6,75,154,52,178,92,73,177,135,212,93,93,9,122,76,28,203,162,37,153,163,117,109,68,29,14,78,39,51,120,244,245,7,15,40,115,175,178,47,121,129,118,163,114,146,220,148,126,67,241,31,180,181,150,6,184,36,69,146,108,161,10,176,27,132,172,105,15,133,115,124,119,83,48,148,232,106,81,77,100,203,52,171,64,146,191,38,131,218,160,166,6,75,111,149,65,50,54,72,148,26,139,201,224,165,127,20,39,135,212,209,56,110,56,142,148,218,139,75,210,51,113,183,53,142,227,238,94,211,112,63,252,29,215,182,102,2,210,22,236,199,191,108,110,0,117,249,82,60,236,107,133,126,85,143,224,182,35,8,124,50,111,65,111,223,189,27,219,248,18,99,18,74,252,11,20,49,86,215,14,250,93,151,117,133,210,134,231,45,27,158,103,115,19,15,130,207,27,163,116,41,204,177,27,190,59,230,63,143,236,148,178,249,141,22,181,25,36,126,187,92,23,143,209,222,237,110,78,138,231,224,193,120,187,255,67,72,127,242,230,23,213,52,166,134,82,209,67,80,235,55,58,78,78,178,116,115,114,203,21,165,178,80,221,42,145,95,220,46,117,54,122,163,47,1,85,165,45,230,205,122,209,149,29,211,192,205,147,100,107,129,57,45,230,12,25,205,26,95,44,23,220,210,71,202,205,57,53,109,180,133,133,231,42,123,139,187,122,253,218,145,175,58,61,51,165,43,70,14,56,195,65,225,121,73,1,124,124,249,36,71,28,164,180,12,188,128,240,24,107,203,244,162,157,9,232,227,219,115,249,228,170,207,207,172,230,217,131,75,36,145,123,133,29,194,91,223,255,33,103,30,236,121,250,85,106,99,167,161,38,242,15,92,79,8,194,137,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("36403bfb-5e11-45bd-984b-85bda8e31923"));
		}

		#endregion

	}

	#endregion

}

