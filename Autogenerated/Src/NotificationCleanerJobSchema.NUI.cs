namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: NotificationCleanerJobSchema

	/// <exclude/>
	public class NotificationCleanerJobSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public NotificationCleanerJobSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public NotificationCleanerJobSchema(NotificationCleanerJobSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f2475ae6-5dca-4df6-8e55-ecfad8bf19a5");
			Name = "NotificationCleanerJob";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,87,221,111,219,54,16,127,118,129,254,15,132,250,34,1,158,60,96,111,109,106,192,77,236,192,195,210,102,117,182,61,22,140,116,78,88,72,148,195,15,55,70,177,255,125,39,82,180,72,125,212,65,151,173,47,137,72,222,29,239,126,119,247,243,145,211,18,228,142,102,64,222,93,95,109,170,173,74,207,43,190,101,119,90,80,197,42,254,242,197,215,151,47,38,90,50,126,71,54,7,169,160,124,211,89,163,124,81,64,86,11,203,244,18,56,8,150,181,50,173,81,1,195,187,233,197,187,145,131,77,118,15,185,46,64,224,57,74,188,18,112,135,151,144,243,130,74,249,154,188,175,20,219,178,204,120,121,94,0,197,139,127,173,110,141,228,108,54,35,103,82,151,37,21,135,121,179,54,90,100,91,9,194,61,69,146,213,154,120,115,234,212,102,158,222,78,223,22,44,67,153,90,117,248,62,242,154,172,241,223,242,17,50,173,42,129,74,53,94,71,95,87,12,138,28,157,189,22,108,79,21,24,239,38,59,187,32,23,248,231,134,149,64,62,149,140,215,139,55,254,233,31,18,4,166,130,91,104,201,39,29,172,3,209,12,161,87,132,113,69,46,96,75,117,161,174,232,227,226,14,214,104,244,32,201,91,242,203,207,22,193,201,43,224,185,245,172,89,55,110,94,129,186,175,70,253,220,87,44,71,203,5,40,248,8,232,106,142,120,201,56,33,38,210,201,158,10,146,155,195,223,53,136,3,94,199,225,75,35,30,119,188,78,140,198,36,93,137,170,140,163,163,177,40,33,84,54,42,38,176,201,34,207,87,172,80,32,100,236,217,78,236,161,183,147,90,224,33,182,71,127,143,58,190,148,252,89,125,95,110,222,251,5,49,24,1,222,249,188,65,44,56,103,123,52,135,229,249,63,38,194,220,250,157,129,76,38,167,10,105,85,137,21,227,76,98,171,47,208,181,61,83,135,32,162,109,231,112,249,200,164,146,27,52,146,41,23,231,37,168,213,41,177,198,167,231,65,169,217,255,235,30,4,196,145,95,8,55,135,29,172,243,40,73,215,114,249,160,105,17,35,59,234,146,167,215,84,32,209,34,132,241,209,12,222,131,46,166,93,237,227,249,58,79,220,69,11,158,199,238,219,70,22,159,196,229,223,212,89,81,12,212,87,205,47,101,72,44,134,166,131,223,139,20,127,20,54,160,84,173,137,191,6,234,79,90,104,56,67,213,121,23,220,169,141,39,64,79,46,31,119,204,26,186,1,81,70,211,33,66,107,2,115,164,137,110,56,34,69,44,191,164,88,177,181,84,252,83,217,215,233,147,152,191,223,225,8,255,104,164,243,6,173,14,86,244,40,226,232,110,171,217,52,153,53,232,151,233,148,92,106,20,230,189,74,115,201,241,100,195,226,108,171,118,74,154,69,13,149,171,225,9,22,234,111,32,101,191,78,29,190,65,17,134,230,134,10,191,53,59,82,255,3,49,12,162,99,75,249,137,189,221,160,32,64,105,193,73,108,207,146,186,179,237,231,88,103,91,239,156,147,166,35,99,174,139,34,73,210,133,196,206,198,207,69,193,168,140,66,42,112,158,212,125,206,205,32,192,120,187,187,81,84,105,84,73,63,244,55,17,181,128,30,90,83,120,98,101,90,20,93,14,251,54,44,36,223,162,25,37,116,39,117,254,77,161,15,65,82,55,250,246,51,130,84,75,132,44,254,132,225,161,82,168,9,185,61,239,78,97,102,3,185,65,18,1,15,26,112,98,217,218,122,175,103,175,254,240,101,119,118,117,64,132,99,80,111,35,175,198,163,121,211,35,15,134,216,206,102,70,206,168,237,156,23,100,207,132,194,248,142,125,54,222,94,174,126,134,154,49,232,194,83,228,237,175,177,176,251,20,220,111,162,181,252,8,52,63,157,74,191,71,198,161,165,45,81,253,40,152,131,121,225,63,196,218,227,100,7,245,73,120,112,108,251,81,176,120,211,224,56,40,163,52,222,157,55,177,112,206,5,32,79,230,31,248,247,114,249,128,77,87,140,39,89,188,95,147,167,233,193,188,166,190,145,161,102,60,145,199,71,25,249,92,221,62,53,61,33,191,71,243,250,249,84,63,140,154,141,32,73,179,174,178,249,174,227,146,209,252,24,163,12,19,107,223,130,38,155,110,142,234,60,209,58,243,13,89,95,48,243,133,62,159,73,37,48,160,41,169,12,185,206,73,123,163,75,125,231,23,10,199,154,129,23,159,27,71,194,1,109,44,13,205,158,191,133,59,255,0,175,234,72,160,242,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f2475ae6-5dca-4df6-8e55-ecfad8bf19a5"));
		}

		#endregion

	}

	#endregion

}

