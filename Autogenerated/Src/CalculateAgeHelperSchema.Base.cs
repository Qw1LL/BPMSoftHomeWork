namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CalculateAgeHelperSchema

	/// <exclude/>
	public class CalculateAgeHelperSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CalculateAgeHelperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CalculateAgeHelperSchema(CalculateAgeHelperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7036e87b-0dda-4a95-ba07-111b121eb842");
			Name = "CalculateAgeHelper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("1fca9dd8-7af0-4ded-b1a3-aead7ca3b750");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,84,77,111,19,49,16,61,111,164,252,135,33,149,170,228,144,93,184,150,52,168,4,40,28,82,85,42,69,226,232,122,103,183,22,94,123,241,218,65,17,234,127,239,216,222,175,182,41,229,130,184,88,235,241,123,51,207,51,207,171,88,133,77,205,56,194,251,203,237,149,46,108,186,209,170,16,165,51,204,10,173,166,147,223,211,73,226,26,161,74,184,218,55,22,171,183,211,9,69,142,12,150,116,12,176,145,172,105,78,96,195,36,119,146,89,60,43,241,51,202,26,77,128,101,89,6,171,198,85,21,51,251,117,187,15,12,40,180,1,222,145,128,107,101,25,183,192,74,76,1,58,98,54,98,214,238,70,10,14,60,144,15,85,75,188,208,94,215,22,237,173,206,73,216,165,17,59,2,6,53,79,228,68,61,183,200,127,64,238,101,40,109,161,52,72,159,36,206,25,131,202,134,131,180,39,143,37,197,72,205,12,171,64,81,27,79,103,66,213,206,126,32,194,108,157,174,178,112,50,0,13,90,103,84,179,182,198,33,44,65,20,177,230,142,73,145,175,178,238,212,195,235,168,25,110,180,150,240,165,185,208,246,60,138,218,68,77,190,194,220,47,95,69,133,208,23,93,64,104,65,18,83,13,241,212,47,176,58,133,142,146,94,91,126,161,127,133,56,141,51,73,238,254,190,61,248,211,49,9,179,173,80,223,152,116,56,75,225,127,247,230,163,87,212,233,121,185,45,175,134,190,4,102,211,83,210,46,201,98,220,148,35,84,121,52,85,187,111,29,70,207,164,33,185,220,106,227,109,22,236,25,17,173,85,159,154,116,222,74,121,33,243,224,221,81,210,131,179,57,71,11,133,147,18,246,200,12,189,41,163,171,127,231,91,186,198,163,81,196,123,238,132,177,222,19,130,138,146,160,79,164,135,160,223,189,162,63,76,131,70,60,127,206,218,35,240,241,241,161,33,139,30,208,165,75,250,74,237,253,131,231,71,150,127,224,119,42,79,98,233,103,67,136,17,62,245,162,189,253,122,135,248,64,203,104,237,51,134,159,229,121,188,230,146,82,45,218,103,246,248,221,189,131,185,47,180,132,55,11,56,241,53,99,62,242,192,144,244,245,115,134,11,176,113,224,238,30,103,18,50,162,176,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7036e87b-0dda-4a95-ba07-111b121eb842"));
		}

		#endregion

	}

	#endregion

}

