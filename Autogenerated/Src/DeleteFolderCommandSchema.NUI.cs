namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DeleteFolderCommandSchema

	/// <exclude/>
	public class DeleteFolderCommandSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DeleteFolderCommandSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DeleteFolderCommandSchema(DeleteFolderCommandSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("48c34635-3643-4070-931d-3d3839c1e1ac");
			Name = "DeleteFolderCommand";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,87,219,110,227,54,16,125,86,129,254,3,227,5,2,25,48,244,1,221,122,1,39,177,83,3,185,117,189,219,125,40,138,130,145,104,139,173,68,58,36,229,68,45,242,239,29,241,34,209,18,21,55,155,151,88,228,112,230,204,204,153,25,146,225,146,200,61,78,9,186,120,184,221,240,173,74,46,57,219,210,93,37,176,162,156,37,43,94,100,68,200,5,203,174,5,175,246,18,253,251,227,15,81,37,41,219,161,77,45,21,41,63,246,190,225,124,81,144,180,57,44,147,107,194,136,160,233,64,230,134,178,167,193,226,134,164,149,160,170,238,54,58,72,101,201,89,104,93,144,240,106,114,117,49,178,177,100,138,42,74,228,112,123,249,162,8,147,26,247,111,184,160,153,14,0,136,129,224,7,65,118,240,129,174,72,65,20,49,49,105,64,97,150,233,253,125,245,88,208,20,165,5,150,50,36,212,68,13,196,90,61,43,74,138,76,254,132,30,4,61,96,69,204,230,222,124,32,65,112,198,89,81,163,175,178,81,192,152,137,38,250,179,58,250,54,200,162,15,132,101,70,235,177,9,16,148,74,84,169,226,2,236,104,124,214,140,193,26,64,25,247,12,30,219,155,234,212,71,209,241,106,114,153,147,244,239,133,216,85,37,97,234,174,42,138,152,1,165,248,54,238,157,158,54,1,143,162,158,19,104,222,179,162,165,94,135,174,69,145,239,220,45,81,57,63,10,160,217,119,33,124,228,188,64,215,68,173,165,113,115,81,20,252,153,100,49,68,164,201,56,32,5,158,109,210,156,148,248,14,208,206,208,122,201,192,1,129,31,11,242,243,117,69,179,79,144,133,148,139,76,58,175,175,46,28,61,151,108,71,25,1,29,250,223,188,159,150,164,47,105,252,166,91,20,155,35,137,198,181,244,32,44,178,146,50,10,216,0,122,118,81,223,239,1,136,174,159,184,15,116,138,206,207,181,186,232,108,76,153,118,24,156,116,46,15,84,56,143,34,65,84,37,24,218,226,66,90,144,175,239,133,250,217,4,41,128,19,128,34,173,205,198,49,89,176,58,54,191,209,252,19,106,18,195,106,159,131,43,46,46,43,33,64,83,195,66,11,96,22,72,149,81,50,61,237,135,93,135,34,32,62,171,28,71,164,130,32,167,134,42,39,225,140,164,127,134,198,24,165,17,52,76,178,120,215,153,195,123,192,2,9,186,203,213,13,57,144,2,8,212,197,218,143,180,9,237,231,86,48,30,139,4,104,254,232,249,27,123,186,207,81,88,151,76,46,49,51,222,78,209,217,252,180,84,40,126,7,14,206,233,234,111,34,244,64,68,73,165,238,158,174,202,36,175,68,74,222,85,101,13,245,78,213,83,19,40,0,182,124,129,85,69,218,98,137,39,45,218,229,129,136,90,229,128,97,210,103,137,207,15,157,249,28,31,72,135,29,178,17,234,26,3,71,28,236,174,182,207,142,21,181,102,85,46,248,51,98,228,25,181,94,188,164,100,175,17,155,56,193,136,21,37,86,177,145,143,26,209,27,158,194,0,250,167,137,211,70,203,196,19,127,134,77,12,187,224,111,50,8,78,171,61,241,232,251,11,150,119,92,233,204,74,176,118,255,248,23,196,118,50,5,246,246,60,115,93,250,53,144,111,29,46,91,34,130,151,43,124,224,96,215,150,75,172,169,190,213,191,125,22,127,93,103,51,212,236,253,254,71,63,215,77,29,152,3,78,149,57,18,104,169,190,198,91,204,240,142,8,221,154,96,194,97,150,146,139,186,193,30,79,86,71,218,38,214,23,255,240,175,21,48,3,58,133,15,221,172,205,117,142,6,178,113,8,161,85,28,80,147,44,178,12,88,99,196,224,34,84,149,80,14,86,28,182,86,180,80,68,116,109,51,160,97,134,172,27,235,108,210,231,89,200,160,81,9,237,53,203,44,131,66,82,151,112,167,128,21,45,251,141,170,252,1,11,136,88,115,208,209,206,236,193,69,96,143,5,149,156,125,169,247,64,166,167,10,23,51,211,199,129,108,171,80,122,39,237,126,48,251,142,81,102,185,187,27,246,146,32,33,1,33,224,109,83,236,78,246,27,132,53,160,233,153,105,122,194,132,177,68,117,151,189,94,164,93,64,237,132,176,167,222,24,18,186,215,5,18,56,228,214,147,73,162,109,129,169,166,192,3,86,249,88,21,60,13,178,248,116,42,99,111,164,202,100,194,183,234,198,239,6,124,76,149,55,129,205,175,228,11,183,29,6,6,234,244,212,152,236,5,245,84,78,157,143,189,212,120,131,250,57,167,5,65,253,236,232,187,66,215,185,251,187,43,42,164,138,167,137,65,227,202,43,234,12,180,19,255,248,34,240,70,154,117,126,253,241,127,156,218,64,99,27,203,103,160,219,252,239,46,227,175,187,146,255,254,222,226,247,148,161,254,4,110,206,37,22,181,81,212,60,218,224,31,60,123,42,18,154,112,253,106,122,103,133,182,196,178,183,248,145,39,75,119,171,183,207,21,123,169,55,15,22,205,34,59,245,199,175,24,80,19,184,148,35,201,233,139,15,31,47,247,226,91,222,244,249,230,69,236,30,50,99,67,210,149,150,86,178,110,38,236,178,220,171,218,29,115,182,173,116,248,166,116,226,102,113,130,132,223,61,42,101,223,37,175,135,10,34,171,66,181,45,52,48,235,3,108,210,115,62,196,25,87,78,161,10,58,150,183,85,106,204,143,61,3,225,219,172,250,139,176,242,31,4,62,106,183,199,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("48c34635-3643-4070-931d-3d3839c1e1ac"));
		}

		#endregion

	}

	#endregion

}

