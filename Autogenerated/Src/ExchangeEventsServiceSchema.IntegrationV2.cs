namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ExchangeEventsServiceSchema

	/// <exclude/>
	public class ExchangeEventsServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ExchangeEventsServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ExchangeEventsServiceSchema(ExchangeEventsServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("28c0f024-3df7-43e9-85f7-0565703d9ffc");
			Name = "ExchangeEventsService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("702d7ea9-7a7c-4c64-8826-191575af58ce");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,85,193,110,155,64,16,61,19,41,255,176,162,23,91,178,150,123,234,88,178,163,36,114,85,26,203,164,202,193,234,97,13,99,178,42,236,210,221,5,5,85,253,247,14,44,216,216,53,84,185,248,148,139,165,157,153,125,111,246,205,27,35,88,10,58,99,33,144,197,202,15,228,206,208,59,41,118,60,206,21,51,92,138,235,171,223,215,87,78,174,185,136,73,80,106,3,233,231,147,51,13,64,21,60,4,95,70,144,12,38,233,60,52,188,168,97,135,235,94,96,123,40,88,10,3,177,109,102,158,113,90,29,213,14,251,213,135,146,67,231,10,232,3,11,141,84,252,92,30,113,177,38,77,107,126,204,126,82,16,35,44,185,75,152,214,55,228,254,45,124,101,34,134,251,2,132,209,77,71,117,225,166,57,160,52,70,33,254,143,42,54,215,217,55,48,136,151,97,115,91,158,112,83,174,225,87,206,21,164,213,253,81,247,80,189,139,220,146,255,92,169,170,104,19,136,198,21,73,150,111,19,30,146,176,106,240,124,127,228,134,44,152,134,125,183,14,206,11,127,247,111,243,193,188,202,8,95,183,82,210,64,104,32,178,121,207,243,200,84,231,105,202,84,57,107,3,143,96,52,70,1,72,168,96,119,235,46,91,202,175,28,167,36,64,249,76,176,24,148,235,205,8,23,218,48,17,2,221,163,121,93,184,172,165,35,125,32,21,91,79,106,52,38,149,237,28,167,96,138,164,54,102,231,90,162,138,245,184,154,35,69,144,233,242,228,122,147,155,141,198,149,7,28,71,129,201,149,56,1,162,3,244,223,53,40,156,181,192,7,160,134,22,229,79,163,43,136,200,74,219,167,115,61,178,1,145,3,195,20,202,12,13,55,73,26,114,178,45,187,218,251,140,39,91,249,22,148,34,12,192,24,244,177,174,101,143,112,248,124,199,65,245,8,95,71,50,166,88,74,4,238,246,173,155,90,160,101,228,206,222,5,63,245,106,148,26,116,243,148,129,221,193,238,10,56,27,220,168,165,40,228,79,24,217,247,227,116,220,213,83,240,236,78,200,66,70,101,96,202,164,242,61,150,249,160,53,106,187,143,210,23,197,178,12,162,73,61,161,202,244,160,205,131,84,41,51,71,23,108,136,126,209,82,76,200,26,255,170,164,208,48,92,87,111,78,187,58,133,228,145,149,188,29,242,232,49,199,208,94,149,214,106,189,54,109,108,131,108,67,134,181,78,107,106,233,49,225,129,171,235,164,30,115,200,236,195,27,151,245,134,204,46,107,141,14,223,59,156,177,6,92,92,102,224,195,29,151,116,199,186,81,253,146,14,249,135,243,188,75,78,190,68,54,122,28,196,216,95,228,145,179,80,224,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("28c0f024-3df7-43e9-85f7-0565703d9ffc"));
		}

		#endregion

	}

	#endregion

}

