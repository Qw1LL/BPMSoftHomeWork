namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: WorkingMinuteCountTermSchema

	/// <exclude/>
	public class WorkingMinuteCountTermSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public WorkingMinuteCountTermSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public WorkingMinuteCountTermSchema(WorkingMinuteCountTermSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c9414e2d-d5e0-4e34-b831-120e710f3280");
			Name = "WorkingMinuteCountTerm";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("761f835c-6644-4753-9a3e-2c2ccab7b4d0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,87,219,110,219,70,16,125,102,128,252,195,216,5,2,10,81,169,60,183,34,1,71,86,2,3,118,27,64,42,242,188,22,71,18,97,114,169,46,151,114,132,194,255,158,153,189,144,20,73,59,117,139,2,125,145,180,187,115,57,59,115,102,102,37,69,129,213,65,108,16,62,126,185,91,149,91,29,45,74,185,205,118,181,18,58,43,101,180,16,57,202,84,168,234,237,155,191,222,190,9,234,42,147,59,88,126,211,40,43,58,174,126,109,246,86,167,74,99,209,95,147,181,60,199,13,155,170,162,207,40,81,101,155,129,204,109,38,255,108,55,71,113,208,49,9,252,164,112,71,11,88,228,162,170,224,23,248,90,170,7,82,185,203,100,173,113,81,214,82,175,81,21,70,116,54,155,193,188,170,139,66,168,83,226,214,70,2,52,137,192,253,9,30,173,50,20,70,187,138,188,210,172,163,117,168,239,243,108,3,27,227,111,220,27,193,24,248,15,40,84,244,217,224,189,67,189,47,83,70,252,69,101,71,161,209,30,31,236,2,50,66,245,25,245,138,140,231,120,45,78,235,172,192,63,100,166,171,240,198,135,159,118,33,21,167,41,92,147,2,159,3,109,79,128,83,18,4,71,161,128,196,118,122,15,49,164,184,21,117,174,67,22,90,29,132,156,112,100,131,224,102,41,235,2,41,152,165,154,187,139,220,72,10,197,81,228,9,217,242,103,108,64,156,162,158,4,167,78,183,6,66,103,51,219,66,120,49,42,126,37,79,97,230,86,16,39,224,127,179,157,155,138,239,240,17,245,35,162,12,249,26,19,127,145,64,161,174,149,132,15,214,254,147,249,124,220,103,57,2,9,122,247,209,93,121,196,223,240,155,14,39,240,238,29,92,116,78,22,181,82,40,245,51,110,188,23,23,171,247,49,140,168,222,154,195,46,128,23,197,215,170,150,27,114,196,30,166,160,85,141,147,51,19,238,70,28,141,137,53,20,173,75,45,114,203,25,83,63,236,198,176,133,76,88,194,60,207,158,82,83,49,97,106,5,250,28,55,27,116,245,10,68,97,168,94,110,65,51,87,106,38,19,108,85,89,128,222,35,28,81,157,136,48,91,205,185,182,18,135,146,73,88,31,64,151,70,100,126,16,74,20,10,183,32,169,65,196,151,4,237,114,150,112,141,12,139,196,238,24,5,39,77,102,171,203,196,115,151,189,84,209,124,102,36,198,21,216,124,194,249,2,33,83,139,136,177,19,16,58,25,170,218,160,86,201,186,189,156,189,49,137,250,51,91,96,46,94,112,204,148,174,137,139,174,212,58,21,230,104,125,159,227,188,91,109,137,65,61,94,111,105,73,109,1,65,97,69,133,102,43,166,178,204,138,214,226,1,191,50,97,67,14,45,49,159,203,163,53,107,109,69,230,166,115,115,55,254,57,113,202,171,186,232,170,17,78,87,88,172,20,78,124,37,119,123,2,53,38,205,223,22,68,244,41,83,149,254,93,93,187,30,240,67,12,113,220,130,104,107,218,27,189,104,187,73,215,105,91,72,28,205,28,73,154,252,143,55,48,103,106,106,194,103,61,4,46,110,84,79,70,183,91,106,221,106,177,98,175,44,16,211,175,95,168,142,171,148,228,250,228,118,19,128,8,206,115,97,151,29,81,154,112,122,14,110,220,221,255,51,250,123,0,137,235,10,92,133,34,125,129,248,100,123,83,231,148,181,148,172,119,170,166,207,127,59,190,168,93,42,149,165,216,146,185,209,255,33,255,57,197,14,94,119,220,180,220,119,4,241,166,93,146,93,137,48,166,91,110,52,177,55,98,143,239,203,50,135,7,196,131,31,42,156,198,216,180,207,225,184,26,194,106,15,61,241,71,231,147,155,28,231,26,189,233,209,3,209,80,187,63,121,157,163,229,96,2,56,82,191,56,95,253,248,91,254,179,57,107,34,238,158,43,38,125,241,104,127,112,194,92,193,77,220,147,174,94,115,185,160,57,255,57,238,10,56,11,198,4,191,100,60,77,40,48,183,229,110,69,144,144,155,130,172,243,188,181,21,72,124,132,161,244,14,213,115,54,92,191,227,150,247,41,203,243,243,119,85,43,238,163,194,9,156,158,221,195,227,180,77,35,120,2,204,43,108,0,253,31,209,251,128,247,161,123,142,14,25,242,55,121,26,4,61,14,53,100,35,150,140,88,61,103,109,83,168,94,210,55,160,86,215,189,102,134,175,150,17,174,245,172,116,64,158,49,174,39,214,88,235,229,177,153,20,241,243,19,172,17,13,34,106,237,77,24,163,149,22,74,79,206,79,157,187,112,144,139,32,24,182,162,45,85,99,83,15,77,182,60,225,134,35,107,56,173,94,249,58,163,149,200,115,55,125,236,155,140,254,44,241,88,163,153,244,218,9,228,229,47,147,117,119,126,189,56,132,156,59,171,226,22,255,226,233,213,27,61,195,135,215,194,161,234,245,119,15,118,10,221,209,228,147,222,246,84,135,208,115,204,165,193,227,190,218,237,232,113,192,3,238,195,20,66,177,217,76,221,209,132,30,68,54,137,180,9,239,207,49,53,129,162,93,2,67,84,217,103,52,3,173,166,229,84,179,90,210,131,230,108,97,233,52,254,84,177,187,231,155,79,223,1,190,58,94,71,123,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c9414e2d-d5e0-4e34-b831-120e710f3280"));
		}

		#endregion

	}

	#endregion

}

