namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DashboardItemDataFactorySchema

	/// <exclude/>
	public class DashboardItemDataFactorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DashboardItemDataFactorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DashboardItemDataFactorySchema(DashboardItemDataFactorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cff14c1f-b6e9-4bab-b228-d08195a1cef2");
			Name = "DashboardItemDataFactory";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,88,91,111,219,54,20,126,86,129,254,7,206,3,10,25,48,228,62,55,142,1,207,69,138,20,189,100,107,186,2,11,130,130,150,40,155,155,68,121,36,149,192,24,250,223,119,120,147,72,93,226,24,233,203,176,190,216,225,237,156,239,156,243,157,143,116,24,46,137,216,227,148,160,95,174,222,127,170,114,153,172,43,150,211,109,205,177,164,21,123,254,236,159,231,207,162,90,80,182,69,159,14,66,146,242,172,51,134,253,69,65,82,181,89,36,111,8,35,156,166,189,61,239,40,251,187,55,249,27,201,237,193,118,105,93,113,18,142,146,11,156,202,138,83,34,218,249,15,228,94,130,59,133,246,173,168,152,51,15,235,63,115,178,5,131,104,93,96,33,94,161,215,88,236,54,21,230,217,37,56,124,141,37,94,73,201,233,166,150,68,239,190,105,134,159,5,222,146,184,25,94,99,190,37,82,36,218,204,244,22,182,238,235,77,65,83,148,170,137,7,204,162,87,46,58,207,83,4,57,132,207,22,28,96,151,188,86,97,1,198,43,109,217,236,176,94,198,237,199,112,80,101,224,158,102,0,240,250,176,39,83,164,42,20,69,114,71,69,210,78,163,115,111,143,202,92,244,205,130,32,44,51,56,66,80,87,188,218,19,46,33,207,29,72,156,222,97,8,172,231,248,204,3,108,23,191,52,139,106,205,224,130,9,253,109,70,17,39,178,230,172,107,70,129,27,67,104,102,59,147,199,234,108,72,115,208,123,231,243,57,90,136,186,44,49,63,44,237,24,162,189,163,25,17,40,55,27,145,172,80,202,137,10,52,115,182,16,5,99,48,148,24,81,40,24,102,41,17,137,179,55,247,12,62,204,141,6,138,73,129,67,126,65,73,145,169,92,155,252,134,201,6,36,89,197,138,3,250,44,8,7,186,48,211,39,232,107,29,140,207,78,40,233,144,27,8,74,42,186,81,109,13,162,89,152,66,206,144,170,204,18,125,109,203,36,128,80,172,46,138,51,255,252,232,193,150,8,34,96,130,229,106,68,115,20,135,198,141,117,71,230,40,234,184,126,67,164,103,51,158,26,214,24,218,52,164,242,207,132,180,26,207,145,237,69,241,248,94,180,245,140,59,165,9,43,227,2,233,20,12,34,233,85,240,104,103,190,39,114,87,141,82,101,180,6,221,148,89,68,119,152,35,233,10,74,238,71,207,187,28,175,132,32,229,6,168,8,228,54,127,156,119,105,152,172,246,123,111,244,165,226,127,233,43,165,253,203,25,49,38,115,144,117,156,238,80,172,133,74,129,129,6,107,236,195,37,226,32,55,116,168,54,127,130,241,155,91,132,157,16,42,248,234,164,218,189,86,229,43,27,141,20,177,90,168,242,120,92,70,167,51,4,69,39,142,70,138,142,173,229,228,29,97,91,185,67,75,244,18,189,120,209,120,185,100,146,112,144,11,5,76,93,146,18,131,42,56,87,151,61,95,211,22,125,212,211,78,0,31,63,4,175,5,115,243,242,118,154,180,117,180,128,35,93,193,100,149,101,113,107,20,98,82,247,65,208,26,230,211,246,135,62,228,51,206,113,72,67,82,137,84,10,166,6,227,215,76,83,50,227,70,101,206,99,89,114,205,15,96,231,119,92,212,36,64,86,213,210,160,107,146,226,97,242,122,213,77,91,169,57,169,59,188,222,237,74,190,158,88,107,125,23,141,152,163,42,31,18,123,37,241,125,141,55,51,123,204,113,137,24,188,153,206,39,109,120,147,165,73,129,161,178,90,77,144,78,1,42,129,153,104,3,66,11,139,138,226,205,51,97,50,94,252,137,194,37,246,36,165,57,37,153,185,85,22,115,237,121,24,72,19,195,7,24,78,150,234,51,8,45,121,240,116,170,159,123,147,101,240,236,67,39,24,144,180,36,127,84,140,124,204,115,8,115,178,52,223,42,220,93,85,115,209,63,108,74,44,150,151,182,14,35,101,88,204,221,70,79,141,251,125,102,203,234,140,245,153,59,115,175,147,32,79,51,244,246,163,22,21,100,18,48,3,192,80,192,32,150,128,243,186,14,182,119,131,86,241,122,196,16,217,136,85,75,51,239,226,212,253,210,90,250,169,115,235,121,71,76,84,80,20,120,149,120,209,53,103,103,221,112,92,24,157,16,6,122,107,72,172,156,103,95,29,158,210,68,8,52,30,88,111,46,132,31,13,117,82,67,109,40,203,128,175,240,187,170,46,153,214,145,201,210,200,137,151,84,100,119,161,156,22,112,47,253,63,90,212,238,234,39,232,59,118,111,216,161,221,119,105,120,61,169,206,66,164,16,164,179,60,212,97,218,165,125,59,38,23,21,79,9,224,88,244,55,46,91,239,137,123,54,253,90,227,66,223,6,58,45,246,9,160,30,111,222,47,201,21,223,214,37,97,50,238,220,7,29,161,152,30,61,110,47,4,167,40,199,15,12,240,117,54,80,163,227,134,194,87,37,24,233,188,51,143,91,232,16,189,167,134,190,28,126,7,149,251,161,108,255,197,167,66,239,82,13,21,226,233,239,5,123,30,15,117,47,232,207,145,254,54,20,181,74,242,120,213,24,244,102,27,230,105,82,193,78,84,138,209,253,143,237,239,81,3,143,107,239,129,31,12,131,255,68,250,246,47,133,79,77,95,252,20,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cff14c1f-b6e9-4bab-b228-d08195a1cef2"));
		}

		#endregion

	}

	#endregion

}

