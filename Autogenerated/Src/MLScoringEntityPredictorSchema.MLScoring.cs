namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MLScoringEntityPredictorSchema

	/// <exclude/>
	public class MLScoringEntityPredictorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLScoringEntityPredictorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLScoringEntityPredictorSchema(MLScoringEntityPredictorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c3b65463-960f-481c-bae3-a3def7879767");
			Name = "MLScoringEntityPredictor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("53963cb6-da9d-462c-9472-5893a2d88bd3");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,86,75,111,219,70,16,62,43,64,254,195,64,189,200,128,65,221,19,155,7,199,141,33,64,76,132,74,201,165,232,97,77,14,173,77,201,37,177,187,84,172,26,254,239,157,217,37,197,135,30,97,139,230,82,192,144,185,203,111,30,251,205,55,179,84,34,71,83,138,24,225,110,21,173,139,212,6,31,10,149,202,167,74,11,43,11,21,68,203,183,111,94,222,190,153,84,70,170,39,88,239,141,197,252,253,96,77,38,89,134,49,227,77,240,128,10,181,140,91,204,135,66,99,127,21,124,20,177,45,180,68,211,238,183,209,233,253,74,23,49,26,211,79,229,24,27,45,131,133,178,168,83,74,159,93,17,96,62,159,195,141,169,242,92,232,125,88,175,215,49,197,34,51,153,151,25,230,168,172,115,7,69,74,72,68,136,53,166,183,211,69,180,252,85,89,105,247,43,141,137,228,244,166,243,16,132,74,6,160,195,235,151,205,231,202,190,18,40,104,194,206,7,113,217,80,100,166,168,141,163,229,157,48,56,8,242,82,39,71,190,74,118,7,243,51,214,39,242,243,216,223,239,49,21,85,102,239,164,74,200,209,204,238,75,44,210,217,49,254,234,26,62,81,177,225,22,162,37,17,107,172,9,234,224,68,247,35,49,179,33,203,171,63,46,186,60,56,187,233,229,29,142,247,93,86,143,153,140,33,206,132,49,4,174,81,131,84,225,29,156,100,107,16,149,220,145,52,233,119,242,139,198,39,174,41,197,182,186,98,168,121,7,43,23,202,3,134,186,112,27,11,37,173,20,153,252,11,13,8,80,248,29,36,165,46,20,53,3,137,195,110,177,91,251,115,185,178,76,220,105,88,7,199,66,240,59,165,208,34,7,69,20,221,78,43,131,154,242,84,190,97,166,225,134,226,240,30,196,135,205,224,102,238,44,156,131,154,177,115,241,103,95,122,254,156,171,118,121,69,84,62,18,145,179,225,54,247,244,228,181,102,15,85,226,9,236,179,73,181,43,81,91,234,83,34,83,23,150,108,49,185,192,231,3,90,227,104,43,125,209,129,133,3,50,161,150,147,169,68,125,137,161,157,200,42,60,44,55,163,156,180,54,101,147,29,20,59,212,154,208,240,80,201,4,58,234,91,36,112,27,186,34,243,155,217,37,157,190,191,76,75,132,118,91,36,35,57,169,235,100,168,46,60,131,152,29,83,98,204,71,73,248,136,207,251,177,186,113,96,47,23,111,215,21,201,17,58,47,18,204,60,218,61,94,70,39,194,10,15,150,138,58,11,120,125,217,162,244,231,34,62,88,127,27,97,254,156,134,252,4,150,30,225,187,180,91,104,33,128,207,86,11,112,246,230,216,175,70,91,105,101,134,156,17,65,26,13,205,161,14,67,93,232,137,162,247,230,67,227,135,7,215,26,245,78,198,72,21,123,222,123,250,174,169,163,34,102,198,95,50,158,165,107,246,59,153,220,251,180,169,20,55,198,178,195,107,40,30,191,81,172,208,49,195,166,247,244,127,117,196,65,231,204,205,86,221,106,19,159,121,93,58,206,19,103,62,100,237,146,230,150,83,222,161,43,47,203,201,51,99,32,165,105,201,162,122,146,59,84,212,234,54,222,242,240,210,72,17,146,209,51,233,159,171,101,41,141,157,134,119,195,120,63,208,140,83,112,180,4,227,203,49,70,200,63,67,104,109,225,26,133,253,80,89,124,222,193,245,115,208,215,41,33,193,194,89,156,87,146,151,18,131,106,209,157,85,233,127,44,53,23,114,164,220,214,98,135,205,72,239,247,36,13,10,224,145,108,247,63,71,99,222,247,34,241,6,126,213,189,5,198,104,6,147,223,92,174,205,208,28,76,149,222,37,123,92,241,93,65,23,8,19,208,187,112,49,249,202,183,142,57,93,116,119,233,52,169,215,117,237,207,164,65,106,77,201,118,66,183,175,124,4,250,152,226,219,170,163,160,94,72,42,102,65,95,6,24,214,30,38,47,77,18,131,16,94,1,64,101,38,208,171,43,249,164,149,19,31,80,7,237,49,29,184,57,163,175,83,11,110,32,91,204,5,157,175,61,233,48,247,127,161,172,78,51,254,223,5,181,58,156,120,140,138,6,151,218,25,1,181,62,219,138,118,226,120,130,216,155,127,114,81,23,245,215,238,151,51,181,172,35,116,107,57,248,38,162,93,250,251,27,246,23,26,234,68,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c3b65463-960f-481c-bae3-a3def7879767"));
		}

		#endregion

	}

	#endregion

}

