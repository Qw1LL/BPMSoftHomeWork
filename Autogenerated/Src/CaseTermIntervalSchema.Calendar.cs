namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CaseTermIntervalSchema

	/// <exclude/>
	public class CaseTermIntervalSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseTermIntervalSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseTermIntervalSchema(CaseTermIntervalSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cff3d064-d73b-473d-8492-7151dcd31b07");
			Name = "CaseTermInterval";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f69a32ba-7e77-47bd-be6b-d095bbdc629a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,148,81,139,219,48,12,199,159,123,112,223,65,99,112,244,96,75,110,123,188,181,133,173,108,227,30,58,202,218,237,101,236,193,151,42,153,153,99,7,203,41,116,91,191,251,100,39,110,147,166,28,229,160,80,91,150,172,159,254,82,172,69,137,84,137,12,225,195,114,177,50,185,75,230,70,231,178,168,173,112,210,232,235,171,191,215,87,163,154,164,46,96,181,35,135,229,187,195,126,46,20,234,141,176,180,150,37,126,211,210,193,244,104,75,162,145,253,57,226,165,197,130,175,131,143,186,46,239,217,139,112,141,182,92,57,225,144,248,152,127,105,154,194,132,234,178,20,118,55,107,247,222,15,28,59,130,212,252,183,21,10,50,83,86,10,29,106,36,2,10,241,73,140,78,59,225,63,62,41,81,208,79,191,90,161,149,66,201,63,226,81,161,55,84,245,163,146,25,32,163,12,73,124,185,163,47,70,35,23,115,247,202,111,88,15,39,164,166,175,172,147,209,12,52,133,55,167,7,70,109,189,253,45,155,247,77,189,172,66,83,114,175,252,185,18,68,199,250,31,218,170,130,207,57,1,222,67,230,35,94,103,77,42,180,144,27,11,217,64,150,115,10,180,101,134,11,6,25,225,30,30,186,251,73,95,136,89,84,34,130,47,173,169,208,58,137,76,191,12,23,7,230,1,116,48,68,65,28,143,64,23,113,200,24,33,253,176,248,236,49,52,172,3,192,168,64,63,66,188,160,118,177,127,58,115,211,163,231,165,14,177,23,228,62,233,238,65,165,5,186,95,102,115,137,68,159,209,17,207,50,3,106,7,165,160,223,192,156,53,38,231,81,131,197,162,171,173,166,217,226,232,61,73,163,177,83,80,191,147,62,147,143,24,223,182,53,109,133,5,139,84,171,230,115,237,250,38,126,238,155,130,101,14,227,158,32,47,166,160,107,165,224,230,166,39,84,178,222,85,232,15,55,152,11,190,115,60,120,20,110,7,33,223,61,59,204,224,46,34,141,90,158,127,3,160,249,201,183,215,192,113,23,142,136,135,113,233,19,70,243,229,128,135,136,231,241,249,240,46,94,211,153,86,234,39,134,103,248,94,240,107,184,255,15,231,66,32,154,151,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cff3d064-d73b-473d-8492-7151dcd31b07"));
		}

		#endregion

	}

	#endregion

}

