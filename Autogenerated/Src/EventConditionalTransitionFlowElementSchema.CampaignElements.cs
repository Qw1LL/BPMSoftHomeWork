namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EventConditionalTransitionFlowElementSchema

	/// <exclude/>
	public class EventConditionalTransitionFlowElementSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EventConditionalTransitionFlowElementSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EventConditionalTransitionFlowElementSchema(EventConditionalTransitionFlowElementSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c6c9eea4-a71d-4b2e-b4f1-18cdef716973");
			Name = "EventConditionalTransitionFlowElement";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d0bba11f-3986-4819-81ab-1d3ddbfc1f48");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,85,77,111,226,48,16,189,87,234,127,152,210,75,184,132,123,11,72,133,165,221,74,109,197,46,173,122,118,157,9,88,77,236,96,59,116,81,187,255,125,199,49,33,31,4,21,173,15,200,140,199,111,222,188,25,79,36,75,209,100,140,35,76,230,143,11,21,219,112,170,100,44,150,185,102,86,40,121,126,246,121,126,6,180,114,35,228,18,22,91,99,49,189,62,52,209,173,36,65,238,174,152,240,14,37,106,193,187,220,30,132,92,55,236,85,212,52,85,242,200,145,198,240,199,132,206,252,233,165,198,37,197,129,105,194,140,185,130,217,6,165,37,210,145,112,209,89,242,172,153,52,197,254,54,81,31,179,4,83,58,47,239,14,6,3,24,154,60,77,153,222,142,43,83,129,1,188,2,1,187,71,129,76,43,142,198,0,122,168,176,134,52,104,66,101,249,91,34,56,112,71,236,52,94,112,5,223,83,119,208,84,6,191,169,43,48,215,42,67,109,5,146,12,243,34,118,221,171,35,215,210,252,34,197,58,71,16,17,225,139,88,160,6,21,3,110,170,236,142,101,88,203,242,46,23,145,79,242,62,130,79,88,162,189,6,227,126,254,158,72,162,106,25,23,221,144,188,220,98,228,105,128,166,174,164,94,114,28,205,233,156,238,103,50,79,81,179,183,4,135,142,223,216,19,252,189,3,51,199,121,94,162,140,188,170,93,66,63,162,93,169,200,169,172,197,134,89,172,251,100,222,4,27,229,244,248,99,9,232,85,216,213,62,102,208,119,197,43,189,221,170,202,252,43,71,189,13,167,43,228,239,55,122,73,212,165,125,202,147,36,232,181,92,122,253,221,203,40,87,97,221,139,180,40,180,131,17,220,161,245,251,201,118,206,168,49,184,200,88,45,253,160,13,35,98,8,90,32,23,35,144,68,225,128,116,23,241,27,25,5,61,234,95,203,56,53,65,175,31,222,203,22,92,59,32,105,94,219,30,138,232,243,250,54,141,54,57,151,71,217,138,163,17,68,24,179,60,177,129,107,129,62,124,125,193,69,179,13,136,248,54,232,119,166,168,209,230,90,22,18,28,167,238,214,134,233,67,253,37,126,128,255,19,188,24,212,36,141,244,29,222,63,140,228,70,102,158,202,134,128,29,94,183,90,165,65,175,224,255,204,52,117,111,167,215,235,10,53,238,220,124,37,204,108,157,179,36,240,65,66,146,145,6,189,69,93,202,212,239,64,41,144,138,154,54,228,42,43,219,134,50,65,83,85,18,148,153,93,250,45,237,154,66,133,139,12,185,136,183,79,234,65,241,247,159,66,90,19,88,157,99,187,89,118,181,104,94,174,249,252,223,3,86,182,152,51,39,14,169,223,5,7,3,235,162,49,237,138,89,16,146,39,121,68,195,132,69,251,207,69,162,150,130,159,48,167,10,187,207,203,140,39,140,230,219,208,32,2,215,24,143,122,47,89,68,111,160,55,24,3,22,99,132,134,225,7,77,18,176,34,69,96,50,130,88,36,164,123,245,157,50,225,112,80,130,213,223,210,46,69,80,27,212,154,134,188,159,77,83,141,4,95,188,176,195,23,244,70,92,194,134,71,171,24,157,147,237,244,98,236,143,155,71,100,254,7,41,80,89,37,130,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c6c9eea4-a71d-4b2e-b4f1-18cdef716973"));
		}

		#endregion

	}

	#endregion

}

