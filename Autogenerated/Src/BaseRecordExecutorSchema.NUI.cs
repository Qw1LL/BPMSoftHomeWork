namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseRecordExecutorSchema

	/// <exclude/>
	public class BaseRecordExecutorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseRecordExecutorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseRecordExecutorSchema(BaseRecordExecutorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f59d8c9c-427e-4ecb-9259-4e92ea025639");
			Name = "BaseRecordExecutor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("edbaf284-b37c-4101-84cb-76a44645334f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,109,111,211,48,16,254,28,36,254,195,81,36,148,73,83,10,95,187,49,137,181,27,154,68,1,49,193,215,202,77,175,169,193,137,43,219,41,171,208,254,59,231,151,56,105,154,110,32,77,93,114,190,215,231,158,59,167,98,37,234,45,203,17,174,191,206,239,229,218,100,83,89,173,121,81,43,102,184,172,94,190,248,243,242,69,82,107,94,21,112,191,215,6,203,139,222,123,118,143,121,173,184,217,31,29,76,165,16,152,91,47,58,251,136,21,42,158,183,58,109,52,133,195,210,236,166,50,220,112,212,39,142,103,215,237,65,33,228,146,137,201,100,42,203,82,86,217,39,89,20,36,166,115,210,120,173,176,160,28,96,42,152,214,19,184,102,26,191,97,46,213,234,230,129,50,55,82,57,173,109,189,20,60,7,182,212,70,177,220,64,110,181,7,148,97,2,119,94,242,101,139,30,163,214,79,66,96,209,111,12,121,203,81,172,40,230,87,197,119,204,160,63,220,250,23,208,134,172,115,80,200,86,178,18,123,184,163,172,97,33,232,231,61,208,227,156,85,172,64,69,200,25,91,14,170,116,52,175,133,225,51,20,104,112,116,118,209,245,21,157,204,174,155,118,220,84,4,1,194,66,31,188,15,91,201,229,79,106,148,13,158,255,66,69,241,43,252,29,132,169,13,228,106,194,106,229,203,58,85,163,52,164,143,171,166,202,240,218,70,249,174,81,17,185,42,207,9,88,212,7,239,23,39,172,238,102,220,157,51,181,191,164,222,80,91,207,67,106,87,176,216,50,69,252,53,168,116,207,252,62,223,96,201,124,163,190,241,98,99,62,225,14,133,134,142,36,246,175,103,234,131,128,211,185,121,200,113,107,117,230,168,53,181,227,25,44,168,26,178,174,115,34,195,83,136,28,179,42,237,97,115,8,205,249,147,32,180,24,156,129,29,214,36,233,33,75,253,28,128,58,233,128,71,26,61,36,147,30,111,72,163,231,53,235,83,205,217,61,62,13,16,65,66,168,219,161,30,128,199,147,210,77,253,30,22,232,254,247,122,19,14,195,63,95,109,129,38,60,37,10,77,173,170,3,91,155,17,253,234,86,137,175,33,221,49,81,83,77,68,244,90,136,6,182,36,49,27,37,127,59,242,127,80,69,93,146,155,207,116,30,73,144,142,124,224,48,124,141,239,36,196,35,140,156,223,78,220,255,129,195,45,160,128,133,95,70,49,48,116,118,77,35,138,197,251,112,113,171,4,193,51,145,231,104,54,114,96,108,199,227,49,92,234,186,44,137,105,87,141,96,42,144,41,192,24,90,174,65,54,9,101,209,106,220,53,107,91,182,227,202,212,76,192,78,242,149,247,116,92,76,218,180,96,160,78,223,163,110,77,131,57,250,73,194,54,49,160,63,179,65,240,189,121,54,205,184,248,93,158,126,201,198,108,226,18,28,134,103,131,249,47,80,118,95,192,154,110,136,126,68,207,74,125,117,43,88,97,177,219,48,237,181,179,203,113,115,246,175,40,46,165,20,62,224,209,134,139,32,238,168,89,218,159,198,205,103,231,247,112,162,237,197,226,233,60,188,43,83,127,152,249,211,207,180,28,206,61,219,131,156,238,52,155,39,93,242,117,89,253,176,188,15,83,97,195,83,137,206,19,133,77,143,82,121,51,184,133,207,236,56,158,92,207,110,106,95,53,110,227,196,14,243,133,230,55,174,166,72,177,193,125,30,82,246,115,28,182,71,19,228,255,198,232,120,122,29,145,2,45,3,152,192,233,187,168,73,222,94,182,144,134,59,55,86,20,20,223,59,213,176,102,108,237,167,122,222,46,175,147,179,21,188,36,70,53,43,211,238,44,250,208,200,238,170,181,76,253,125,146,221,74,85,50,147,142,28,245,237,5,232,105,60,129,63,111,31,207,129,175,232,225,221,227,136,158,220,55,95,75,10,47,24,96,67,140,155,12,77,83,63,139,209,76,86,205,87,141,237,8,228,204,228,27,72,219,198,226,67,91,107,215,240,150,9,221,177,28,230,4,62,68,207,221,213,125,106,73,7,217,97,219,73,246,23,58,89,6,235,46,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f59d8c9c-427e-4ecb-9259-4e92ea025639"));
		}

		#endregion

	}

	#endregion

}

