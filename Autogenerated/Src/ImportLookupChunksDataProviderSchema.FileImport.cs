namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ImportLookupChunksDataProviderSchema

	/// <exclude/>
	public class ImportLookupChunksDataProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ImportLookupChunksDataProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ImportLookupChunksDataProviderSchema(ImportLookupChunksDataProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0d7cf7b7-aeeb-464d-be24-906e65b3ca3f");
			Name = "ImportLookupChunksDataProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,75,107,227,48,16,62,167,176,255,65,116,47,14,20,247,222,166,133,190,9,108,151,64,186,123,89,150,162,218,147,86,212,145,130,36,167,132,165,255,125,71,47,91,150,157,154,156,18,143,231,241,205,55,47,115,186,6,181,161,5,144,235,197,227,82,172,116,126,35,248,138,189,214,146,106,38,120,126,207,42,152,175,55,66,106,242,239,219,209,183,163,73,173,24,127,37,203,157,210,176,62,79,158,209,182,170,160,48,134,42,127,0,14,146,21,173,78,27,64,194,176,52,191,167,133,22,146,129,194,247,168,241,93,194,43,250,34,55,21,85,234,140,56,28,63,132,120,175,55,55,111,53,127,87,183,84,211,133,20,91,86,130,180,22,167,167,167,100,198,248,27,70,214,165,40,200,233,37,10,255,220,194,138,214,149,190,102,188,196,144,153,222,109,64,172,178,249,215,254,166,211,191,104,187,169,95,42,86,144,194,32,24,1,64,2,66,251,42,126,51,139,76,140,252,242,132,140,4,247,100,119,25,128,51,178,144,108,75,53,184,151,27,247,224,193,69,174,110,36,80,228,49,56,105,188,220,51,168,74,149,120,105,220,160,81,41,120,181,35,15,53,43,201,51,179,0,151,160,20,154,206,203,243,97,221,249,29,175,215,32,233,75,5,51,159,189,168,234,53,191,36,207,149,3,100,31,213,30,243,95,10,36,54,28,119,77,67,158,235,206,243,121,192,15,188,116,41,36,9,161,170,210,178,54,77,99,210,178,181,10,89,185,194,245,89,201,28,204,5,149,216,250,26,164,34,44,17,156,164,176,186,168,166,134,87,140,48,73,41,34,23,61,87,249,124,136,197,73,151,155,33,187,7,8,189,225,116,178,105,48,237,130,65,219,30,103,168,245,57,198,220,35,232,55,177,191,23,28,108,211,145,150,186,94,3,19,75,38,88,65,230,94,254,166,85,13,234,73,96,11,23,152,238,35,172,129,107,65,182,86,220,112,38,65,215,146,19,14,31,163,49,178,198,104,146,176,136,73,167,220,159,120,77,107,110,53,76,23,231,63,225,195,252,102,211,240,126,169,77,122,23,241,164,90,81,222,0,15,154,79,184,37,186,138,70,146,59,148,65,201,0,69,37,147,78,2,63,66,63,73,168,9,24,28,53,94,9,43,102,127,14,174,223,64,211,31,84,189,84,249,142,107,166,119,145,114,97,254,54,217,108,169,36,27,151,7,110,152,56,245,36,203,44,233,212,208,192,43,92,244,180,120,35,153,241,4,54,88,232,21,198,93,176,220,4,206,45,16,188,5,45,145,173,69,83,24,135,54,119,9,221,75,177,246,190,178,142,231,16,123,210,32,207,175,202,210,235,156,36,171,42,40,251,138,152,160,152,100,196,33,6,143,9,108,125,46,233,22,108,113,179,105,112,210,246,123,228,96,127,141,27,105,90,248,47,87,120,127,43,183,220,32,129,3,231,197,143,79,44,59,255,58,240,254,85,219,105,186,125,7,45,27,89,169,103,228,133,42,200,134,55,237,0,90,83,3,115,246,220,23,195,206,236,203,217,88,214,151,153,171,137,105,217,40,157,43,249,138,39,140,235,236,184,27,253,56,189,3,83,107,238,42,59,82,166,225,245,26,234,180,21,120,96,93,11,197,124,141,95,166,64,72,59,8,206,178,93,136,113,190,134,148,108,236,34,249,70,53,30,11,255,217,208,219,103,225,114,142,29,74,239,171,51,225,118,160,205,100,199,120,59,219,4,131,133,177,242,8,242,120,188,220,250,241,227,100,166,54,232,123,217,231,97,229,16,26,177,66,233,222,15,126,46,154,37,225,148,136,216,130,148,72,101,122,5,8,50,155,136,154,125,239,39,126,248,110,28,214,59,117,59,100,123,144,90,141,22,102,212,88,205,66,63,160,173,216,138,244,251,229,138,239,146,47,145,166,122,3,45,220,115,253,117,145,188,44,22,125,254,7,174,15,73,241,147,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0d7cf7b7-aeeb-464d-be24-906e65b3ca3f"));
		}

		#endregion

	}

	#endregion

}

