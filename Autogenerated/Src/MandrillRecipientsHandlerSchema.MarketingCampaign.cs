namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MandrillRecipientsHandlerSchema

	/// <exclude/>
	public class MandrillRecipientsHandlerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MandrillRecipientsHandlerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MandrillRecipientsHandlerSchema(MandrillRecipientsHandlerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8b342e64-49fc-4ec9-bf50-dddee0295296");
			Name = "MandrillRecipientsHandler";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d25f34fe-c5f7-43c4-95a5-0f83015bba7e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,86,75,111,19,49,16,62,47,18,255,97,8,151,4,170,164,69,136,67,219,20,209,82,74,64,65,129,22,174,200,221,157,36,134,141,189,242,35,80,104,255,59,99,175,119,179,78,55,109,64,92,162,120,198,51,243,205,55,143,181,96,11,212,5,75,17,142,39,227,115,57,53,253,19,41,166,124,102,21,51,92,138,135,15,126,63,124,144,88,205,197,172,113,65,225,65,171,180,127,158,206,49,179,57,170,149,254,163,101,202,252,162,51,73,30,43,156,145,83,56,201,153,214,251,48,102,34,83,60,207,63,97,202,11,142,194,232,183,36,33,107,127,121,48,24,192,161,182,139,5,83,87,71,225,28,244,48,149,10,204,28,97,17,60,128,170,93,244,43,211,65,195,182,176,151,57,79,33,117,113,55,135,133,125,56,102,26,199,140,231,132,188,198,146,16,5,244,187,66,47,133,54,140,204,246,97,162,248,146,25,44,245,69,121,128,212,233,129,11,3,175,113,202,108,110,70,194,160,90,178,28,134,240,236,249,65,219,101,109,148,227,234,68,73,113,250,179,80,168,181,11,52,132,206,46,236,194,30,236,13,246,224,9,188,132,39,29,199,107,210,30,108,204,133,53,168,71,226,173,180,138,108,95,236,134,80,143,145,242,245,208,227,60,38,74,22,168,12,71,159,136,52,152,26,204,98,116,1,215,215,66,201,148,64,125,160,102,113,168,94,165,198,178,156,255,194,99,155,127,63,93,16,95,43,46,75,136,69,229,15,228,18,149,226,89,237,107,210,112,229,122,43,73,102,104,224,183,66,99,149,136,34,29,220,56,245,77,59,162,111,242,242,127,160,121,23,220,180,32,9,17,34,20,155,168,28,163,153,203,108,83,67,184,234,156,97,221,6,221,207,26,21,53,145,32,72,206,216,70,199,94,192,178,100,202,25,86,141,211,165,255,189,104,214,162,57,237,159,95,233,115,52,134,114,210,125,138,245,133,229,22,187,177,231,29,239,55,233,76,80,113,153,221,201,90,207,211,150,240,169,143,91,98,56,28,82,47,94,95,175,64,29,173,247,119,5,61,105,224,94,187,82,250,245,148,38,129,104,222,84,173,85,123,228,38,226,66,241,217,140,166,243,13,23,89,227,220,109,50,101,74,217,123,188,162,152,2,127,192,69,45,232,86,53,126,10,157,32,237,236,184,194,159,41,105,11,167,9,217,6,60,175,138,162,94,99,253,145,31,245,20,29,167,85,220,85,172,30,48,29,97,108,203,193,85,159,138,64,141,103,220,100,234,11,25,38,213,81,11,115,39,170,50,9,8,188,140,6,62,154,232,54,215,75,201,51,90,26,72,255,29,8,202,105,187,222,114,117,29,233,42,203,140,236,78,127,114,109,116,183,87,151,240,19,46,104,86,170,244,187,189,102,225,194,130,172,89,250,108,232,236,246,72,63,198,178,214,126,107,235,205,215,192,209,31,23,35,116,105,210,216,19,59,32,108,158,239,192,148,229,154,14,70,217,80,178,205,116,52,115,251,27,78,2,244,191,162,163,46,99,99,207,55,199,125,45,222,65,109,180,240,245,205,175,26,118,237,141,18,121,15,14,238,43,66,91,1,218,9,111,174,228,192,254,58,178,109,43,112,41,101,14,53,139,91,18,255,47,244,133,73,137,153,129,225,173,125,115,23,202,182,254,143,7,241,246,198,161,8,142,137,251,115,223,214,225,163,219,14,239,255,200,248,215,76,169,92,127,37,121,65,217,1,154,86,79,217,175,32,167,254,185,52,47,159,52,238,137,116,251,141,84,74,10,166,216,2,4,181,194,176,19,51,223,57,26,53,220,57,157,123,124,4,101,255,112,224,45,189,163,240,218,170,191,181,141,185,28,85,19,180,85,107,120,74,121,69,41,245,197,170,181,218,135,202,125,175,170,43,245,236,222,181,148,170,65,6,164,198,142,13,162,21,210,110,181,185,104,165,52,22,146,236,15,250,133,166,52,110,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8b342e64-49fc-4ec9-bf50-dddee0295296"));
		}

		#endregion

	}

	#endregion

}

