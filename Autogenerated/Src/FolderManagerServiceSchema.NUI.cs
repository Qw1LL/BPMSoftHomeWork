namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: FolderManagerServiceSchema

	/// <exclude/>
	public class FolderManagerServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FolderManagerServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FolderManagerServiceSchema(FolderManagerServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2bec5c05-e607-4c38-b513-0c2f1b93db25");
			Name = "FolderManagerService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("be1f674b-cdb4-46e4-8c46-23cae20b9205");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,88,75,111,219,56,16,62,123,129,253,15,132,247,34,3,134,114,79,106,23,110,26,103,13,108,210,32,70,118,15,65,176,160,165,177,77,84,162,92,138,114,234,22,249,239,59,124,201,148,68,203,233,94,90,107,52,207,111,190,25,82,225,52,135,114,71,19,32,159,30,238,150,197,90,198,215,5,95,179,77,37,168,100,5,143,231,69,150,130,184,163,156,110,64,44,65,236,25,170,254,252,253,183,65,85,50,190,33,203,67,41,33,191,106,61,163,143,44,131,68,57,40,227,91,224,32,88,210,209,249,139,241,111,29,225,99,197,37,203,33,198,72,140,102,236,135,78,162,163,101,243,184,43,82,200,226,25,198,217,183,244,142,181,228,121,88,222,173,177,156,241,244,86,20,213,174,12,233,11,8,75,227,57,77,100,33,24,4,172,254,129,213,49,3,124,251,135,128,13,198,35,73,70,203,146,124,134,12,36,152,216,143,216,3,196,10,180,218,243,103,42,41,102,40,5,186,126,65,193,174,90,101,44,233,49,35,151,164,81,145,197,167,126,173,250,229,188,132,236,163,17,249,73,222,206,41,221,124,79,96,167,220,19,24,93,146,21,69,17,212,134,58,233,59,200,87,32,162,123,228,20,153,144,33,7,72,159,118,41,69,79,116,143,24,73,48,248,14,71,47,94,172,85,81,100,228,254,132,42,186,223,128,188,34,165,250,71,5,122,51,72,2,79,13,152,13,96,175,21,66,151,36,196,89,173,119,113,113,65,62,148,85,158,83,113,152,218,103,199,233,117,33,200,107,33,190,146,87,38,183,100,163,163,59,147,11,207,230,121,86,238,238,65,98,95,119,136,245,138,101,76,30,30,225,91,197,4,228,192,101,25,249,15,138,161,136,196,25,19,165,21,91,65,58,234,116,60,56,130,151,228,19,54,192,62,141,201,34,164,52,118,243,162,136,184,132,178,84,212,144,136,113,188,120,4,154,126,225,217,193,151,98,92,77,20,135,230,156,65,150,34,156,15,66,205,151,65,112,176,51,15,54,41,100,221,30,132,4,65,254,93,55,5,87,190,242,173,96,233,147,84,117,227,156,216,228,254,164,60,205,148,225,198,127,105,165,102,94,218,109,62,246,25,249,40,69,165,6,15,211,211,88,217,236,12,110,33,48,34,199,89,164,172,101,81,175,250,83,169,171,225,102,141,145,170,241,232,124,181,164,102,24,250,50,127,16,197,14,241,193,74,79,224,234,149,54,19,155,74,241,131,52,83,105,106,144,201,148,112,120,13,217,69,195,102,122,195,113,203,211,232,234,87,146,45,36,90,65,234,210,181,143,29,34,180,159,49,191,54,55,8,249,248,145,68,29,233,196,204,175,89,168,7,60,55,228,135,150,179,105,171,43,205,162,71,170,30,63,181,62,218,53,222,57,161,202,53,68,71,155,112,240,85,32,235,158,184,239,168,160,175,35,119,32,183,133,55,147,164,73,158,197,130,39,89,149,194,13,30,162,42,246,130,27,0,111,190,67,82,97,8,114,45,0,245,156,150,149,70,70,73,157,163,5,127,160,2,183,55,98,93,146,93,253,115,132,200,168,56,131,78,169,231,34,246,215,59,62,77,221,99,112,164,173,151,201,251,17,242,214,66,123,239,107,193,156,101,25,41,113,241,225,6,208,235,158,172,14,36,61,112,154,215,130,53,203,48,104,237,193,63,6,140,68,39,70,208,4,38,120,218,189,154,218,23,233,112,122,143,117,25,126,19,150,126,184,208,122,97,51,252,141,5,31,45,177,1,106,230,223,103,140,154,120,150,44,147,45,228,84,157,186,195,169,110,196,129,148,90,164,181,124,7,118,225,237,11,150,18,59,85,38,114,116,91,161,200,43,97,76,180,164,153,221,24,241,18,234,134,211,142,139,155,79,243,163,53,175,177,253,21,53,28,183,125,118,156,233,49,126,235,105,221,44,77,241,70,144,153,41,7,75,61,34,11,139,90,252,206,142,149,69,37,18,240,209,235,5,59,133,82,50,110,46,88,239,181,49,181,225,117,184,202,185,82,175,231,67,203,207,24,175,107,82,244,171,105,150,150,230,6,216,212,181,253,238,189,28,158,152,224,200,182,186,13,82,205,129,32,28,99,162,121,208,160,201,169,234,45,197,92,149,181,227,70,61,142,89,193,104,241,245,22,146,175,110,105,220,87,89,246,69,220,228,59,121,136,20,50,197,58,10,90,217,115,98,208,174,236,172,183,182,129,115,212,95,230,89,183,253,230,46,136,131,169,233,174,225,200,169,212,38,62,144,103,211,104,194,238,246,236,96,79,5,17,142,43,19,183,176,79,210,41,178,177,149,25,30,75,106,248,76,101,127,211,172,194,33,157,4,79,94,117,150,60,116,181,231,162,200,231,38,173,14,248,227,22,79,252,124,153,161,180,119,150,153,196,195,7,157,186,17,106,211,129,65,252,24,3,205,194,44,247,213,79,53,14,141,207,240,223,120,113,139,16,245,93,3,245,139,55,191,162,237,241,182,17,60,194,59,21,219,54,184,206,197,143,197,107,57,91,175,205,202,156,56,127,177,113,0,81,160,85,181,7,89,9,94,83,192,223,205,61,31,139,13,225,233,85,162,22,192,243,11,58,79,10,145,150,174,15,65,135,141,4,52,38,169,86,83,31,216,88,76,232,30,230,251,177,106,211,200,128,254,191,175,204,22,21,41,14,142,52,173,225,8,38,111,85,7,39,63,115,39,205,106,234,190,116,33,115,88,89,246,12,150,85,146,224,71,28,122,192,90,212,55,156,165,142,250,143,36,84,38,91,210,248,114,255,133,180,245,231,125,39,204,154,102,234,15,21,126,156,62,162,12,6,129,235,90,247,43,30,37,255,1,99,35,108,40,139,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2bec5c05-e607-4c38-b513-0c2f1b93db25"));
		}

		#endregion

	}

	#endregion

}

