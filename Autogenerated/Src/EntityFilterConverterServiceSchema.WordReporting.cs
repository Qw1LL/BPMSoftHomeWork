namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EntityFilterConverterServiceSchema

	/// <exclude/>
	public class EntityFilterConverterServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EntityFilterConverterServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EntityFilterConverterServiceSchema(EntityFilterConverterServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("54b92541-f3b5-4316-88c0-374222c9b554");
			Name = "EntityFilterConverterService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("860f3f61-a7cb-4775-9a5d-ff93716b6470");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,86,203,78,219,64,20,93,23,137,127,24,133,141,145,34,103,15,73,36,66,11,162,109,104,68,160,44,16,139,137,125,147,140,98,143,221,153,113,34,171,226,223,123,231,225,103,30,180,168,27,212,206,34,182,103,238,243,220,227,227,112,26,131,76,105,0,100,52,25,79,147,185,242,47,19,62,103,139,76,80,197,18,238,127,226,138,169,252,138,69,10,4,158,172,65,224,205,20,196,154,5,112,124,244,243,248,232,67,38,25,95,144,105,46,21,196,231,173,103,12,22,69,16,232,72,210,191,6,14,130,5,91,54,46,218,56,9,33,58,120,232,95,96,164,181,169,235,176,221,35,204,42,131,170,47,1,182,29,6,114,251,24,125,208,36,142,77,108,60,61,17,176,192,68,228,50,162,82,158,145,195,56,28,31,17,92,189,94,143,244,101,22,199,84,228,195,106,235,65,177,8,125,137,180,214,36,208,17,201,60,17,100,147,136,149,174,97,195,212,18,61,1,207,4,204,7,29,155,172,211,27,250,181,192,189,102,228,39,151,28,139,81,130,6,234,217,109,95,200,244,22,20,118,146,34,80,51,147,249,14,126,100,76,64,12,92,73,175,254,160,209,34,3,242,138,139,182,242,221,70,120,234,242,164,217,44,98,129,235,229,16,56,228,140,140,168,132,18,42,237,140,180,209,23,189,10,152,199,160,150,73,136,64,79,76,224,2,210,61,176,22,219,215,160,36,81,75,196,45,137,178,152,147,24,20,157,80,4,115,150,23,91,28,9,238,96,220,7,101,185,159,82,65,99,227,49,232,88,247,177,11,40,59,195,251,102,26,130,96,45,165,223,239,25,167,118,36,1,42,19,92,14,63,50,67,126,204,213,37,155,37,8,32,43,200,9,147,91,5,35,27,16,107,67,147,96,9,49,37,25,11,187,100,77,163,12,106,230,105,195,180,153,211,249,153,126,251,189,162,128,202,230,233,91,10,246,165,110,81,198,28,34,253,111,248,58,89,129,103,39,129,180,232,76,190,77,239,59,93,50,74,194,124,170,242,72,83,5,205,198,32,37,93,64,185,235,63,10,154,166,16,118,171,104,122,105,194,128,84,87,137,136,169,106,120,218,45,255,179,76,120,23,205,100,138,226,0,135,237,78,235,165,218,214,206,136,51,155,104,252,1,9,231,221,226,85,215,109,193,178,99,171,123,58,206,86,51,233,75,37,240,253,235,18,123,29,106,62,149,19,191,224,161,229,181,14,43,189,29,94,95,153,84,238,97,56,116,35,42,221,79,235,44,215,107,77,5,17,174,91,172,146,195,230,64,37,222,233,121,211,219,150,50,53,51,30,83,142,125,23,44,104,238,13,200,3,234,12,78,152,91,217,117,2,222,48,106,133,70,37,2,26,44,137,247,5,242,239,154,112,19,202,196,158,38,87,53,19,194,248,171,77,235,101,157,27,213,186,73,213,163,249,152,189,85,88,187,239,70,8,116,223,209,63,126,100,212,13,151,138,242,0,70,102,114,94,59,111,27,89,189,138,185,60,181,141,159,91,105,252,135,155,208,191,79,166,166,165,173,33,233,85,199,203,193,99,160,105,183,107,238,118,248,151,211,112,176,85,33,42,188,247,99,221,104,166,50,222,106,3,97,178,119,151,141,1,142,114,253,235,85,142,187,58,124,105,110,181,30,237,219,89,22,81,243,127,121,163,168,227,39,17,133,19,7,90,147,70,45,240,165,118,26,149,148,255,69,254,31,20,121,77,92,75,228,223,84,250,107,36,143,209,121,75,252,187,130,91,54,8,190,221,127,164,244,214,235,141,82,111,74,121,127,66,191,167,231,119,162,244,13,121,46,20,228,205,226,92,74,16,34,84,6,219,43,204,245,14,45,253,234,234,62,56,168,208,163,188,208,104,175,72,180,171,61,189,74,253,47,12,181,250,87,137,240,175,124,155,243,127,87,228,139,219,19,224,161,253,119,111,247,74,253,175,31,28,31,225,246,47,118,45,179,15,133,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("54b92541-f3b5-4316-88c0-374222c9b554"));
		}

		#endregion

	}

	#endregion

}

