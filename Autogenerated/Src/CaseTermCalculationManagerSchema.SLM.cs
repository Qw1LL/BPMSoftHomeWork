namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CaseTermCalculationManagerSchema

	/// <exclude/>
	public class CaseTermCalculationManagerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseTermCalculationManagerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseTermCalculationManagerSchema(CaseTermCalculationManagerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f3566d59-6cc2-4cb0-aadf-ab00cacf2d69");
			Name = "CaseTermCalculationManager";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b11d550e-0087-4f53-ae17-fb00d41102cf");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,84,77,111,219,48,12,61,187,64,255,131,224,94,28,160,112,238,107,28,160,75,151,33,135,108,65,210,237,58,168,54,157,9,144,165,64,146,51,120,107,255,251,72,249,163,142,23,119,45,208,75,16,209,143,228,123,79,20,21,47,192,30,120,10,236,227,102,189,211,185,139,23,90,229,98,95,26,238,132,86,151,23,127,46,47,130,210,10,181,103,187,202,58,40,110,186,243,217,132,120,193,37,168,140,27,251,63,224,61,152,2,193,105,41,253,121,7,230,40,82,56,151,101,70,162,241,39,229,132,19,96,71,62,47,121,234,180,169,191,35,98,58,157,178,153,45,139,130,155,106,222,156,23,146,91,203,114,109,88,202,45,48,135,156,240,95,71,42,110,211,166,189,188,67,249,32,69,202,82,159,186,192,180,129,146,53,87,124,15,6,145,228,93,112,101,96,143,81,182,20,32,51,251,129,109,140,56,114,7,158,82,112,168,15,204,0,207,180,146,21,251,102,193,160,79,10,82,42,197,126,148,39,231,90,72,112,133,14,215,85,155,115,211,2,129,214,153,146,84,83,35,207,179,70,12,181,251,192,74,161,123,92,138,223,96,153,130,95,76,96,54,87,56,10,58,71,48,0,75,13,228,73,56,46,49,156,206,201,161,127,45,170,35,7,110,120,193,20,78,88,18,158,234,8,231,164,147,165,93,32,158,77,61,218,39,55,6,143,247,141,6,46,157,22,159,48,239,123,48,240,142,37,3,28,77,77,240,244,178,163,107,112,63,117,246,26,51,91,150,232,165,159,162,110,166,128,134,180,122,173,79,53,154,164,135,243,69,47,253,140,63,71,45,178,231,182,145,127,12,85,131,167,212,214,135,35,55,204,39,3,18,219,226,160,161,243,73,61,249,245,11,169,226,207,224,102,148,210,179,122,115,154,49,143,124,173,32,160,65,233,205,217,173,217,151,5,246,140,134,55,124,61,156,221,201,228,166,163,147,9,31,66,23,124,27,139,124,6,12,137,82,253,45,122,86,20,227,219,33,235,22,90,150,133,250,206,101,9,189,162,233,96,94,0,29,193,6,90,40,55,166,119,4,222,137,125,47,189,248,174,140,187,163,135,158,244,46,136,104,220,87,7,200,122,122,102,132,186,23,5,204,163,112,139,51,136,43,215,64,246,85,133,77,181,102,77,18,241,45,46,110,36,70,203,163,249,147,188,228,65,220,197,8,96,163,225,29,92,63,179,108,122,245,152,238,192,245,72,70,225,14,15,148,77,104,148,222,50,136,219,56,41,104,170,136,156,69,3,107,72,248,202,46,129,187,210,32,67,254,32,33,139,194,59,253,69,187,45,180,235,23,90,125,212,99,149,223,74,218,145,85,29,204,32,11,39,237,124,251,14,111,113,181,169,64,166,178,36,97,25,228,188,148,46,106,49,19,246,248,248,166,91,178,135,150,230,72,193,142,233,75,150,158,212,233,89,138,239,193,155,214,179,148,182,22,253,50,144,120,235,77,237,247,41,237,43,159,95,138,24,125,250,11,158,203,137,70,47,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f3566d59-6cc2-4cb0-aadf-ab00cacf2d69"));
		}

		#endregion

	}

	#endregion

}

