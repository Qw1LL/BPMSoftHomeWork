namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TouchQueueJobDispatcherSchema

	/// <exclude/>
	public class TouchQueueJobDispatcherSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TouchQueueJobDispatcherSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TouchQueueJobDispatcherSchema(TouchQueueJobDispatcherSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1d3769e7-9dd3-453d-9b76-7f1f765bf589");
			Name = "TouchQueueJobDispatcher";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,81,143,219,54,12,126,118,129,254,7,34,125,113,176,192,193,94,115,151,20,237,221,173,200,208,172,233,210,97,143,133,98,211,137,122,182,148,74,114,174,217,208,255,62,74,182,108,199,142,179,187,151,187,152,34,69,242,227,71,82,130,229,168,15,44,70,120,191,94,109,100,106,162,59,41,82,190,43,20,51,92,138,215,175,254,125,253,42,40,52,23,59,248,92,48,101,254,185,169,191,27,3,133,209,38,222,99,82,100,168,250,231,127,227,150,116,242,92,138,230,108,151,201,45,203,102,179,82,30,125,148,187,29,137,233,156,52,222,40,220,145,107,184,203,152,214,51,248,34,139,120,255,185,192,2,127,151,219,123,78,193,26,242,165,156,234,116,58,133,91,93,228,57,83,167,69,245,189,65,117,68,13,198,154,193,65,114,97,52,124,183,230,145,55,152,182,44,14,197,54,227,49,196,214,215,144,43,152,193,123,166,177,127,48,129,229,187,195,225,225,136,194,124,228,218,160,176,97,5,132,24,253,173,211,88,43,121,64,101,56,82,46,107,197,143,204,96,169,208,13,222,9,150,66,27,38,168,28,50,165,67,68,136,21,166,243,209,178,198,119,52,93,192,19,55,123,16,84,185,182,138,11,126,237,242,173,149,255,32,29,107,32,21,36,152,178,34,51,22,132,62,10,30,134,198,13,92,186,14,230,11,184,47,239,169,101,209,111,92,36,245,87,216,14,163,36,76,19,249,216,122,10,222,190,237,223,225,179,46,9,16,188,65,145,148,232,93,129,210,69,92,158,87,209,203,35,42,197,19,4,109,148,37,25,213,234,131,146,197,193,162,96,67,111,199,54,186,185,82,4,242,19,163,214,196,34,38,78,64,13,162,217,14,33,85,50,239,1,238,72,65,16,15,225,90,22,188,197,172,85,121,91,229,130,10,243,53,239,72,110,90,41,93,177,235,9,108,167,6,193,14,141,205,181,119,43,16,238,97,95,58,7,129,79,87,220,132,127,105,84,52,18,4,198,118,30,140,199,46,186,64,15,121,153,195,145,101,133,45,100,16,252,188,2,241,59,1,252,50,213,91,177,48,65,119,59,198,187,254,124,62,198,165,33,124,253,222,250,26,128,181,82,61,251,104,144,44,127,5,60,37,236,218,151,193,156,128,43,178,108,236,53,130,206,113,23,214,82,222,69,243,230,146,113,244,73,84,85,184,71,39,79,224,151,57,244,132,149,45,129,108,255,41,52,133,18,23,50,174,20,124,193,58,81,246,138,53,212,122,43,52,123,153,116,71,152,135,254,40,121,210,143,48,148,219,111,148,40,104,186,211,14,203,30,203,124,107,121,20,187,228,139,170,95,161,215,123,97,164,210,144,123,76,90,52,228,130,198,54,55,137,140,167,21,119,42,157,102,120,44,105,25,193,7,52,118,39,81,197,198,22,54,250,237,139,211,156,156,141,19,27,218,139,188,52,67,149,110,108,230,167,115,119,105,246,62,111,94,149,91,207,193,239,193,29,110,155,94,80,174,140,75,97,80,9,150,61,252,192,184,48,24,250,226,60,237,121,134,16,26,85,212,245,10,142,76,213,227,113,126,214,67,81,69,130,208,115,220,182,80,173,218,109,158,173,66,246,120,70,232,159,221,1,242,12,76,93,248,30,48,26,254,97,181,7,158,164,122,116,111,28,187,8,38,126,59,20,212,138,86,224,163,160,77,222,44,36,255,107,197,5,97,144,157,232,182,219,129,215,193,34,44,227,110,111,155,73,215,167,119,54,1,90,96,92,38,75,81,222,76,52,253,117,82,1,164,55,39,122,67,228,118,68,204,192,194,76,161,250,128,102,117,94,170,82,207,185,78,185,66,187,57,85,225,166,201,12,218,41,172,122,231,209,134,106,111,214,146,6,224,233,133,157,212,218,181,23,9,232,189,106,200,43,192,224,155,220,66,74,11,161,205,72,38,18,74,140,214,55,73,65,161,207,14,182,74,62,162,176,71,182,177,134,8,235,36,7,166,88,238,222,62,243,81,44,137,170,63,204,104,49,240,104,242,111,179,187,74,143,182,244,237,212,93,208,126,243,84,179,203,98,103,8,159,176,99,5,149,23,79,19,234,214,243,33,30,122,133,146,191,95,212,233,207,58,51,75,194,51,168,123,62,31,68,114,197,35,92,52,219,80,27,145,227,255,11,247,170,241,243,252,118,152,81,74,207,133,36,251,15,106,88,172,16,68,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1d3769e7-9dd3-453d-9b76-7f1f765bf589"));
		}

		#endregion

	}

	#endregion

}

