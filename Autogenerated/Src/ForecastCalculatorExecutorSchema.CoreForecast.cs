namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastCalculatorExecutorSchema

	/// <exclude/>
	public class ForecastCalculatorExecutorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastCalculatorExecutorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastCalculatorExecutorSchema(ForecastCalculatorExecutorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("78b866b1-074a-46c1-ad48-6fd542b834df");
			Name = "ForecastCalculatorExecutor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,88,91,111,219,54,20,126,118,129,254,7,78,29,10,25,48,20,96,143,153,227,34,117,147,66,69,146,5,117,210,61,20,197,64,75,180,195,66,18,53,146,74,235,21,249,239,59,188,72,164,46,150,221,173,125,177,45,234,156,239,220,47,116,129,115,34,74,156,16,244,250,246,122,197,54,50,90,178,98,67,183,21,199,146,178,34,186,100,156,36,88,200,15,191,61,127,246,237,249,179,73,37,104,177,69,219,140,173,113,118,122,186,100,121,14,68,87,108,187,133,227,223,155,247,55,228,139,100,133,80,112,239,4,43,220,139,213,78,72,146,119,159,65,102,150,145,68,9,20,209,91,82,16,78,147,30,205,21,45,254,118,135,78,91,165,193,208,57,39,195,167,209,69,33,169,164,68,236,121,125,137,19,201,184,121,15,20,47,56,217,130,94,104,153,97,33,78,81,237,143,37,206,146,42,195,64,121,241,149,36,21,124,107,234,147,147,19,52,23,85,158,99,190,91,216,103,67,64,4,218,88,94,148,176,172,202,11,129,18,11,162,240,63,179,117,84,3,156,116,16,230,130,16,156,9,134,18,78,54,103,65,75,221,248,29,91,215,42,4,232,68,177,148,213,58,163,9,74,148,198,35,10,163,83,228,51,3,35,4,24,62,27,147,47,41,201,82,176,249,150,211,71,44,137,121,89,154,7,36,36,232,157,32,78,112,202,138,108,135,98,72,2,244,87,6,31,103,8,126,94,227,2,111,9,135,104,74,149,29,132,207,247,43,178,8,167,198,215,147,23,164,72,141,240,182,38,215,68,62,176,189,170,196,247,101,10,223,181,128,213,3,33,242,61,41,153,160,0,190,67,160,194,40,65,120,47,8,135,172,47,76,6,162,170,245,56,69,42,237,39,19,78,100,197,109,26,152,20,217,41,227,230,227,194,23,161,102,158,20,228,11,2,76,33,121,165,88,207,249,182,202,73,33,195,160,45,44,152,117,165,43,207,76,38,79,29,131,251,190,84,86,246,79,199,77,155,65,16,185,202,127,185,43,201,65,59,251,232,139,80,49,206,126,134,133,86,49,157,61,80,37,244,31,188,206,200,74,31,30,105,83,1,141,173,99,83,155,50,26,4,135,195,59,48,42,156,70,55,0,48,179,48,175,94,89,216,232,34,47,229,110,72,227,71,70,83,180,132,114,144,228,61,201,105,145,30,161,234,219,10,120,234,174,16,167,181,186,143,152,67,93,89,140,123,73,51,221,174,160,174,122,65,121,223,163,50,181,100,65,68,167,18,206,70,194,250,115,18,215,169,1,194,59,234,40,249,90,106,232,185,192,112,105,199,128,24,42,119,171,228,129,228,248,62,78,1,160,19,192,11,143,192,235,55,49,76,139,215,59,21,190,48,104,89,23,76,35,192,113,122,37,21,231,32,196,6,73,130,87,134,164,44,29,85,212,144,121,32,122,92,2,155,242,84,19,15,51,68,195,142,9,117,128,39,231,21,244,51,174,165,13,41,97,75,202,87,106,132,108,85,173,63,19,75,230,60,105,95,190,33,34,225,180,212,233,119,54,92,79,221,172,12,26,43,60,230,96,106,1,111,89,89,149,119,84,102,68,69,212,20,5,120,57,199,50,252,78,116,135,212,128,79,116,138,232,210,155,234,147,39,231,104,216,83,4,132,216,122,218,58,210,217,235,147,95,139,237,242,1,131,204,172,169,139,232,150,9,121,109,32,238,216,121,150,133,110,50,170,244,22,81,187,143,139,59,86,210,100,134,212,250,2,4,143,132,203,104,5,123,137,178,142,252,161,29,30,90,141,234,84,239,151,108,212,237,7,93,103,152,228,153,238,237,39,55,76,210,205,14,180,85,113,23,161,109,109,86,238,146,165,100,180,135,252,104,143,181,228,30,239,152,193,70,105,135,8,9,253,177,114,139,57,206,5,42,213,23,145,96,241,204,252,22,67,19,239,227,167,102,127,98,92,212,118,43,243,112,242,128,194,161,25,233,232,17,45,134,184,39,238,44,114,42,58,125,108,164,159,246,153,101,114,232,202,147,10,97,126,3,71,119,20,186,209,127,155,6,116,131,194,95,250,163,43,22,151,144,91,21,39,23,133,170,182,212,245,58,104,46,204,19,31,76,27,235,204,28,244,108,152,28,88,157,170,209,183,103,6,245,224,126,213,153,12,70,190,38,106,70,195,168,160,145,65,97,250,197,30,135,3,110,253,51,186,151,201,13,251,98,152,214,140,101,48,96,69,149,29,22,109,44,51,210,181,48,43,88,71,197,96,52,238,85,219,111,244,39,230,69,248,107,176,100,85,150,162,130,73,36,153,21,129,96,246,74,239,18,224,45,255,250,181,84,122,54,93,41,78,79,191,57,115,159,130,67,169,103,90,133,74,177,239,204,179,25,210,254,160,162,147,55,112,53,240,83,240,127,101,32,122,249,114,84,192,164,211,232,142,106,205,189,100,120,66,36,19,164,134,60,212,123,251,236,158,107,15,95,68,244,29,203,188,236,94,250,218,183,62,184,216,33,86,18,123,159,110,232,253,59,158,57,209,109,70,47,156,103,221,237,106,113,247,64,116,28,213,196,168,67,48,63,209,28,195,0,174,103,25,102,247,220,226,179,87,69,157,65,86,227,67,233,19,191,161,250,23,232,62,55,3,105,134,152,238,251,11,79,138,63,135,156,167,161,220,66,149,126,83,71,248,177,201,154,56,13,62,185,113,15,30,163,44,141,83,181,247,250,212,183,245,121,240,9,97,129,174,168,144,115,5,185,112,172,84,128,9,230,95,3,101,139,18,170,82,188,37,52,110,211,248,146,135,18,117,15,70,159,176,6,210,189,32,46,54,12,122,193,229,80,201,195,253,153,75,146,30,44,120,165,81,59,4,192,224,201,236,45,172,174,63,117,252,208,20,219,119,193,69,231,101,233,61,57,184,174,196,167,31,211,42,142,108,9,254,116,95,25,87,218,93,101,95,101,183,82,209,110,26,102,51,234,175,32,222,160,129,21,164,206,56,139,230,22,131,54,154,221,97,135,47,226,99,62,159,117,87,209,139,148,74,229,167,165,254,159,72,221,71,245,70,252,227,4,152,61,237,3,206,170,159,39,67,93,10,224,93,7,127,122,100,121,144,34,61,162,56,198,247,173,113,117,123,89,226,77,208,253,179,98,54,60,199,252,69,183,51,59,204,105,251,16,206,254,5,144,234,61,227,121,21,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateRemindingDescriptionLocalizableString());
			LocalizableStrings.Add(CreateRemindingPopupTitleLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateRemindingDescriptionLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("3dc542fe-c7a2-4fc5-8293-409463b43fb1"),
				Name = "RemindingDescription",
				CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39"),
				CreatedInSchemaUId = new Guid("78b866b1-074a-46c1-ad48-6fd542b834df"),
				ModifiedInSchemaUId = new Guid("78b866b1-074a-46c1-ad48-6fd542b834df")
			};
			return localizableString;
		}

		protected virtual SchemaLocalizableString CreateRemindingPopupTitleLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("b59a49a0-9b2d-4398-ae38-f62389e28068"),
				Name = "RemindingPopupTitle",
				CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39"),
				CreatedInSchemaUId = new Guid("78b866b1-074a-46c1-ad48-6fd542b834df"),
				ModifiedInSchemaUId = new Guid("78b866b1-074a-46c1-ad48-6fd542b834df")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("78b866b1-074a-46c1-ad48-6fd542b834df"));
		}

		#endregion

	}

	#endregion

}

