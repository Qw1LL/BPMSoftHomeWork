namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SupportServiceLangEmailTemplateHandlerSchema

	/// <exclude/>
	public class SupportServiceLangEmailTemplateHandlerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SupportServiceLangEmailTemplateHandlerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SupportServiceLangEmailTemplateHandlerSchema(SupportServiceLangEmailTemplateHandlerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4c6b9a45-0482-4042-8c7a-9872af895143");
			Name = "SupportServiceLangEmailTemplateHandler";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("91d5b8ed-2389-4812-9e17-f329888285e6");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,86,223,79,219,48,16,126,46,18,255,195,45,72,168,72,85,250,14,180,104,116,192,42,1,67,10,236,221,56,151,214,82,226,68,182,195,150,77,252,239,59,219,73,91,167,133,149,167,237,37,149,207,247,243,187,239,206,149,172,64,93,49,142,112,249,112,151,148,153,137,103,165,204,196,162,86,204,136,82,30,30,252,62,60,24,212,90,200,5,36,141,54,88,156,173,206,107,3,133,187,165,241,149,52,194,8,212,103,61,39,9,26,67,39,13,19,112,122,65,204,152,116,58,5,50,36,211,35,133,11,186,128,164,174,170,82,153,4,213,139,224,120,203,228,226,170,96,34,127,196,162,202,153,193,175,76,166,57,42,103,50,30,143,225,92,215,69,193,84,51,109,207,214,160,102,11,4,141,76,241,37,44,189,62,100,165,34,145,243,9,218,135,0,237,242,36,177,207,35,238,92,142,55,124,86,245,115,46,56,240,156,105,189,103,110,112,10,129,120,86,22,133,213,93,165,62,32,188,233,187,42,153,144,209,70,213,220,148,74,159,194,131,139,232,53,250,21,58,193,92,18,222,44,23,191,16,36,254,0,65,198,76,82,89,101,70,186,136,192,21,102,147,104,191,92,35,24,79,109,221,219,133,123,73,197,20,43,64,18,129,38,17,103,26,231,105,52,157,209,47,40,228,165,74,41,120,138,212,255,76,160,138,207,199,78,123,183,113,77,224,83,157,18,185,109,127,52,125,162,51,240,149,32,48,110,49,223,175,130,225,77,45,82,240,185,141,224,41,8,3,97,212,19,235,124,112,10,207,164,60,236,44,122,42,96,103,97,240,250,31,194,111,113,54,77,52,117,243,214,252,43,180,125,116,240,201,124,4,239,206,226,61,188,143,80,166,126,38,194,1,185,67,179,44,83,59,27,74,188,80,50,239,116,231,6,13,228,221,14,16,43,114,66,166,202,2,108,65,207,229,79,120,110,250,179,239,246,131,144,220,89,16,185,23,130,38,210,111,170,61,219,163,3,252,28,118,209,52,9,162,188,29,4,94,88,94,227,118,79,21,154,90,73,61,189,221,174,136,148,187,91,215,69,143,12,184,105,32,16,236,210,169,165,224,206,125,103,62,79,135,20,209,102,178,35,219,182,21,3,145,65,171,21,207,245,125,157,231,223,212,85,81,153,102,184,203,166,51,26,248,92,92,248,216,169,219,231,192,53,150,190,158,52,9,95,98,193,186,38,36,141,228,221,11,208,222,76,188,171,144,83,241,166,241,29,147,84,134,138,175,105,239,204,219,193,187,108,238,169,1,195,232,110,219,111,116,226,179,8,72,75,239,209,155,41,196,51,133,132,162,215,31,134,137,180,190,218,66,189,175,248,26,13,95,94,19,183,190,92,14,163,132,232,139,4,22,121,255,156,18,145,181,142,70,59,145,246,117,94,116,78,168,93,143,77,133,233,172,204,235,66,126,183,84,56,183,64,78,169,40,114,66,21,175,27,24,181,198,167,125,168,247,30,161,191,61,47,84,188,106,160,42,5,113,212,18,54,15,95,84,203,139,61,71,194,180,187,195,62,26,174,112,232,36,33,143,223,89,100,157,193,109,201,8,218,45,55,154,158,204,143,141,141,43,9,3,47,253,73,242,251,176,124,65,165,200,206,79,148,95,127,254,173,89,151,53,130,249,99,144,224,234,206,31,187,233,120,123,232,136,140,225,191,37,75,6,199,128,30,251,70,208,123,82,252,134,33,126,249,81,117,68,104,41,234,178,236,218,54,79,41,198,123,11,97,7,63,207,86,139,32,95,123,249,52,129,20,51,86,231,198,193,112,2,199,199,48,215,93,253,148,179,72,135,155,208,172,77,71,125,88,250,91,99,173,186,185,53,218,203,164,230,156,166,128,218,70,25,72,218,71,112,177,150,197,109,99,54,3,247,123,176,231,168,120,105,40,124,253,3,242,95,212,111,59,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4c6b9a45-0482-4042-8c7a-9872af895143"));
		}

		#endregion

	}

	#endregion

}

