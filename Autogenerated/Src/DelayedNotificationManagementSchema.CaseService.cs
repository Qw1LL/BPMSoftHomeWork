namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DelayedNotificationManagementSchema

	/// <exclude/>
	public class DelayedNotificationManagementSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DelayedNotificationManagementSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DelayedNotificationManagementSchema(DelayedNotificationManagementSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8f02faf6-999b-4326-a137-67b29e16e749");
			Name = "DelayedNotificationManagement";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("33bac096-c819-4c57-86af-fe71bbb0cb56");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,86,75,111,227,54,16,62,123,129,253,15,172,246,34,23,134,92,20,109,15,77,108,192,235,120,183,41,154,108,218,116,187,135,162,7,90,26,57,108,37,82,32,41,39,66,177,255,189,67,82,212,203,178,178,69,183,23,39,34,231,241,205,204,55,195,225,52,7,85,208,24,200,235,187,155,123,145,234,104,43,120,202,14,165,164,154,9,254,242,197,223,47,95,204,74,197,248,129,108,69,158,11,126,209,249,150,208,255,234,235,14,238,238,227,7,72,202,12,100,123,254,1,246,209,208,234,125,165,52,228,247,160,53,126,41,178,26,49,28,161,140,23,64,69,84,125,37,225,128,23,100,155,81,165,200,247,228,10,50,90,65,114,43,52,75,89,108,149,110,40,167,7,200,129,107,171,177,92,46,201,165,42,243,156,202,106,93,127,111,72,108,245,83,33,73,226,44,16,222,49,65,242,198,70,228,77,44,59,54,138,114,159,177,184,54,50,9,1,33,110,138,98,119,196,127,127,98,24,47,7,249,154,42,64,27,152,110,252,109,3,18,92,105,202,181,9,234,78,178,35,213,224,4,134,248,237,193,21,101,89,69,224,9,226,210,226,45,64,50,145,24,172,167,96,103,133,51,71,98,227,130,48,4,117,5,41,45,51,189,205,128,34,160,157,55,115,103,173,96,37,190,254,134,124,73,190,251,234,226,172,127,167,2,4,142,32,43,146,178,35,144,156,113,60,81,255,22,131,75,219,24,136,111,47,78,21,149,150,134,58,63,138,253,91,41,202,226,22,57,141,146,193,72,9,236,125,224,72,51,123,5,60,113,121,238,39,253,13,131,44,57,201,120,33,133,134,88,35,39,222,43,144,88,24,142,95,70,124,240,105,26,102,54,59,128,182,64,27,164,170,62,248,56,237,251,6,244,131,168,157,215,254,38,10,254,22,144,25,37,250,55,137,240,0,82,41,114,66,139,34,243,180,197,114,96,102,81,66,195,147,62,83,9,123,82,80,73,115,194,49,125,171,160,22,15,214,155,179,150,46,151,86,161,213,151,160,75,201,213,250,125,31,17,10,250,155,201,68,98,52,253,147,208,55,201,214,121,244,158,231,117,146,143,84,154,64,59,38,86,13,184,14,236,223,131,77,87,40,248,131,80,69,122,71,174,84,44,37,225,192,220,138,240,50,203,188,191,153,126,144,226,145,112,120,36,27,121,40,77,39,223,226,245,59,185,203,11,93,237,158,98,40,44,236,129,191,185,51,143,149,199,95,151,137,62,236,200,13,189,126,240,93,182,140,22,223,15,84,69,104,221,102,216,252,127,138,253,84,133,117,85,64,183,202,191,98,207,4,107,252,33,230,6,11,213,8,140,179,194,77,148,107,126,227,218,58,88,215,125,201,120,211,233,93,86,180,165,62,50,169,75,154,145,163,96,73,131,28,253,94,26,4,235,208,180,254,192,246,220,166,235,241,1,36,16,35,132,45,113,141,127,220,68,192,9,237,74,130,153,51,105,187,230,169,32,113,41,37,150,196,178,111,53,32,87,180,109,47,93,57,234,161,97,167,117,61,49,76,240,34,13,141,183,121,180,81,10,242,125,86,253,140,176,205,44,74,140,80,75,148,47,176,198,205,147,22,93,9,80,22,28,78,243,176,49,185,232,141,164,121,67,163,158,170,255,207,133,157,85,109,82,186,202,139,97,60,31,132,252,203,62,220,145,189,118,134,103,157,20,184,243,97,86,23,150,208,11,162,101,9,93,94,78,17,237,23,200,197,17,105,246,121,185,213,225,134,225,132,115,210,6,255,105,229,255,15,69,236,21,161,241,126,182,120,207,183,163,157,197,197,248,230,128,169,59,255,6,142,247,8,206,137,98,228,5,67,80,42,244,76,50,68,28,240,2,135,232,181,122,3,20,167,12,236,56,221,103,144,132,99,47,97,208,210,209,52,159,67,11,178,121,103,251,123,152,49,251,27,205,74,24,184,243,188,235,121,168,80,99,240,112,7,139,103,94,246,154,139,179,238,104,24,218,92,135,125,148,94,199,224,143,221,210,242,57,224,215,9,178,107,208,84,36,227,123,210,115,129,12,172,175,195,30,114,223,146,4,50,5,190,62,109,107,156,102,196,187,27,151,57,113,54,210,242,159,176,137,216,189,118,130,250,63,80,158,216,119,168,179,42,224,218,42,255,175,101,163,112,139,54,6,44,37,75,192,53,204,59,110,58,218,120,125,110,109,216,227,170,29,117,196,253,181,203,205,96,41,89,141,172,37,125,133,233,78,157,88,250,220,105,255,240,227,63,50,122,77,47,145,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8f02faf6-999b-4326-a137-67b29e16e749"));
		}

		#endregion

	}

	#endregion

}

