namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EmailMacrosManagerFactorySchema

	/// <exclude/>
	public class EmailMacrosManagerFactorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EmailMacrosManagerFactorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EmailMacrosManagerFactorySchema(EmailMacrosManagerFactorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1dcb3000-5b6a-4194-879d-882c4655dfa9");
			Name = "EmailMacrosManagerFactory";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("77fa8847-960e-4748-ad77-e37bb90e03a0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,86,91,107,219,48,20,126,118,161,255,225,44,133,146,64,231,188,183,73,70,155,94,40,35,91,161,29,123,24,99,168,206,113,34,176,37,35,201,45,94,233,127,223,145,228,164,182,107,39,233,110,15,9,28,233,232,92,190,239,243,145,4,75,81,103,44,66,56,187,153,221,202,216,132,83,41,98,190,200,21,51,92,138,253,189,167,253,189,32,215,92,44,224,182,208,6,211,147,134,77,254,73,130,145,117,214,225,21,10,84,60,122,241,121,9,170,48,188,100,145,145,138,163,110,223,167,85,90,63,80,184,160,88,48,77,152,214,112,12,23,41,227,201,140,69,74,234,25,19,108,129,202,135,41,156,247,112,56,132,145,206,211,148,169,98,82,218,222,13,184,208,134,137,8,53,200,24,208,70,129,212,7,208,16,75,5,115,76,88,129,115,16,210,240,152,71,174,221,112,21,114,88,137,153,229,247,9,143,32,114,5,109,40,39,176,80,5,246,183,234,225,146,99,50,215,199,112,163,248,3,51,232,42,14,50,111,192,57,119,160,81,146,145,54,138,192,56,242,193,191,114,179,172,37,152,192,143,178,240,25,203,60,72,193,1,138,185,79,82,218,101,198,27,37,51,84,134,48,166,172,174,110,191,223,196,201,45,92,188,119,168,104,138,133,10,30,151,60,90,2,75,18,249,168,193,72,136,164,48,74,38,96,150,8,49,45,90,24,169,85,254,192,77,1,145,66,2,204,214,28,243,36,177,76,50,49,39,124,109,217,132,120,166,36,1,111,25,14,87,201,174,75,58,108,24,27,114,164,17,109,152,120,220,59,199,152,229,137,169,53,221,27,78,60,226,235,0,53,78,8,69,105,72,117,196,95,59,104,208,22,20,158,130,5,154,19,234,152,254,158,55,32,243,69,147,51,1,32,188,176,187,106,240,194,176,206,211,181,111,211,124,130,69,37,91,23,111,116,128,68,144,91,37,57,189,148,205,109,40,241,90,112,195,89,194,127,18,220,12,4,62,174,5,223,130,112,167,106,223,8,115,91,136,254,0,156,240,131,138,74,97,236,42,218,93,226,253,129,157,9,193,219,80,218,166,239,255,3,145,91,201,152,98,41,8,26,166,227,94,94,19,64,111,114,71,137,242,134,160,70,67,119,162,42,163,110,128,27,138,170,199,31,128,3,63,56,166,134,184,94,147,209,56,51,110,156,114,104,7,173,223,136,167,174,157,167,70,41,53,210,254,172,141,46,101,208,152,46,107,116,230,63,232,182,158,96,23,25,206,208,44,101,231,92,191,151,52,52,175,117,123,59,119,69,134,125,255,45,172,110,163,79,36,154,85,31,15,76,129,33,23,42,203,122,210,125,106,220,137,170,171,111,70,161,201,149,240,206,239,136,178,60,73,224,240,208,217,225,181,190,205,239,157,100,63,199,125,187,34,227,126,123,57,131,58,131,101,7,29,76,76,237,204,199,210,114,227,60,218,212,75,89,161,187,199,75,9,132,151,82,69,72,77,141,186,198,64,37,206,81,73,181,85,99,229,195,63,85,139,60,69,97,250,205,239,236,168,49,121,223,212,27,205,172,149,196,187,59,234,56,91,122,18,103,109,10,243,116,241,24,250,27,53,81,77,183,202,23,188,68,110,197,254,181,42,158,155,131,56,60,157,207,235,160,150,70,93,70,233,111,137,127,251,37,69,84,215,102,110,57,28,124,87,177,146,233,26,60,77,212,218,87,27,61,204,220,219,2,107,243,122,215,209,91,233,180,55,241,47,72,187,81,31,183,219,94,14,84,116,21,104,177,139,202,171,144,147,4,13,163,202,63,98,81,163,8,62,84,221,190,85,182,190,211,59,183,162,192,87,188,238,76,201,182,27,241,106,3,31,127,21,227,202,93,208,10,240,89,97,85,111,99,108,199,150,220,155,124,236,130,80,185,86,93,122,254,5,187,157,27,95,238,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1dcb3000-5b6a-4194-879d-882c4655dfa9"));
		}

		#endregion

	}

	#endregion

}

