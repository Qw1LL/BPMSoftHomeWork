namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseEmailHashComposerSchema

	/// <exclude/>
	public class BaseEmailHashComposerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseEmailHashComposerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseEmailHashComposerSchema(BaseEmailHashComposerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5367cfa4-bae2-4728-99b0-9e59ee96e039");
			Name = "BaseEmailHashComposer";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5e01e2a5-733f-47cc-a4c2-452cdff090f0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,88,219,110,219,70,16,125,150,1,255,195,130,121,145,0,70,42,10,244,69,182,20,196,183,88,64,212,6,145,132,0,41,250,176,34,135,210,22,228,82,221,93,218,81,10,255,123,103,111,188,136,146,160,198,181,203,7,67,123,153,217,153,51,103,231,144,230,52,3,185,161,17,144,171,79,211,89,158,168,254,117,206,19,182,42,4,85,44,231,231,103,127,159,159,117,10,201,248,138,204,182,82,65,118,177,51,198,253,105,10,145,222,44,251,31,128,131,96,81,181,167,114,42,96,255,108,255,142,70,42,23,12,36,174,227,142,55,2,86,232,139,92,167,84,202,33,185,162,18,110,51,202,210,123,42,215,215,121,182,201,37,8,179,113,48,24,144,75,89,100,25,21,219,177,27,27,35,18,9,160,10,36,89,162,45,1,109,76,214,104,141,51,73,46,220,4,227,82,81,30,65,223,123,26,212,92,253,126,3,9,45,82,117,197,120,140,241,118,213,118,3,121,210,157,180,2,233,133,228,87,4,144,140,72,176,55,208,160,247,7,186,219,20,203,148,69,36,50,193,237,221,71,134,164,237,28,45,17,124,252,91,98,50,5,181,206,99,68,229,147,200,21,98,14,177,93,223,133,194,76,124,6,85,8,46,73,140,88,16,149,19,169,132,198,62,202,249,3,8,165,161,200,168,34,88,193,77,138,59,52,14,109,32,236,204,134,10,154,17,142,137,142,130,2,3,67,134,112,91,241,96,124,41,1,52,224,201,40,88,52,151,6,227,10,228,203,129,241,81,185,20,54,184,241,205,105,193,93,14,188,129,246,176,241,217,123,179,15,160,180,163,57,203,224,206,88,118,155,177,144,102,212,61,162,73,221,233,88,159,59,139,200,97,53,145,119,200,160,66,192,45,167,203,20,226,174,206,109,6,24,93,44,39,124,6,60,214,199,5,61,227,165,243,142,4,91,124,222,78,167,111,227,152,220,223,15,179,108,40,101,96,23,135,237,197,64,95,132,206,147,46,29,113,207,78,1,235,211,190,140,5,103,127,21,96,136,188,143,198,68,71,101,107,253,152,23,105,76,150,224,209,68,156,16,225,197,252,26,51,213,104,233,124,137,66,172,190,231,92,215,189,17,68,173,250,141,249,58,7,36,30,133,220,30,27,198,18,59,170,149,248,168,157,1,174,102,105,66,62,197,88,49,149,86,150,197,242,79,44,215,41,118,203,60,222,122,51,253,251,180,179,50,248,138,224,76,120,146,7,227,69,3,175,19,204,99,72,65,193,151,53,83,48,211,173,85,6,227,187,148,174,66,172,86,204,34,211,154,88,66,56,216,194,216,221,228,81,111,39,166,21,203,147,14,105,16,62,24,79,18,183,142,119,241,96,28,250,78,74,162,68,1,97,211,53,81,107,224,248,7,87,141,19,180,19,154,40,177,225,90,89,40,252,37,24,77,217,119,35,14,7,194,108,198,153,176,111,115,93,58,19,134,244,112,176,111,68,192,6,47,153,38,228,99,181,132,16,33,212,184,157,36,136,216,33,28,124,51,88,28,191,19,245,174,225,237,247,245,142,178,243,118,221,156,165,116,72,124,83,49,19,122,16,122,43,19,99,57,210,188,10,201,188,198,26,195,23,63,8,109,43,88,230,121,74,90,53,65,237,48,245,240,190,154,117,213,202,210,234,31,117,127,123,224,117,30,119,186,220,123,236,110,15,76,109,23,138,165,90,168,235,89,187,116,171,44,93,122,54,175,70,42,237,4,194,157,144,93,116,123,2,235,85,141,239,128,102,149,221,206,233,117,84,190,91,144,136,166,81,161,197,0,91,219,214,85,186,164,170,124,101,249,170,187,52,161,248,14,83,139,232,160,230,217,157,173,12,15,138,220,228,150,23,25,8,173,68,151,150,36,99,205,90,93,58,64,57,194,195,56,77,143,43,94,72,202,106,223,204,127,179,232,25,126,248,107,161,159,7,106,111,58,222,252,209,233,162,168,247,99,225,75,255,90,21,235,94,245,243,206,158,216,183,187,219,235,67,71,254,254,109,182,81,219,139,118,88,173,75,209,86,252,29,137,55,84,235,124,100,82,149,152,57,196,71,216,121,31,73,99,197,94,148,206,222,75,81,69,110,175,134,27,91,1,242,195,43,115,81,236,111,223,6,66,119,175,155,177,247,194,151,57,43,161,169,124,181,195,246,37,230,66,120,213,252,252,153,230,200,39,91,114,84,214,238,169,228,181,7,207,20,21,170,73,97,223,59,59,230,78,216,109,72,156,185,96,153,51,234,54,98,119,116,235,88,138,245,223,199,241,103,202,87,208,61,196,180,211,224,145,207,37,217,127,120,204,81,126,189,112,58,59,212,122,233,172,26,172,234,60,185,218,62,213,197,212,214,185,46,103,173,247,138,58,87,252,107,133,35,139,99,129,230,86,10,124,165,214,72,173,41,85,235,254,148,241,238,207,191,252,84,6,223,255,104,150,93,4,238,108,191,134,206,173,223,46,26,88,63,13,129,125,131,80,216,239,198,67,31,145,230,179,180,166,198,140,175,241,245,78,197,121,228,36,177,253,77,218,47,133,103,71,112,154,10,211,67,249,52,168,216,47,223,7,38,84,65,211,227,74,246,131,10,86,1,211,214,196,93,23,214,170,245,22,114,98,222,238,159,2,134,117,63,144,124,237,91,245,160,163,127,145,244,115,100,177,217,213,158,221,45,253,103,240,225,246,232,191,133,27,179,23,255,207,235,7,57,119,193,28,121,231,168,24,245,146,93,250,200,109,181,179,205,201,167,243,179,127,0,120,50,3,136,174,19,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5367cfa4-bae2-4728-99b0-9e59ee96e039"));
		}

		#endregion

	}

	#endregion

}

