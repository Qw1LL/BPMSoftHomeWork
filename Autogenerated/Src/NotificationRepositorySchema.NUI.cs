namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: NotificationRepositorySchema

	/// <exclude/>
	public class NotificationRepositorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public NotificationRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public NotificationRepositorySchema(NotificationRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("d740bb45-cf82-4737-a258-74ecf82e9dfd");
			Name = "NotificationRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,86,91,79,219,48,20,126,46,210,254,131,215,189,4,169,74,223,129,86,2,84,80,37,96,8,164,189,34,55,57,13,217,18,59,179,29,70,181,241,223,119,124,73,106,167,161,165,76,147,54,132,210,228,228,220,191,47,231,152,209,18,100,69,19,32,103,183,215,247,124,169,226,115,206,150,121,86,11,170,114,206,62,28,252,252,112,48,168,101,206,50,114,191,146,10,202,227,206,51,234,23,5,36,90,89,198,151,192,64,228,201,90,103,237,180,44,57,91,203,179,130,47,104,113,116,100,229,241,21,207,50,20,227,123,212,24,143,199,228,68,214,101,73,197,106,234,158,207,11,42,37,89,114,65,82,170,40,161,73,2,248,204,184,202,151,121,98,50,141,27,203,177,103,90,213,139,34,79,72,98,172,111,60,237,59,168,184,204,21,23,43,114,68,230,253,111,208,94,23,63,248,36,32,195,23,228,34,135,34,149,71,228,86,228,79,84,129,201,117,80,217,7,34,128,166,156,21,171,208,217,5,77,76,140,135,165,189,57,222,109,114,143,122,64,30,164,254,233,87,231,139,175,216,111,242,80,240,228,27,8,50,33,12,126,56,97,116,24,152,72,133,46,19,47,16,246,89,219,101,104,132,183,215,148,209,12,4,162,166,52,0,32,162,161,159,137,28,106,111,166,3,192,82,219,4,247,236,58,130,84,81,162,214,149,233,182,152,94,91,133,46,132,22,67,116,233,212,53,88,155,104,89,73,69,5,45,9,67,94,78,134,166,11,195,233,201,216,8,251,117,92,107,67,45,7,124,63,176,81,79,195,77,164,81,63,122,46,194,33,49,116,24,228,75,18,25,117,50,193,222,215,69,65,126,253,106,116,26,81,163,59,80,143,130,255,48,8,157,138,172,46,129,169,27,124,253,89,204,202,74,173,102,207,9,84,58,146,195,109,240,98,174,22,124,196,104,77,130,65,195,32,148,250,92,122,217,14,208,53,168,71,254,42,103,231,51,134,25,9,186,40,224,4,145,193,15,112,74,144,11,183,130,63,229,41,8,121,131,253,141,154,74,4,168,90,48,71,76,77,25,191,83,29,19,63,181,190,96,65,151,195,152,109,188,39,42,144,184,178,46,148,99,248,85,46,85,199,178,105,91,95,33,149,159,18,186,216,44,236,184,69,179,163,187,70,53,120,17,207,165,65,45,58,108,209,117,77,177,121,250,16,226,164,2,154,60,106,162,232,116,12,85,73,206,66,135,173,155,160,42,84,195,239,150,225,68,158,180,115,35,62,71,119,10,230,238,77,164,221,185,252,77,1,173,201,199,14,253,6,54,181,248,52,77,91,165,198,208,102,106,175,155,133,188,21,190,57,91,114,3,97,87,40,163,139,154,37,161,242,200,101,181,221,155,6,15,82,45,129,61,216,96,76,251,24,209,97,155,191,52,100,135,24,62,41,2,189,119,97,31,194,234,251,211,84,8,252,183,94,187,145,55,17,85,56,4,154,251,29,141,196,48,136,3,214,216,246,51,240,221,16,161,225,144,214,221,8,231,83,232,142,178,12,172,226,218,214,22,141,191,4,189,234,178,219,169,70,224,217,243,163,247,78,60,19,130,139,8,158,227,107,220,223,184,124,70,90,167,113,245,98,174,239,32,167,219,115,239,224,232,217,106,246,189,166,133,188,213,155,3,20,174,64,27,222,125,182,85,35,254,66,139,26,147,117,98,120,174,112,217,66,234,164,175,227,236,175,140,208,87,108,227,70,129,171,13,114,5,7,156,78,254,45,89,131,38,105,240,246,219,12,187,214,246,157,113,44,9,197,145,24,126,19,91,150,184,205,70,78,215,135,67,194,151,68,61,66,88,210,201,184,81,244,150,246,110,24,79,139,162,221,19,250,20,68,34,119,24,90,79,212,237,62,154,81,226,136,215,59,189,182,124,190,135,100,98,18,214,127,59,32,106,200,253,218,180,120,121,67,231,195,137,181,88,153,109,242,214,35,148,190,14,167,102,177,245,35,208,57,90,253,93,228,206,86,102,247,122,91,49,60,85,105,49,206,90,239,140,100,119,221,190,231,41,91,118,240,129,252,17,81,200,31,80,228,109,115,39,232,174,110,210,200,180,103,20,122,253,43,116,202,4,175,171,189,72,101,44,134,211,203,214,240,223,224,150,201,167,33,151,201,113,39,187,172,214,222,244,178,13,248,111,249,117,169,211,31,217,22,189,143,97,157,189,130,82,252,255,13,118,163,116,147,77,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("d740bb45-cf82-4737-a258-74ecf82e9dfd"));
		}

		#endregion

	}

	#endregion

}

