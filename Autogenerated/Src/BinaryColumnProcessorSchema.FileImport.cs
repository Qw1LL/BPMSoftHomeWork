namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BinaryColumnProcessorSchema

	/// <exclude/>
	public class BinaryColumnProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BinaryColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BinaryColumnProcessorSchema(BinaryColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("49ef8817-52a2-4345-af44-3978c22e2ce8");
			Name = "BinaryColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("1101e5cd-b945-4f88-8001-faccb4fdb24c");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,148,193,142,218,48,16,134,207,187,210,190,195,136,94,64,66,201,157,2,210,46,43,42,14,187,66,5,122,169,122,48,201,4,92,37,158,116,108,35,33,180,239,222,193,134,110,3,161,170,246,66,236,201,204,63,227,239,199,49,170,66,91,171,12,225,105,254,178,160,194,37,19,50,133,222,120,86,78,147,73,166,186,196,89,85,19,187,135,251,195,195,253,157,183,218,108,96,177,183,14,171,207,127,246,239,181,140,237,209,100,170,50,71,172,209,202,123,201,248,196,184,17,125,152,148,202,218,1,60,105,163,120,63,161,210,87,102,206,148,161,181,196,33,49,77,83,24,106,179,69,214,46,167,12,50,198,98,212,121,37,51,71,182,90,198,48,238,162,236,176,252,138,214,151,238,173,147,142,207,2,214,87,149,52,56,239,31,13,104,99,157,50,114,110,42,192,109,181,133,236,56,9,200,130,5,8,25,171,215,37,66,65,12,117,20,14,39,10,99,66,22,26,194,78,149,30,109,114,238,145,254,213,228,251,51,22,74,102,144,130,92,10,187,110,95,35,21,221,217,197,168,189,62,188,138,1,48,2,35,15,73,104,229,208,235,253,16,201,218,175,75,157,157,198,108,205,131,1,252,139,203,144,214,63,49,115,227,62,92,142,33,234,226,173,252,190,219,34,0,28,251,163,101,226,206,60,180,142,25,31,240,3,154,134,92,57,18,2,19,70,229,208,54,125,17,106,146,137,120,234,210,122,106,17,61,90,112,237,65,140,212,138,85,21,240,142,58,222,34,203,201,140,80,144,67,118,198,43,217,139,153,231,64,50,76,67,118,40,62,225,110,109,217,93,53,132,160,169,219,59,150,223,13,96,173,44,118,47,94,193,1,222,78,164,209,228,17,118,147,188,52,169,145,157,92,20,225,206,228,164,16,243,15,163,255,31,242,207,202,169,248,95,142,192,189,209,191,100,173,115,209,211,133,70,190,129,183,62,79,7,180,67,102,201,135,47,94,231,65,239,219,81,110,41,106,171,89,14,163,113,51,150,68,168,151,121,241,195,112,19,204,11,186,45,229,215,84,90,198,216,145,140,241,152,231,75,138,199,183,221,248,9,139,116,66,207,211,29,14,235,62,196,155,17,33,76,137,23,106,135,183,173,138,209,102,80,98,191,1,232,232,18,124,74,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("49ef8817-52a2-4345-af44-3978c22e2ce8"));
		}

		#endregion

	}

	#endregion

}

