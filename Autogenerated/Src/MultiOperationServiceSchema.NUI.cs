namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MultiOperationServiceSchema

	/// <exclude/>
	public class MultiOperationServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MultiOperationServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MultiOperationServiceSchema(MultiOperationServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f1b1a98c-bd0e-48ff-9fed-3342c4609e0c");
			Name = "MultiOperationService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,88,89,111,219,56,16,126,118,129,254,7,174,11,20,50,224,149,223,91,199,69,210,28,205,162,57,144,163,125,8,130,66,145,198,14,183,186,74,82,110,221,69,255,251,206,136,164,68,201,146,156,44,250,184,47,182,197,153,33,63,206,241,205,200,105,144,128,204,131,16,216,193,229,217,117,182,84,254,251,44,93,242,85,33,2,197,179,244,229,139,127,94,190,24,21,146,167,43,118,189,145,10,146,183,173,103,212,143,99,8,73,89,250,39,144,130,224,225,150,206,71,158,126,219,90,188,6,177,230,33,156,101,17,196,131,66,127,31,183,95,151,120,134,245,62,195,67,173,80,223,71,128,127,28,132,42,19,28,100,151,60,73,178,212,255,75,186,187,55,133,219,235,120,82,45,67,233,43,1,43,132,199,222,199,129,148,111,216,89,17,43,126,145,131,118,226,7,136,241,103,169,55,155,205,216,92,22,73,18,136,205,194,60,107,49,91,102,130,37,100,151,199,192,50,107,43,125,107,53,115,204,242,226,33,230,33,11,233,180,158,195,70,24,56,252,172,144,157,129,122,204,34,196,118,41,50,133,241,130,72,203,115,251,200,214,92,168,34,136,217,137,224,209,173,226,49,87,232,47,227,223,15,65,26,197,8,242,4,212,128,216,155,48,74,151,209,72,128,42,132,241,134,118,253,6,115,67,205,7,108,23,222,132,220,60,250,213,7,235,180,121,207,107,133,223,176,218,16,164,82,130,57,246,245,40,85,92,109,172,200,147,74,80,208,242,64,96,150,43,16,210,226,227,75,230,213,171,254,169,60,47,226,248,66,28,37,185,218,120,19,171,53,82,143,34,251,206,82,248,206,246,197,170,72,32,85,164,119,244,35,132,156,32,120,227,122,143,177,70,79,240,241,115,29,8,38,13,138,203,74,135,237,49,202,50,255,16,36,86,73,16,243,159,48,63,228,101,233,96,92,231,26,237,148,101,15,127,227,205,23,11,7,161,217,156,182,77,154,119,69,96,180,47,98,188,187,183,176,9,48,86,49,238,87,144,235,45,118,111,188,13,105,60,237,192,57,209,55,209,103,246,185,189,194,81,173,236,109,199,187,21,152,133,215,129,222,220,205,164,204,214,182,195,73,209,4,135,169,189,230,145,78,211,110,137,215,119,29,235,133,210,31,148,52,80,2,60,71,151,216,37,116,176,128,48,19,145,60,141,108,138,124,228,18,179,186,224,209,194,202,232,1,93,81,105,34,67,17,61,122,180,238,163,143,37,76,252,155,140,236,188,118,84,183,208,254,167,224,58,33,157,76,119,216,212,151,68,171,250,97,167,93,117,59,52,115,238,221,72,156,158,208,96,12,245,143,190,116,217,50,49,89,211,233,157,102,242,216,189,135,115,166,138,38,30,121,101,47,114,44,178,228,152,199,148,254,94,111,6,176,165,214,208,45,210,230,192,16,95,22,118,29,175,187,139,59,27,87,169,12,201,49,151,130,19,243,99,167,45,146,244,83,16,23,32,93,188,46,208,38,66,215,17,175,32,141,116,47,232,107,12,101,83,209,194,118,159,42,23,110,37,84,169,197,178,101,221,173,98,172,87,211,193,194,44,77,209,221,218,121,116,239,7,172,173,28,66,190,228,24,2,135,115,171,83,220,190,166,87,74,45,150,162,230,158,155,161,11,250,164,115,237,222,254,124,86,170,118,91,214,57,186,56,141,200,4,17,8,50,55,130,97,107,135,217,23,21,73,56,240,7,141,27,65,24,47,76,156,200,55,245,100,213,216,193,244,115,155,161,235,12,57,164,197,157,222,147,120,169,202,212,26,106,119,242,18,173,96,47,115,27,98,83,254,71,83,97,84,29,161,51,185,179,112,118,36,162,105,142,207,233,40,3,205,125,171,59,238,38,156,254,182,176,117,182,75,135,83,135,247,245,81,118,79,255,48,171,246,242,122,171,205,172,181,10,112,112,100,52,220,96,103,198,170,20,205,122,163,250,156,89,177,81,76,119,70,25,67,128,151,10,213,61,173,237,203,252,28,20,142,174,57,154,60,16,199,108,174,224,91,193,5,16,179,75,207,125,160,161,26,189,182,195,132,180,124,179,16,77,238,135,167,83,139,255,13,59,8,36,84,183,108,15,171,199,28,98,61,171,210,220,175,221,128,78,47,31,58,231,93,246,37,233,88,125,59,204,124,24,125,84,34,38,105,146,159,193,223,121,78,231,162,46,145,21,168,186,88,74,18,239,4,197,222,189,99,94,183,164,108,245,157,71,224,80,234,150,144,172,143,234,219,105,77,109,194,177,121,114,23,104,186,188,221,60,75,106,194,22,196,35,84,170,71,198,103,178,211,46,42,170,183,121,198,108,94,106,56,195,249,81,221,58,26,206,163,3,234,241,172,181,63,123,253,186,141,174,69,132,187,15,174,184,177,113,238,111,107,195,12,95,62,255,76,74,245,230,75,35,181,225,186,57,254,223,96,219,45,90,87,165,92,204,103,246,23,137,238,170,218,113,137,114,116,135,94,62,77,215,217,87,240,116,104,48,77,199,151,23,215,55,56,242,222,10,126,3,73,30,19,27,225,106,171,67,161,194,65,22,97,163,218,96,76,246,40,90,103,32,101,176,130,106,213,255,44,130,60,135,72,143,217,196,157,32,213,113,38,146,64,53,12,244,82,249,215,196,148,93,225,255,52,200,241,48,172,87,18,176,101,176,198,95,57,134,108,237,54,191,109,190,48,229,251,164,218,166,87,29,97,1,104,182,27,194,104,103,98,37,54,182,250,58,168,167,179,81,79,59,7,144,214,140,160,201,210,111,123,162,103,67,119,164,234,159,110,194,64,133,143,204,171,232,128,193,15,103,134,210,247,242,107,233,30,202,93,115,211,57,172,230,192,0,223,53,84,252,250,23,199,241,88,1,207,19,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f1b1a98c-bd0e-48ff-9fed-3342c4609e0c"));
		}

		#endregion

	}

	#endregion

}

