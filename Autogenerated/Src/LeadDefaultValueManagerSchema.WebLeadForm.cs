namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: LeadDefaultValueManagerSchema

	/// <exclude/>
	public class LeadDefaultValueManagerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LeadDefaultValueManagerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LeadDefaultValueManagerSchema(LeadDefaultValueManagerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("31a5b04c-75df-4d8d-a75d-7cce68df40cf");
			Name = "LeadDefaultValueManager";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("30ff16fc-9eaa-40ad-9611-33924da6f041");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,84,219,78,27,49,16,125,14,18,255,48,221,190,4,41,23,16,180,92,2,145,66,66,16,42,41,136,168,229,217,89,207,46,110,119,237,200,246,38,138,16,255,222,177,189,217,132,92,164,190,100,215,179,51,103,142,231,156,137,100,57,154,41,139,17,110,159,71,99,149,216,86,95,201,68,164,133,102,86,40,217,186,71,137,244,138,252,21,39,67,165,243,49,234,153,136,241,240,224,253,240,160,86,24,33,83,24,47,140,197,188,179,113,38,156,44,195,216,129,152,128,34,226,85,206,170,153,70,138,82,252,171,198,148,114,161,159,49,99,174,224,17,25,31,96,194,138,204,254,102,89,129,35,38,89,138,218,167,182,219,109,184,54,69,158,51,189,232,150,231,23,180,133,150,6,120,168,129,153,43,50,144,40,13,169,152,161,132,140,73,238,58,211,3,80,90,97,23,173,37,84,123,13,107,90,76,50,17,67,236,88,236,35,1,87,240,52,249,67,119,219,73,176,230,38,179,197,209,7,28,30,184,123,210,128,52,228,104,223,20,135,102,69,109,74,0,142,212,54,171,218,84,139,25,169,64,197,140,43,153,45,224,190,16,220,227,189,148,112,35,143,214,87,28,225,6,36,206,125,70,61,186,237,29,95,158,247,79,123,205,211,147,254,176,121,118,209,59,111,246,78,46,191,55,47,206,134,189,193,183,227,187,225,221,197,32,58,234,236,236,97,172,118,180,54,59,100,69,46,169,71,244,57,254,192,163,32,36,225,40,75,195,65,14,106,134,90,11,98,84,34,141,85,161,99,44,167,102,198,241,27,230,236,39,25,16,252,200,106,41,90,120,167,246,78,73,136,30,195,84,214,52,48,81,7,62,92,38,253,184,199,210,50,129,0,153,230,217,139,23,62,238,20,224,127,93,178,71,5,31,153,50,205,114,144,68,251,38,42,12,106,218,23,25,124,30,117,31,164,177,76,210,50,169,4,220,55,136,171,143,173,235,182,175,220,13,52,15,219,69,67,236,62,112,103,207,68,80,53,161,44,9,109,85,135,49,153,238,64,120,120,162,8,115,97,223,168,163,215,199,193,2,51,240,23,23,222,242,101,216,95,216,197,253,11,161,46,97,188,112,193,251,149,106,43,232,235,32,96,3,148,247,125,23,238,49,184,222,212,189,17,43,250,13,248,245,105,36,126,10,171,227,81,169,244,140,105,210,217,56,9,110,96,194,12,182,86,128,107,88,27,197,157,170,54,219,88,76,83,122,126,63,227,250,178,117,237,29,162,215,106,218,141,21,245,96,173,218,71,232,34,18,168,127,9,20,221,63,162,101,66,154,31,184,168,239,90,134,163,10,123,139,87,171,199,249,206,154,198,158,229,45,47,25,184,140,80,167,24,242,3,220,43,41,252,68,242,204,181,176,88,223,234,214,40,135,90,130,148,155,20,98,62,180,92,28,148,60,236,14,157,66,108,61,68,145,127,173,16,116,128,23,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("31a5b04c-75df-4d8d-a75d-7cce68df40cf"));
		}

		#endregion

	}

	#endregion

}

