namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastSnapshotExecutorSchema

	/// <exclude/>
	public class ForecastSnapshotExecutorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastSnapshotExecutorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastSnapshotExecutorSchema(ForecastSnapshotExecutorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("116770b7-d605-0dde-2869-eb7e844280ad");
			Name = "ForecastSnapshotExecutor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,133,84,193,138,219,48,16,61,59,144,127,24,188,61,216,16,28,232,49,113,178,180,105,179,184,52,176,144,182,151,82,22,197,158,56,94,108,41,72,114,218,16,246,223,59,178,108,39,54,49,123,49,210,232,189,209,211,204,27,3,103,5,170,35,139,17,62,63,111,182,98,175,131,149,224,251,44,45,37,211,153,224,193,90,72,140,153,210,191,62,142,71,151,241,200,41,85,198,83,72,115,177,99,249,108,182,18,69,65,160,239,34,77,41,60,111,207,183,103,165,177,232,239,41,117,158,99,108,242,170,224,9,57,202,44,190,98,174,247,75,188,31,13,214,44,214,66,102,168,232,156,16,15,18,83,202,5,171,156,41,53,131,70,234,150,179,163,58,8,253,245,31,198,37,225,43,236,116,58,133,80,149,69,193,228,121,89,239,45,0,21,236,107,38,168,154,170,205,213,175,98,23,52,204,105,143,26,42,68,150,43,1,177,196,253,194,237,168,140,190,137,93,115,183,11,83,67,57,150,187,60,139,33,54,66,7,117,194,12,110,169,68,51,5,111,95,185,206,48,79,232,153,207,50,59,49,141,213,171,156,163,221,128,210,212,174,24,36,178,68,240,252,12,17,181,4,94,114,250,44,128,150,27,198,89,138,146,138,174,77,175,80,134,67,34,150,158,63,191,77,28,245,129,117,42,120,217,223,63,176,173,113,30,144,39,86,120,35,84,104,106,61,38,240,83,161,36,143,113,107,132,254,246,2,41,234,57,40,243,121,235,83,7,197,12,197,171,2,58,148,177,94,57,18,117,41,249,160,120,120,124,180,56,199,27,132,44,172,223,172,23,207,166,164,225,144,174,165,199,241,47,208,235,148,150,165,129,127,146,105,89,32,215,158,91,118,158,237,78,122,117,240,125,219,6,135,106,80,125,110,157,176,65,125,16,149,21,42,91,217,195,190,193,187,14,39,47,131,56,98,61,212,45,254,214,214,54,114,100,146,21,96,254,10,139,190,198,229,143,3,130,137,65,220,6,131,112,90,49,238,39,168,214,168,81,42,75,190,238,59,188,122,58,78,34,75,26,197,94,207,22,93,41,19,136,190,100,213,138,180,135,84,92,26,215,9,136,221,43,29,47,111,110,241,235,182,159,152,108,103,60,74,168,131,222,83,153,37,254,21,248,219,109,58,24,37,238,31,91,249,158,130,69,79,131,5,153,17,11,34,190,23,222,135,54,69,251,23,49,83,41,201,183,65,235,207,40,153,93,174,66,222,220,186,201,3,246,9,182,236,132,77,204,187,242,38,96,108,181,206,114,146,110,255,214,158,239,143,71,243,119,245,208,76,190,175,166,49,91,119,128,109,180,27,164,216,127,82,233,231,96,64,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("116770b7-d605-0dde-2869-eb7e844280ad"));
		}

		#endregion

	}

	#endregion

}

