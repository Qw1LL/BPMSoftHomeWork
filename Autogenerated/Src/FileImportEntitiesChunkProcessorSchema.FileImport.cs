namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: FileImportEntitiesChunkProcessorSchema

	/// <exclude/>
	public class FileImportEntitiesChunkProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FileImportEntitiesChunkProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FileImportEntitiesChunkProcessorSchema(FileImportEntitiesChunkProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e42dd50b-1bf2-4db5-b001-7d343756e2b1");
			Name = "FileImportEntitiesChunkProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,89,75,111,219,56,16,62,187,64,255,3,55,123,145,1,195,185,55,177,131,38,117,90,99,155,77,80,167,123,41,138,130,145,104,91,27,153,116,41,202,137,209,230,191,239,240,37,145,20,37,59,123,137,34,114,102,56,243,205,147,50,197,27,82,110,113,74,208,229,221,205,130,45,197,248,138,209,101,190,170,56,22,57,163,227,235,188,32,243,205,150,113,241,246,205,175,183,111,6,85,153,211,21,90,236,75,65,54,103,193,59,176,22,5,73,37,95,57,254,72,40,225,121,218,162,249,156,211,159,205,98,115,40,39,241,85,95,159,14,154,25,21,185,200,73,217,177,125,141,83,193,184,183,175,181,89,16,33,224,173,68,147,158,51,199,64,107,9,65,0,136,248,147,147,21,108,32,116,85,224,178,124,135,26,144,172,34,87,235,138,62,222,113,150,146,178,100,92,49,157,158,158,158,231,116,13,160,136,140,165,40,229,100,57,57,153,31,98,61,57,157,106,94,116,94,86,155,13,230,123,251,62,123,38,105,37,8,202,21,55,34,134,29,61,236,209,22,180,34,25,60,56,120,87,16,94,142,173,140,83,71,200,183,15,100,137,171,66,92,230,52,3,219,18,177,223,18,182,76,14,170,52,28,161,191,65,46,96,70,225,1,28,7,25,134,223,225,184,109,245,80,228,96,183,132,236,32,98,232,29,58,168,7,200,132,136,132,191,181,63,174,115,82,100,224,143,59,158,239,176,32,122,115,171,95,16,39,56,99,180,216,163,175,37,225,224,96,170,35,53,120,61,139,178,204,33,178,171,13,45,223,175,86,112,20,134,96,122,159,225,45,32,139,204,70,173,148,199,63,191,90,231,69,230,219,240,17,34,9,248,126,164,93,91,7,37,44,186,37,44,34,18,0,12,233,113,69,178,191,6,95,75,222,109,123,209,227,122,96,172,184,64,63,74,188,35,115,122,137,211,199,21,103,21,205,110,88,38,211,84,97,78,104,166,97,247,125,0,80,150,130,87,50,225,164,39,148,211,53,69,24,196,106,225,10,48,150,65,12,76,152,66,21,98,75,160,33,196,164,199,113,217,209,14,109,189,162,226,95,5,233,228,164,242,188,124,50,61,63,85,187,113,226,52,112,170,79,110,2,249,144,110,73,16,103,190,6,163,158,152,10,143,31,34,89,121,7,131,64,224,36,16,169,28,56,8,3,18,200,66,121,138,240,165,223,141,64,188,37,92,90,213,145,78,209,184,138,172,73,30,173,254,138,8,99,200,32,95,38,177,16,68,121,137,104,85,20,214,224,193,96,135,57,90,214,64,235,58,190,7,147,84,225,53,175,208,106,196,185,83,45,204,242,52,25,106,68,6,131,232,89,147,182,96,41,41,98,66,224,201,81,43,233,237,65,128,169,124,112,34,42,78,187,147,76,211,25,7,28,81,43,186,119,38,211,158,66,130,46,46,180,62,73,15,77,12,202,206,243,166,9,60,157,4,127,207,87,213,6,26,79,153,12,135,18,131,35,43,87,247,78,135,61,139,35,236,89,188,202,158,197,171,237,145,21,17,45,34,245,16,69,162,27,37,209,210,57,254,132,203,127,112,81,145,38,192,109,172,68,201,21,173,31,91,81,66,176,218,159,103,164,221,138,185,21,186,39,95,42,106,226,150,148,174,156,91,218,100,208,201,8,45,113,81,18,27,215,199,42,249,114,68,97,153,237,36,192,126,103,48,21,149,200,45,77,240,9,211,172,32,252,220,241,218,94,130,159,169,93,240,83,57,69,173,189,179,215,74,155,113,206,120,143,68,181,127,160,223,221,16,177,102,157,67,71,36,184,190,125,71,157,81,39,19,128,146,39,32,209,241,1,132,190,3,45,109,50,28,41,2,32,142,157,145,180,91,88,164,106,41,111,133,105,59,163,32,129,227,135,130,24,184,52,219,84,42,253,23,217,27,33,137,222,187,171,39,76,103,216,84,86,56,179,167,207,24,230,85,68,123,212,99,54,200,238,55,60,104,244,163,96,190,11,143,223,177,60,67,115,154,27,175,95,51,46,29,223,103,222,200,11,19,51,126,235,23,155,214,238,218,88,10,247,154,74,43,39,29,232,116,30,45,225,14,130,211,181,209,66,35,103,186,56,76,74,46,182,6,213,186,158,184,28,42,49,13,155,254,127,226,105,11,119,59,154,57,164,137,38,181,73,15,61,218,227,157,4,173,57,101,32,133,134,245,9,42,144,150,238,10,118,79,29,25,141,236,83,215,195,238,190,168,28,20,149,218,233,6,235,33,15,56,127,177,133,141,181,43,6,253,7,82,130,165,234,46,136,50,231,127,112,133,150,48,118,40,26,95,24,205,212,197,108,31,98,15,33,238,71,92,24,20,206,65,214,35,16,236,242,234,234,104,109,238,97,14,173,137,136,122,215,176,178,135,127,65,48,218,201,101,115,162,108,149,65,69,80,17,161,88,173,86,142,228,152,195,100,144,248,50,143,139,18,96,211,176,140,23,242,98,78,87,11,33,125,253,7,244,49,253,126,171,244,85,171,227,191,201,83,35,207,24,162,185,109,84,27,89,170,172,134,225,92,35,81,79,131,129,206,227,217,207,10,154,157,81,200,4,195,239,223,30,168,243,18,42,88,163,68,104,149,53,171,109,93,186,38,27,108,179,84,42,120,185,151,186,184,184,154,93,165,226,248,3,22,88,169,112,15,151,113,57,14,223,147,103,225,45,186,179,177,231,76,207,166,123,182,80,193,146,12,199,247,80,123,234,81,216,104,104,213,235,5,108,228,137,60,148,162,178,204,249,51,86,127,143,208,86,200,249,254,177,110,14,96,133,223,44,90,149,49,50,157,143,63,51,156,249,5,214,45,214,141,116,35,66,30,169,230,71,171,167,76,132,174,137,87,186,172,173,69,231,64,41,17,245,78,247,14,210,220,49,240,110,105,107,152,73,76,249,240,46,17,182,136,117,52,166,42,135,230,201,217,211,28,112,121,118,33,198,48,222,200,239,53,208,52,187,39,42,27,88,30,150,192,229,107,160,105,190,48,38,116,112,127,157,103,146,166,105,73,222,150,33,215,135,46,160,200,64,192,135,12,193,166,97,81,151,233,144,212,44,214,74,104,75,129,198,26,173,99,84,123,169,101,233,5,244,226,29,123,36,137,88,231,128,150,4,229,53,46,81,211,96,50,123,78,201,86,149,127,72,144,158,22,244,177,2,33,185,111,154,235,18,82,195,30,247,139,63,155,214,61,165,62,29,170,158,7,110,237,46,79,141,46,248,3,197,250,96,83,138,4,208,213,202,119,227,167,174,74,175,174,7,10,181,242,168,56,105,178,185,254,244,233,145,187,223,132,3,144,92,136,244,246,19,228,41,73,188,65,197,246,21,16,1,125,145,151,226,150,155,15,166,112,59,148,173,202,107,116,80,243,253,169,207,121,105,156,22,114,13,186,162,236,176,172,81,16,111,53,104,117,159,171,181,255,66,54,12,122,185,55,169,158,245,246,103,1,31,89,172,138,237,225,216,45,57,81,161,158,246,138,37,118,113,174,201,99,213,207,19,225,85,36,119,94,246,207,135,210,99,74,159,181,6,165,88,192,48,119,91,137,219,229,13,160,192,27,252,26,31,136,53,84,143,128,195,201,242,195,206,34,7,125,241,2,223,154,40,46,224,75,242,175,87,56,231,229,232,75,117,115,9,245,191,183,254,239,31,28,236,37,90,165,242,157,222,83,116,237,36,214,154,55,11,245,37,200,102,68,179,37,187,233,188,52,163,181,252,220,11,63,23,101,193,228,11,185,101,48,210,95,29,156,177,67,133,98,80,83,90,167,107,250,72,245,137,83,70,128,53,107,238,210,203,127,39,153,154,170,39,27,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateFoudDublicateDataExceptionLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateFoudDublicateDataExceptionLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("35eccd95-c1cf-4c78-baa7-1c700f052db5"),
				Name = "FoudDublicateDataException",
				CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8"),
				CreatedInSchemaUId = new Guid("e42dd50b-1bf2-4db5-b001-7d343756e2b1"),
				ModifiedInSchemaUId = new Guid("e42dd50b-1bf2-4db5-b001-7d343756e2b1")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e42dd50b-1bf2-4db5-b001-7d343756e2b1"));
		}

		#endregion

	}

	#endregion

}

