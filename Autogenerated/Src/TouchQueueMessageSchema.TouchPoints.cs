namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TouchQueueMessageSchema

	/// <exclude/>
	public class TouchQueueMessageSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TouchQueueMessageSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TouchQueueMessageSchema(TouchQueueMessageSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("626feb04-1274-4ed7-b12c-904cc628bc79");
			Name = "TouchQueueMessage";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,229,87,75,111,227,54,16,62,123,129,253,15,132,219,131,140,4,114,147,162,151,60,12,36,78,178,201,98,243,104,236,2,5,22,123,160,165,177,205,70,34,181,36,149,196,13,242,223,59,67,138,178,20,59,94,163,167,2,189,36,38,57,156,249,190,121,113,36,121,14,166,224,9,176,211,187,235,145,154,218,120,168,228,84,204,74,205,173,80,242,227,135,151,143,31,58,165,17,114,198,70,11,99,33,63,124,179,142,71,144,148,90,216,69,60,212,139,194,170,153,230,197,124,177,34,53,134,103,187,220,188,129,39,171,164,33,115,159,141,146,203,131,37,136,60,127,127,63,92,194,227,159,52,204,16,39,59,151,101,126,192,198,170,76,230,191,151,80,194,53,24,195,103,48,94,20,224,228,250,253,62,59,50,101,158,115,189,24,84,235,51,152,10,9,134,61,205,185,101,60,33,190,12,158,241,71,182,96,137,146,150,11,105,152,37,149,236,59,233,100,185,87,26,7,125,253,134,194,162,156,100,34,97,128,56,222,131,209,33,95,118,208,42,47,51,203,142,217,47,187,180,190,202,11,165,105,185,231,150,163,133,76,112,177,239,22,195,12,184,198,213,175,184,120,245,124,65,166,158,114,139,254,48,227,198,172,225,255,46,247,83,110,128,157,141,111,217,84,233,192,139,169,41,202,1,176,68,195,244,184,187,84,214,237,15,54,113,78,200,248,170,109,118,224,172,140,185,121,104,67,34,63,16,187,0,254,78,171,2,180,21,128,12,238,156,74,127,254,22,183,219,8,202,45,186,148,165,205,8,174,132,110,37,104,171,12,2,133,181,17,99,238,207,11,155,129,61,100,134,254,188,98,44,214,138,198,85,84,15,55,32,191,200,248,12,211,137,9,153,138,132,91,168,240,165,144,150,5,98,112,245,198,36,36,168,149,202,105,35,222,137,82,25,187,135,239,165,208,96,206,90,26,222,226,157,242,204,64,133,235,77,246,212,17,184,6,59,87,41,185,95,139,71,132,230,79,11,191,96,198,106,170,193,79,96,71,238,215,133,86,249,37,55,243,104,178,176,240,245,27,155,227,239,30,115,201,221,121,196,124,157,148,34,75,129,242,86,194,19,243,119,78,253,94,212,163,154,238,116,40,235,34,33,45,19,84,7,135,248,239,200,169,137,191,128,156,217,57,110,236,236,4,149,157,74,95,124,82,20,136,63,34,185,175,226,91,60,86,94,117,212,253,115,191,219,171,20,99,149,224,95,13,182,212,50,0,89,74,122,161,215,109,157,241,163,92,28,106,64,255,152,186,126,48,233,44,151,216,75,167,232,33,246,121,116,123,195,158,132,157,51,83,64,34,166,2,82,134,192,52,230,57,230,104,41,237,59,33,198,157,163,130,107,158,51,137,205,249,184,91,105,191,74,187,131,144,252,34,5,105,73,163,142,143,250,78,182,198,212,186,250,23,246,201,238,192,147,71,219,5,38,11,94,244,121,130,197,30,74,99,163,142,10,242,144,16,119,7,55,101,62,193,208,226,229,64,5,51,186,208,138,178,182,225,7,150,80,127,65,169,68,99,180,24,70,27,180,86,107,208,250,72,153,193,85,112,221,123,61,168,162,142,173,200,247,27,84,21,238,214,202,224,57,129,194,145,243,183,79,244,172,204,145,240,77,153,101,183,250,60,47,236,226,60,136,116,209,100,141,18,232,200,5,12,213,214,90,154,5,135,232,236,186,62,81,229,64,244,169,20,105,224,127,149,238,134,154,161,0,236,162,63,44,107,186,49,100,54,157,198,195,57,36,15,107,144,70,228,126,53,141,72,40,100,55,85,23,198,208,63,31,244,8,98,223,49,160,5,207,196,223,112,180,2,110,224,46,239,186,50,36,233,81,16,213,35,176,22,241,153,80,98,212,195,110,208,222,37,151,105,70,192,177,207,189,217,138,79,178,204,151,88,5,198,3,137,175,82,20,174,153,183,142,174,249,243,61,210,94,56,210,40,213,244,193,97,179,80,189,124,179,56,255,101,189,253,119,75,234,127,144,232,61,118,60,8,98,13,9,159,131,123,148,53,53,1,33,231,152,139,54,85,9,235,55,173,171,71,236,19,24,10,87,50,248,224,52,158,216,200,169,167,71,163,71,203,77,47,237,189,247,87,35,166,196,221,106,158,60,16,86,227,70,210,21,239,159,63,162,244,184,18,170,70,158,245,185,212,136,102,203,194,184,109,33,110,154,32,191,197,46,50,20,217,201,130,102,23,154,24,222,132,183,242,195,163,208,182,228,25,115,222,70,63,4,205,222,9,75,93,219,120,33,111,78,76,148,196,219,16,27,215,194,27,241,45,71,131,208,46,42,132,126,35,234,197,23,152,146,180,191,13,82,252,70,192,55,25,159,73,33,167,138,241,137,42,109,141,222,149,19,88,208,102,27,248,33,105,83,48,137,22,46,201,183,37,114,182,188,130,92,94,154,109,234,231,46,145,58,96,47,45,190,175,187,52,54,41,250,6,242,71,97,229,142,186,190,193,238,224,229,101,47,244,114,173,246,232,132,67,152,43,19,117,208,95,187,63,236,141,193,135,52,29,81,46,214,207,66,93,173,219,248,141,198,58,87,43,243,229,224,188,214,111,75,127,185,73,176,215,24,255,168,222,221,156,220,26,186,58,141,97,209,111,248,47,187,104,116,121,242,219,222,62,51,115,126,205,37,218,163,231,196,205,141,110,191,218,139,122,193,66,199,17,60,110,200,211,71,97,81,90,124,168,16,200,185,76,84,74,175,213,31,82,224,47,136,17,225,41,90,54,173,119,180,53,37,174,206,181,110,160,221,48,42,174,251,20,195,189,127,0,160,101,148,231,76,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("626feb04-1274-4ed7-b12c-904cc628bc79"));
		}

		#endregion

	}

	#endregion

}

