namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MLModelValidatorSchema

	/// <exclude/>
	public class MLModelValidatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLModelValidatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLModelValidatorSchema(MLModelValidatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9dcb6a93-876d-4465-bc42-68f5f836bfe1");
			Name = "MLModelValidator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("cad98641-0ee5-4173-9c03-6ef86b0857c5");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,88,221,83,219,70,16,127,118,102,242,63,108,85,102,144,167,174,156,190,130,237,12,16,160,110,129,38,49,105,31,50,125,56,164,181,125,19,233,206,220,157,0,151,240,191,119,239,67,254,146,13,38,195,228,165,157,201,16,249,110,119,111,247,183,191,221,91,73,176,2,245,132,165,8,135,239,207,7,114,104,146,35,41,134,124,84,42,102,184,20,201,249,217,235,87,247,175,95,53,74,205,197,8,6,83,109,176,216,95,249,77,42,121,142,169,149,215,201,41,10,84,60,173,201,156,113,113,93,91,252,88,10,195,11,76,6,164,194,114,254,143,59,115,46,53,119,169,40,214,175,43,76,222,29,110,216,56,97,169,145,138,163,166,125,146,248,81,225,136,172,195,81,206,180,222,131,243,179,115,153,97,254,39,29,155,185,99,63,162,46,115,227,68,219,237,54,116,116,89,20,76,77,123,225,247,71,156,40,212,40,140,38,85,40,172,46,220,204,148,65,57,109,157,84,218,237,5,245,207,239,152,97,4,171,81,228,209,223,180,48,41,175,114,158,66,106,61,217,236,72,131,112,167,191,51,199,223,43,57,65,101,40,160,61,120,239,44,248,253,85,111,221,194,41,146,163,82,129,182,255,51,235,105,137,192,69,198,83,58,131,144,186,29,163,25,163,2,38,166,243,120,82,89,76,164,112,49,142,153,6,84,74,42,23,82,61,38,191,226,204,206,126,2,116,210,158,81,37,118,218,105,15,248,112,110,120,110,109,31,164,61,247,150,107,108,89,241,33,203,181,147,95,56,102,110,53,0,117,37,101,14,191,50,125,236,76,192,61,140,208,236,219,208,246,225,33,96,132,34,243,48,185,223,126,117,101,177,194,177,47,12,170,33,81,126,15,250,203,224,75,181,49,253,65,2,245,90,180,20,178,140,11,164,108,14,9,115,202,51,23,4,242,90,50,132,144,120,229,196,58,31,86,51,127,78,185,146,217,54,105,63,26,99,250,69,3,65,12,131,15,103,112,93,162,154,62,150,192,9,83,172,0,65,77,160,27,105,180,69,28,245,46,73,217,63,39,157,182,19,112,242,55,146,103,222,254,224,58,255,96,13,199,3,39,21,132,155,251,79,251,229,252,33,224,242,178,160,86,241,50,126,213,228,101,105,38,165,57,114,135,92,208,138,215,244,171,225,108,39,89,183,130,119,41,78,92,57,167,10,135,221,168,74,250,113,181,30,245,188,89,77,118,168,117,1,215,144,219,172,155,49,179,45,224,186,228,10,51,178,59,51,180,130,92,208,94,6,174,5,218,40,91,147,171,142,67,23,68,153,231,219,0,75,14,24,96,121,30,168,201,197,60,86,42,127,133,16,154,23,237,56,114,248,118,245,162,252,168,201,23,104,24,161,199,188,70,245,235,155,80,63,48,132,51,211,6,168,222,150,130,179,25,16,210,108,25,222,166,180,244,173,197,13,185,113,181,57,72,199,88,176,243,16,194,44,150,42,51,207,233,62,107,175,159,239,209,120,62,191,195,33,35,84,14,237,45,32,70,177,153,78,80,14,227,90,251,105,54,159,184,162,232,160,189,151,237,90,243,24,109,242,244,4,83,62,228,152,173,141,56,231,95,16,92,22,92,118,91,179,100,180,128,101,25,183,217,101,249,156,250,34,131,33,207,169,215,58,157,231,81,221,53,185,69,190,7,66,61,202,250,180,212,70,22,21,85,188,182,95,123,164,4,150,12,56,215,63,241,76,7,101,79,244,146,22,30,87,212,97,136,194,236,196,69,108,167,142,202,251,106,103,9,140,154,53,133,166,84,66,247,58,237,234,105,99,145,94,72,211,47,38,57,22,148,20,204,22,74,117,181,202,2,145,54,76,57,179,212,199,161,7,46,32,63,235,139,203,144,182,160,127,198,181,233,156,18,34,61,152,163,213,178,167,53,26,51,59,117,48,154,96,39,217,70,195,140,149,188,5,129,183,176,33,138,216,22,118,35,212,241,119,191,104,183,109,138,161,81,133,59,149,137,93,3,87,8,120,135,105,105,214,220,66,33,17,79,94,227,1,164,27,166,200,22,13,156,52,159,11,195,242,32,212,133,32,222,12,158,31,229,84,152,1,176,70,93,33,185,148,147,248,77,216,54,228,168,183,190,78,242,216,123,94,217,122,160,152,76,58,134,120,22,50,249,83,121,87,165,153,94,94,52,27,217,155,114,39,162,120,252,144,185,7,247,120,151,156,251,173,135,251,99,113,195,149,20,246,172,228,2,111,233,69,4,31,34,248,201,219,105,236,68,182,115,58,16,247,214,138,222,135,64,105,162,166,19,46,241,206,196,205,135,200,251,184,64,165,90,130,226,224,91,21,206,150,140,250,111,142,72,91,115,94,210,88,36,135,149,143,36,192,52,250,9,199,142,1,165,224,132,223,211,212,255,182,57,44,112,143,94,108,226,138,252,33,77,71,54,212,248,14,186,61,184,75,14,172,83,240,67,183,110,39,80,238,235,215,218,86,210,215,23,116,196,31,234,184,152,152,105,220,108,66,167,11,191,204,216,254,24,205,188,196,78,68,25,84,184,235,199,33,20,178,28,141,103,183,160,101,184,191,72,111,185,25,7,138,173,229,245,19,197,18,13,198,178,204,51,219,103,216,226,72,22,210,225,81,135,221,126,182,235,110,222,221,37,70,237,70,139,165,208,232,31,139,178,64,197,174,114,236,120,224,123,228,187,248,228,82,120,16,18,219,133,101,164,189,31,201,169,146,229,228,112,26,135,115,9,118,255,228,177,167,158,99,193,236,15,3,152,240,246,109,181,63,144,165,74,209,27,115,178,205,96,241,47,139,94,60,178,118,173,57,247,16,210,218,132,30,165,34,200,121,198,172,10,254,142,211,16,155,37,199,106,20,201,129,112,41,221,34,153,59,145,107,201,238,133,153,204,252,236,9,93,241,156,26,155,71,42,249,77,114,17,71,173,168,85,131,140,122,211,51,59,206,255,239,14,207,127,119,168,117,148,111,126,133,88,104,42,179,249,208,25,35,242,47,247,157,134,31,202,22,107,200,13,66,85,241,176,43,27,134,211,181,45,197,22,207,138,197,138,189,254,13,138,216,235,30,18,43,93,241,219,83,113,181,191,5,189,23,40,183,234,156,75,105,125,175,238,122,27,253,170,251,245,150,184,17,6,59,171,132,219,246,18,105,158,163,146,130,110,152,19,124,32,159,104,30,164,47,112,194,127,165,180,61,239,76,166,238,139,35,181,159,129,3,48,166,197,75,122,39,138,155,14,144,22,68,30,180,19,53,159,61,15,130,143,118,154,164,207,79,97,196,136,66,80,141,117,72,68,238,202,114,64,83,35,38,91,179,164,184,91,203,71,189,194,61,187,75,230,169,220,223,84,147,198,66,136,182,41,250,46,112,34,85,193,76,53,104,84,161,87,247,88,213,36,128,254,173,130,219,172,38,178,109,231,151,237,191,179,145,228,191,112,210,124,193,85,22,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateInputsFromMetadataAbsentInDatasetMessageLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateInputsFromMetadataAbsentInDatasetMessageLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("c015c29f-6ecd-4d16-a186-bd3b4ed56d12"),
				Name = "InputsFromMetadataAbsentInDatasetMessage",
				CreatedInPackageId = new Guid("73704ec6-562c-4400-8a4a-17477a18625f"),
				CreatedInSchemaUId = new Guid("9dcb6a93-876d-4465-bc42-68f5f836bfe1"),
				ModifiedInSchemaUId = new Guid("9dcb6a93-876d-4465-bc42-68f5f836bfe1")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9dcb6a93-876d-4465-bc42-68f5f836bfe1"));
		}

		#endregion

	}

	#endregion

}

