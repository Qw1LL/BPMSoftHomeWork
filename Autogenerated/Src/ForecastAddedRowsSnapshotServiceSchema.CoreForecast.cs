namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastAddedRowsSnapshotServiceSchema

	/// <exclude/>
	public class ForecastAddedRowsSnapshotServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastAddedRowsSnapshotServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastAddedRowsSnapshotServiceSchema(ForecastAddedRowsSnapshotServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ba938251-6ce7-4c11-8e9e-e53effa04ee9");
			Name = "ForecastAddedRowsSnapshotService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,93,111,211,48,20,125,14,18,255,225,42,188,164,82,149,74,60,194,90,68,55,6,149,24,154,86,224,5,33,228,37,55,173,69,98,87,182,211,169,66,252,119,174,191,146,166,221,186,141,151,180,177,207,189,190,62,247,248,56,130,53,168,55,172,64,152,95,95,45,101,101,242,115,41,42,190,106,21,51,92,138,252,82,42,44,152,54,223,95,191,124,241,231,229,139,164,213,92,172,96,185,211,6,155,183,7,239,20,90,215,88,216,56,157,127,68,129,138,23,71,152,11,102,88,63,216,47,218,52,82,220,55,174,240,254,209,252,98,254,192,196,7,97,184,225,168,31,152,190,100,133,145,202,207,19,226,149,194,21,21,12,231,53,211,250,13,196,253,190,47,75,44,111,228,157,94,10,182,209,107,105,150,168,182,188,64,23,51,153,76,224,76,183,77,195,212,110,22,222,195,60,84,82,129,102,91,187,172,14,161,110,172,10,137,65,81,210,60,38,153,236,101,249,113,129,21,107,107,51,231,162,164,240,204,236,54,40,171,108,17,75,114,251,218,29,212,51,26,195,23,106,33,76,33,117,37,255,178,53,167,163,159,148,111,211,222,214,188,128,194,110,236,209,125,193,27,152,51,141,17,70,136,3,192,24,78,23,66,11,146,62,232,217,49,122,201,177,46,137,210,107,197,183,204,120,230,146,141,127,233,147,125,226,218,182,163,96,245,39,142,138,169,98,189,163,197,173,74,110,112,35,53,167,201,29,252,170,78,162,123,164,239,105,242,10,69,233,171,24,150,68,218,214,70,181,86,0,182,48,71,80,168,203,147,245,24,77,217,55,141,138,178,8,47,115,104,7,175,35,98,241,150,88,204,14,135,255,252,61,93,215,181,146,27,84,86,180,150,46,105,40,14,75,15,25,104,13,62,162,209,96,214,216,203,105,221,49,66,127,3,37,86,99,160,58,82,242,161,206,124,202,45,171,91,156,193,215,255,200,229,67,125,55,67,173,207,236,231,105,240,30,208,90,78,146,172,208,132,127,137,66,211,42,241,116,65,192,187,119,62,48,201,158,30,51,13,33,137,51,5,111,24,59,114,52,115,246,172,109,206,178,52,28,233,116,28,51,10,188,219,87,225,123,181,106,27,20,38,75,135,146,73,199,48,84,218,104,52,178,126,150,36,164,36,122,106,98,100,58,123,6,13,83,112,93,115,57,30,17,227,21,154,181,44,143,149,216,55,91,110,81,41,94,34,108,37,47,45,172,64,173,47,120,85,217,19,147,125,166,90,206,134,60,69,110,102,86,77,223,109,33,154,14,133,219,201,83,165,144,47,4,17,98,141,73,103,125,146,231,237,103,239,188,31,90,184,247,112,182,69,221,31,7,219,43,235,214,189,145,203,10,74,218,38,42,20,100,153,183,104,238,16,5,144,62,90,58,50,76,148,64,122,49,61,60,90,253,177,215,251,145,13,83,172,1,65,254,61,77,99,80,58,139,150,3,13,26,86,18,107,249,217,196,33,239,15,172,120,109,80,165,179,75,247,11,197,224,250,222,143,12,22,231,122,102,119,26,215,201,98,11,226,128,237,84,183,137,49,248,196,254,179,0,252,106,177,121,17,148,159,175,177,248,29,197,252,165,173,235,204,22,71,183,87,68,68,249,118,17,203,53,226,19,226,60,46,70,251,213,31,142,10,213,13,209,55,88,72,85,46,74,253,88,92,143,140,25,186,86,76,59,62,194,132,173,10,180,123,246,115,190,88,143,8,151,100,177,198,134,209,119,81,219,8,114,209,160,156,240,78,129,142,4,50,22,143,190,25,2,14,46,155,209,113,226,78,171,231,88,215,97,40,152,215,48,54,223,143,186,98,130,173,104,187,180,46,29,42,195,104,193,249,238,219,162,204,124,57,195,107,126,33,108,110,154,13,203,47,40,165,26,200,167,87,138,167,49,120,157,61,61,157,178,2,13,13,169,145,107,41,130,152,130,167,251,217,240,25,115,188,163,220,206,132,164,190,38,79,79,8,56,96,213,126,132,210,143,243,7,139,240,166,57,118,135,249,63,202,57,246,49,231,222,76,24,157,219,143,164,14,251,112,129,167,82,28,194,125,181,167,108,205,143,14,7,105,236,31,108,15,16,111,200,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ba938251-6ce7-4c11-8e9e-e53effa04ee9"));
		}

		#endregion

	}

	#endregion

}

