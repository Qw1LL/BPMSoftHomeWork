namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MailDiagnosticToolsServiceSchema

	/// <exclude/>
	public class MailDiagnosticToolsServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MailDiagnosticToolsServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MailDiagnosticToolsServiceSchema(MailDiagnosticToolsServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("d1cb398f-7abf-4e91-a9e3-b37e95c1622c");
			Name = "MailDiagnosticToolsService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("77f98e1e-7e9a-4332-9f7c-7c7343eb8d36");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,89,75,111,219,70,16,62,51,64,254,195,86,185,208,133,75,185,135,22,69,44,9,144,95,169,218,40,14,44,37,57,24,65,176,34,87,210,214,124,40,187,75,203,106,224,255,222,217,23,223,164,228,192,232,33,61,164,230,114,102,118,246,155,111,30,75,197,56,34,124,131,125,130,206,222,79,103,201,82,120,231,73,188,164,171,148,97,65,147,248,229,139,111,47,95,56,41,167,241,10,205,118,92,144,232,180,242,12,242,97,72,124,41,204,189,55,36,38,140,250,53,153,183,52,254,90,91,156,92,215,150,222,17,81,91,187,73,99,65,35,226,205,192,50,14,233,191,202,175,154,20,188,189,167,62,153,38,1,9,59,95,122,99,240,245,126,191,17,239,19,89,228,2,57,56,140,120,87,216,23,9,163,132,55,189,143,162,162,225,242,186,247,23,111,122,9,59,213,20,39,177,32,43,29,131,241,134,122,242,145,45,33,76,188,85,100,138,105,184,72,30,46,146,8,211,248,233,10,21,228,46,97,49,4,42,8,6,135,245,46,230,133,88,157,97,78,110,128,52,16,112,130,134,72,65,82,68,46,211,42,10,22,44,51,150,176,73,188,76,58,117,51,41,80,4,213,87,140,172,192,109,116,30,98,206,95,35,233,250,5,197,171,56,225,130,250,243,36,9,185,177,162,164,111,205,131,181,246,89,174,141,249,6,232,5,56,111,0,129,5,13,169,216,221,144,175,41,101,36,34,177,224,110,241,65,250,2,238,237,81,145,82,158,89,8,142,228,38,155,116,17,82,31,249,210,203,14,39,209,107,5,98,230,178,3,73,6,255,102,167,188,162,36,12,224,152,239,153,100,170,62,147,211,239,247,209,128,167,81,132,217,110,148,47,16,130,124,70,150,195,222,196,196,211,88,237,245,71,136,70,155,80,185,170,98,142,104,204,5,142,125,226,101,218,253,162,189,141,222,13,49,130,131,36,14,119,168,98,17,125,137,74,207,167,7,250,117,249,224,175,113,188,34,111,41,36,25,212,135,41,142,241,138,176,231,112,176,197,52,250,66,154,95,28,234,242,159,66,108,32,43,101,108,9,23,58,223,119,207,225,112,163,97,244,133,149,158,141,151,175,72,28,104,66,148,217,1,172,230,130,165,82,84,114,68,81,174,227,92,82,174,205,63,77,215,118,162,186,71,64,213,5,80,21,254,144,141,192,113,42,28,64,67,181,234,168,188,52,238,67,23,16,131,10,119,70,110,76,182,69,207,199,108,149,74,28,221,94,234,247,142,209,7,78,24,188,141,117,35,57,58,58,213,155,181,132,17,82,19,246,104,9,190,107,149,203,160,202,106,83,115,178,49,28,35,99,225,177,59,12,83,34,214,201,97,89,122,14,4,16,132,23,41,214,149,20,135,145,170,149,252,93,208,152,40,222,99,134,34,189,214,5,79,69,189,130,143,195,136,72,89,92,49,228,117,108,95,137,114,17,229,70,220,192,20,88,87,60,2,244,38,1,111,129,68,173,108,48,195,17,138,97,158,25,246,50,165,222,72,250,128,146,101,110,199,27,244,149,104,174,169,207,193,71,211,108,43,26,128,148,93,46,130,254,38,165,193,237,103,233,152,17,6,167,92,185,197,192,60,143,242,141,44,216,25,76,214,129,25,145,3,147,251,128,134,35,244,224,77,130,35,111,158,140,25,195,187,129,52,95,161,95,43,48,60,93,112,159,209,5,97,28,45,89,18,161,42,234,93,96,217,179,205,10,70,168,236,201,205,150,154,193,184,160,42,142,96,120,0,105,13,189,253,24,233,255,143,164,131,5,211,21,222,89,148,135,213,142,34,185,51,14,195,44,14,150,104,82,205,28,119,163,6,205,25,212,95,217,160,219,10,132,151,239,159,43,164,28,44,150,35,151,199,170,109,39,51,168,200,234,213,113,92,235,104,30,227,171,132,93,98,127,237,70,50,200,250,240,14,93,34,183,126,12,57,112,11,152,192,248,223,100,231,194,84,28,28,89,180,28,167,230,138,55,14,2,16,154,65,77,34,76,205,104,176,192,8,231,224,75,205,242,173,180,246,217,184,38,249,36,255,45,231,110,109,131,189,212,171,114,3,48,144,208,66,143,83,53,244,16,210,117,148,65,29,39,59,52,150,170,97,51,7,187,13,52,213,66,43,161,220,5,193,52,20,25,63,117,60,17,215,116,252,192,40,132,190,170,63,206,238,58,66,255,249,129,133,149,202,118,220,170,164,55,55,49,200,59,143,69,79,82,186,220,182,60,221,59,220,220,165,44,128,26,111,201,30,232,163,243,221,70,38,68,15,111,54,208,210,213,116,210,255,71,222,54,16,56,194,56,17,195,84,44,127,249,163,87,86,158,195,197,42,73,229,182,191,161,159,209,239,39,240,207,175,39,39,39,5,247,12,142,219,194,223,195,44,214,0,129,93,181,25,160,103,124,119,38,192,237,8,5,88,96,243,231,176,104,163,168,169,223,187,57,235,245,194,13,204,76,192,46,57,58,169,134,47,51,176,248,198,205,109,91,134,27,78,203,75,150,119,65,184,185,47,146,65,55,71,70,174,222,3,38,121,28,204,147,203,56,0,95,180,197,199,39,141,1,251,6,177,143,224,13,56,13,133,207,148,9,224,153,16,0,215,193,109,141,215,210,190,55,210,165,0,17,185,136,176,94,173,183,184,170,149,57,132,111,10,146,80,44,181,9,4,126,9,109,133,35,28,134,201,150,4,104,153,100,229,186,189,107,170,155,26,138,180,49,4,53,142,66,191,245,253,148,241,74,202,222,94,111,136,190,125,22,239,101,206,45,240,108,18,223,39,119,196,213,88,74,26,191,191,158,205,97,44,180,131,89,194,34,44,89,10,162,198,107,189,164,46,212,199,232,44,9,118,51,177,11,73,73,36,91,245,62,49,72,11,18,24,107,199,42,182,54,252,221,182,213,173,206,206,201,165,139,175,141,166,233,38,110,86,58,234,149,121,1,19,53,170,160,14,27,46,113,200,73,177,51,178,60,195,36,219,75,219,217,220,72,125,184,210,203,214,9,115,52,209,39,113,138,55,106,169,152,61,187,71,154,198,154,205,2,166,60,99,198,56,157,17,177,177,19,27,161,179,93,189,219,64,57,170,46,217,36,180,124,153,169,86,158,108,149,140,180,224,86,16,104,83,152,237,98,127,205,146,216,124,233,113,229,65,173,44,20,195,0,138,29,228,53,55,248,131,132,58,249,125,249,113,152,241,214,198,169,113,248,212,61,249,167,178,178,55,209,198,243,54,108,3,227,229,240,171,224,157,86,223,103,200,123,121,152,43,198,205,139,114,83,70,80,177,253,53,114,161,82,17,213,139,81,70,140,125,155,119,238,77,42,219,53,8,67,49,244,239,230,144,141,90,62,127,44,148,64,91,89,173,250,222,33,225,124,77,252,59,142,196,26,50,171,62,48,152,171,35,150,200,224,5,228,231,33,51,131,63,154,3,17,6,125,31,70,130,37,178,115,31,10,141,85,222,96,22,93,139,53,97,91,10,233,99,204,32,48,163,192,147,118,158,163,60,61,185,134,168,90,0,201,53,225,181,17,193,250,157,77,35,6,245,174,33,119,98,111,234,5,237,131,110,15,109,99,156,188,4,60,113,134,203,63,29,28,48,183,253,63,40,215,93,106,159,4,221,142,18,220,96,231,121,11,177,220,147,52,186,213,252,141,163,113,120,173,38,183,94,135,26,6,66,251,239,46,182,200,125,67,61,109,29,32,111,118,201,126,169,53,14,62,30,231,154,31,33,3,193,126,187,170,17,64,186,158,88,36,126,184,194,215,156,90,149,75,246,143,154,95,133,27,191,38,189,137,100,129,239,6,207,238,220,106,78,46,167,66,235,234,39,134,195,137,37,96,188,216,42,31,224,164,87,24,140,102,82,131,186,87,35,215,236,191,199,105,167,66,83,235,118,123,85,200,85,157,6,230,102,250,78,43,83,173,132,73,42,39,203,72,249,93,83,39,222,185,252,141,66,253,24,20,99,24,195,216,61,76,109,114,255,39,220,112,204,111,46,245,163,119,228,65,134,142,72,208,98,19,113,145,6,180,141,247,183,23,112,147,43,177,181,244,51,74,3,228,250,231,147,74,4,106,126,168,149,226,7,46,200,98,136,181,242,162,193,13,237,199,148,68,32,235,190,131,155,146,76,17,173,210,211,228,207,217,223,90,76,75,28,53,225,93,233,31,53,225,63,184,239,61,25,246,238,203,235,119,124,168,233,168,64,246,163,138,6,126,207,167,149,78,212,137,158,197,182,9,187,51,251,182,194,110,64,53,247,167,114,139,217,131,224,158,221,129,235,178,231,28,184,179,237,80,223,21,53,189,90,92,124,252,15,71,214,221,71,90,31,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("d1cb398f-7abf-4e91-a9e3-b37e95c1622c"));
		}

		#endregion

	}

	#endregion

}

