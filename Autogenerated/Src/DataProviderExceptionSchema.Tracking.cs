namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DataProviderExceptionSchema

	/// <exclude/>
	public class DataProviderExceptionSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DataProviderExceptionSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DataProviderExceptionSchema(DataProviderExceptionSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("29d0b1e4-47c2-4642-a043-e4aab804fb5b");
			Name = "DataProviderException";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("120fd877-7905-4e7f-9414-1956e0c20629");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,85,203,110,219,48,16,60,59,64,254,97,161,244,16,163,134,124,119,18,3,141,83,160,62,164,48,236,228,84,244,64,75,43,153,168,68,170,124,56,73,141,252,123,151,122,219,82,237,160,64,209,162,23,73,92,46,135,179,195,89,81,176,20,117,198,2,132,219,197,253,74,70,198,159,73,17,241,216,42,102,184,20,254,131,98,193,55,46,226,243,179,221,249,217,192,106,250,132,213,139,54,152,94,29,140,253,207,104,58,177,165,21,134,167,232,175,80,113,150,240,31,57,40,101,81,222,133,194,152,6,48,75,152,214,19,184,99,134,45,148,220,242,16,213,199,231,0,51,151,153,39,142,199,99,184,214,54,77,153,122,153,150,227,91,166,17,66,90,2,89,185,6,176,90,84,133,66,136,164,130,15,139,185,95,129,140,91,40,95,106,74,235,4,191,82,32,179,235,132,7,16,56,58,253,108,96,2,45,102,3,18,132,158,117,29,148,158,161,50,28,169,152,69,142,85,204,31,210,207,3,36,178,97,92,104,216,24,147,129,54,204,88,13,129,12,17,100,4,82,241,152,51,145,128,162,163,145,130,42,141,148,76,137,153,180,161,171,165,91,76,69,254,19,161,173,114,176,153,195,90,150,235,91,161,29,196,116,76,160,221,227,245,8,193,37,126,183,168,13,88,149,128,145,197,222,64,85,62,109,120,176,129,39,116,48,186,209,252,56,45,109,148,243,68,137,137,225,35,129,246,16,185,64,17,22,98,238,43,75,98,17,130,13,140,84,111,209,246,14,35,102,19,67,114,214,203,142,211,235,61,236,203,33,236,142,9,52,59,137,158,71,50,166,88,10,130,186,236,198,163,78,211,44,70,111,218,56,170,12,249,215,227,60,241,52,171,82,202,114,221,144,44,185,166,86,184,172,199,127,137,115,103,157,234,88,207,155,86,118,220,243,123,203,218,39,0,27,243,56,168,114,180,111,208,194,157,1,179,154,102,26,115,254,166,186,163,195,126,234,22,53,170,188,221,166,55,116,251,12,6,157,163,201,195,61,61,121,211,3,124,85,38,183,58,198,165,53,195,60,225,31,57,108,46,68,75,69,111,58,119,227,95,232,255,159,58,165,81,108,95,140,183,120,168,176,75,159,145,14,218,123,116,0,254,199,61,197,197,134,110,73,19,202,96,124,90,146,189,59,126,46,34,73,108,35,57,130,149,81,200,82,170,205,93,122,248,156,255,152,221,187,174,174,72,171,163,187,19,215,193,61,154,141,12,15,110,130,146,153,220,162,82,68,171,106,203,7,73,187,211,135,251,155,231,213,111,153,114,115,84,184,219,218,111,230,11,113,20,26,171,4,188,243,186,146,78,96,215,13,190,250,213,173,86,40,152,39,53,130,190,250,30,188,119,251,181,149,109,215,85,198,246,75,165,216,79,62,233,9,112,151,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("29d0b1e4-47c2-4642-a043-e4aab804fb5b"));
		}

		#endregion

	}

	#endregion

}

