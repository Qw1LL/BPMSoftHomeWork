namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: RelationshipDiagramLoopingValidatorSchema

	/// <exclude/>
	public class RelationshipDiagramLoopingValidatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public RelationshipDiagramLoopingValidatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public RelationshipDiagramLoopingValidatorSchema(RelationshipDiagramLoopingValidatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("3e3cfbee-e9ec-b7c3-6993-82178c1352cf");
			Name = "RelationshipDiagramLoopingValidator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("330585ef-45a9-4680-b6b8-7296ad2a3590");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,88,75,111,219,56,16,62,187,64,255,3,139,94,100,192,80,144,61,110,30,69,234,60,106,32,93,100,147,108,247,88,168,226,196,38,86,38,29,146,114,55,104,243,223,151,47,73,164,68,201,138,209,205,37,177,40,206,235,155,111,56,67,209,108,13,98,147,229,128,62,222,124,190,99,15,50,157,51,250,64,150,37,207,36,97,52,189,133,194,252,16,43,178,57,7,65,150,20,248,219,55,63,222,190,153,148,130,208,37,186,123,18,18,214,71,173,103,165,164,40,32,55,130,233,21,40,25,146,119,246,92,19,250,216,44,54,230,215,107,70,213,186,122,243,158,195,82,169,64,243,34,19,226,119,20,248,66,178,37,207,214,215,140,109,148,244,151,172,32,56,147,140,27,177,131,131,3,116,44,202,245,58,227,79,167,238,217,168,24,163,33,173,20,28,52,26,212,210,166,252,86,144,28,229,99,213,40,17,13,82,29,194,37,129,2,171,24,110,56,217,102,18,140,206,201,198,62,160,107,34,228,241,85,73,240,41,250,186,37,130,72,192,23,84,18,73,64,28,117,246,249,198,205,174,39,149,49,106,193,86,242,133,117,164,89,11,85,252,89,66,9,149,45,48,226,102,41,216,244,41,19,171,59,144,199,247,229,166,176,155,103,200,136,40,153,220,42,6,124,11,57,227,56,144,35,84,162,175,107,66,231,172,164,114,161,114,44,238,217,124,5,249,63,232,4,29,218,148,78,222,3,197,22,19,247,236,0,186,225,108,3,92,135,60,4,210,112,240,215,157,216,209,73,20,18,244,225,3,74,98,235,39,136,194,247,17,166,146,233,212,197,19,3,214,110,55,43,198,1,15,103,107,217,95,176,38,61,241,174,238,17,161,251,111,253,128,12,9,39,75,144,71,72,168,63,250,233,57,84,174,109,162,121,201,185,114,202,230,116,132,144,199,216,47,33,97,77,192,45,18,219,160,219,139,30,214,61,113,15,240,112,30,210,208,154,109,113,211,154,109,47,90,179,253,170,27,55,250,168,250,25,228,138,245,22,115,165,217,162,115,5,242,47,74,30,75,168,194,78,166,14,222,112,95,105,54,153,154,57,84,46,246,164,211,8,78,210,59,208,135,107,226,34,211,46,169,232,155,167,180,75,149,179,169,19,61,87,112,19,170,132,171,133,123,230,28,73,116,216,67,126,253,246,63,248,245,113,188,95,62,66,233,25,198,183,25,93,66,226,251,231,54,114,144,37,167,1,162,189,20,30,46,42,149,188,154,103,70,81,98,138,197,86,239,2,87,153,116,6,135,177,249,123,5,28,250,161,89,136,192,60,224,164,182,210,32,162,93,118,112,236,21,204,57,225,70,247,107,5,21,225,97,122,241,88,102,133,120,89,116,91,166,28,84,41,183,58,238,153,57,44,147,17,49,231,65,160,85,104,219,140,35,248,55,47,74,12,216,157,94,245,41,210,18,137,18,219,190,243,98,181,11,169,79,23,171,48,9,206,213,58,214,0,182,70,219,187,214,81,170,71,49,153,17,42,194,173,113,200,76,84,15,170,241,182,178,171,66,138,199,186,195,23,175,135,237,242,163,169,93,235,73,196,139,244,146,241,139,44,95,117,13,217,148,76,124,115,23,244,209,36,56,180,102,117,63,15,18,164,51,0,36,67,252,240,168,234,83,131,136,63,0,176,210,166,160,123,215,29,41,210,51,250,148,168,58,210,206,171,127,233,2,87,156,246,203,89,37,219,58,76,30,80,82,107,172,204,76,98,106,49,246,52,84,225,70,130,253,198,88,129,22,226,92,117,46,146,171,5,71,53,83,197,220,252,110,170,88,199,227,151,39,50,253,46,157,115,80,130,73,181,123,22,246,127,143,80,28,182,106,40,155,247,106,8,228,102,141,249,224,36,110,247,234,14,159,76,2,126,254,28,216,216,246,35,202,2,3,140,234,26,154,46,115,166,5,165,88,208,118,73,70,113,234,243,84,231,90,57,233,106,61,213,154,15,171,116,215,58,6,41,217,54,191,7,33,91,19,204,66,19,211,227,218,206,99,167,33,98,151,53,29,221,211,154,163,22,147,154,135,181,146,157,8,15,232,140,214,104,151,245,8,10,1,149,76,55,41,170,82,2,22,118,12,182,9,221,84,83,95,166,62,101,20,23,160,125,107,174,174,251,119,152,124,240,240,115,141,178,129,164,7,64,15,144,126,138,89,199,189,131,100,140,215,92,191,173,231,0,189,173,242,188,211,101,35,91,171,57,49,130,88,239,238,118,107,211,57,140,176,244,121,244,228,205,164,65,204,190,111,223,248,205,130,117,80,101,168,242,78,95,237,59,119,123,13,167,211,21,2,90,199,20,140,13,205,229,37,50,217,219,80,99,173,172,146,75,47,9,215,45,219,109,253,190,34,202,195,196,151,208,39,78,83,47,225,189,236,196,191,89,166,231,96,117,59,93,238,188,110,227,111,61,109,77,124,177,243,97,210,101,82,111,54,253,182,52,132,61,118,3,231,158,73,104,230,213,58,25,123,28,159,99,114,54,250,140,233,25,107,103,187,174,57,3,220,216,33,249,202,76,233,185,35,252,74,198,236,174,110,243,177,109,128,94,238,51,155,46,238,26,187,30,94,217,239,118,91,194,165,106,218,99,238,73,149,110,175,65,141,239,3,250,253,12,189,144,164,125,223,110,252,46,111,191,226,153,254,235,45,166,230,75,27,58,141,127,117,171,185,209,91,77,241,121,179,154,134,186,67,170,127,70,15,39,6,219,207,162,191,60,43,238,115,235,11,83,242,202,72,251,205,227,197,184,182,170,195,174,134,139,207,255,1,249,20,221,152,182,23,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("3e3cfbee-e9ec-b7c3-6993-82178c1352cf"));
		}

		#endregion

	}

	#endregion

}

