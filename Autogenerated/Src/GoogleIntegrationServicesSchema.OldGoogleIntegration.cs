namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: GoogleIntegrationServicesSchema

	/// <exclude/>
	public class GoogleIntegrationServicesSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public GoogleIntegrationServicesSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public GoogleIntegrationServicesSchema(GoogleIntegrationServicesSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b9442e89-69f7-4922-a4df-5ef096a3aa03");
			Name = "GoogleIntegrationServices";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("2e3e95a4-2024-4552-b820-30e9633c8933");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,86,205,110,219,70,16,62,51,64,222,97,161,92,40,64,216,7,112,234,0,138,227,56,42,96,71,48,29,228,32,228,176,90,142,233,109,73,46,187,63,172,213,66,239,222,89,46,73,241,87,66,138,30,122,145,185,179,51,179,51,223,124,51,158,156,101,160,11,198,129,124,220,222,71,242,217,208,27,153,63,139,196,42,102,132,204,223,190,249,251,237,155,192,106,145,39,36,58,104,3,217,251,193,153,62,218,220,136,12,104,4,74,176,84,252,85,217,141,180,240,182,20,28,238,101,12,233,217,75,186,230,70,148,151,157,208,239,176,63,41,156,130,207,178,174,225,73,174,96,90,74,63,51,110,164,18,160,199,247,248,4,253,98,76,65,215,123,109,20,234,97,80,29,181,91,165,164,218,228,207,146,92,247,93,118,227,68,56,43,83,218,106,163,3,116,241,78,65,130,238,200,77,202,180,190,34,119,82,38,41,108,114,3,137,71,190,246,81,233,238,234,67,227,235,135,147,173,117,241,0,6,19,46,80,127,47,82,97,14,143,240,135,21,10,50,200,141,14,187,7,23,9,6,121,193,196,105,209,90,16,47,221,35,133,221,167,130,19,238,98,60,19,98,128,36,193,223,54,167,79,144,66,194,12,96,94,91,229,138,233,211,8,10,127,32,113,125,79,74,41,98,114,251,10,220,154,174,227,123,48,47,50,14,229,254,55,224,134,148,44,181,176,244,168,5,239,32,143,253,43,253,39,183,74,22,160,140,168,222,172,162,174,159,244,25,148,66,25,203,82,242,77,131,66,20,115,244,235,172,6,71,199,245,32,72,192,212,95,129,2,99,85,78,194,190,222,210,113,194,213,2,94,177,224,86,41,4,15,107,174,53,222,237,22,125,221,197,15,199,151,32,56,186,223,99,47,38,164,84,197,34,108,31,115,136,248,11,100,236,1,187,241,20,133,183,212,245,199,113,50,161,81,81,190,64,138,64,144,177,100,46,185,138,128,190,9,14,244,14,204,47,51,46,63,132,57,252,73,48,51,140,219,58,237,181,74,172,227,77,184,176,253,148,87,3,92,151,43,255,96,48,235,0,6,24,160,139,33,44,203,101,31,200,32,56,71,7,207,160,57,254,141,50,124,196,25,136,113,193,4,23,191,98,234,213,71,56,199,83,34,134,146,21,233,82,23,27,47,183,105,186,172,113,55,234,208,84,96,100,24,182,92,239,20,200,161,54,31,113,237,42,136,44,231,72,65,124,12,209,117,61,233,176,170,33,35,156,25,254,66,48,3,14,69,197,116,104,162,249,185,71,78,14,174,201,224,141,14,69,47,23,165,211,160,187,22,224,238,116,11,118,56,123,55,121,41,127,135,176,70,249,154,44,182,95,163,39,199,46,37,158,32,43,82,87,74,148,70,134,41,51,138,29,245,62,202,248,16,153,67,234,180,208,221,61,194,195,18,104,165,244,187,98,69,1,177,103,167,155,123,160,205,103,169,50,102,122,6,94,68,127,213,50,95,145,6,146,243,122,213,240,12,118,30,219,43,82,43,108,153,66,34,27,80,97,213,231,24,250,4,214,11,111,91,183,249,124,73,166,179,14,235,161,50,108,168,166,220,163,97,131,117,28,136,124,61,107,90,156,235,135,194,165,67,174,63,52,236,24,77,12,58,19,99,211,201,254,239,241,191,226,193,183,34,198,47,255,92,36,57,46,35,107,206,37,110,39,255,3,42,92,44,231,108,240,225,157,197,255,145,186,43,218,196,77,57,255,69,149,74,166,218,177,228,92,83,100,165,6,175,70,159,100,84,241,39,108,166,109,32,158,137,31,74,116,163,31,164,185,205,10,115,192,219,118,34,140,139,238,51,217,42,40,133,180,122,42,163,222,144,171,6,71,112,92,141,82,124,63,63,81,188,116,32,188,180,80,53,80,251,141,234,19,51,172,75,180,243,155,78,91,166,43,210,91,143,235,13,232,228,122,184,9,77,142,188,250,45,89,130,82,2,23,179,211,30,25,129,105,15,83,211,218,21,15,141,218,173,115,207,180,219,54,59,70,13,174,149,230,43,119,253,77,216,68,70,173,115,175,222,58,245,107,234,141,223,23,209,1,109,21,157,172,67,144,222,152,104,205,127,178,104,199,127,0,214,231,15,79,127,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b9442e89-69f7-4922-a4df-5ef096a3aa03"));
		}

		#endregion

	}

	#endregion

}

