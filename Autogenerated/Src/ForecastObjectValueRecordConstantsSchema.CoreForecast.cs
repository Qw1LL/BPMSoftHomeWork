namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastObjectValueRecordConstantsSchema

	/// <exclude/>
	public class ForecastObjectValueRecordConstantsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastObjectValueRecordConstantsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastObjectValueRecordConstantsSchema(ForecastObjectValueRecordConstantsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1ddbea9e-ae56-27a5-483a-144ecec56549");
			Name = "ForecastObjectValueRecordConstants";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,86,61,111,219,48,20,156,19,32,255,129,72,151,118,177,247,186,45,208,218,73,154,33,141,97,7,93,138,14,180,248,100,179,160,72,149,164,28,184,65,254,123,31,73,235,195,150,44,69,242,36,144,122,119,186,123,34,143,36,146,38,96,82,26,1,249,54,127,88,170,216,142,166,74,198,124,157,105,106,185,146,87,151,47,87,151,23,153,225,114,77,150,59,99,33,153,28,141,71,139,76,90,158,192,104,9,154,83,193,255,121,28,86,97,221,59,13,107,28,144,169,160,198,124,36,183,74,67,68,141,253,206,141,85,122,183,80,207,248,45,99,169,180,198,151,143,199,99,242,201,100,73,66,245,238,203,126,60,215,106,203,25,24,18,239,193,68,173,254,64,100,201,150,138,12,8,206,41,205,72,148,243,140,114,154,113,133,39,205,86,130,71,4,43,44,62,34,39,166,208,242,232,217,126,58,178,133,231,170,72,186,112,222,115,180,255,4,114,104,103,125,1,241,13,186,182,187,169,18,89,34,127,96,19,201,103,114,93,76,223,179,235,201,41,236,28,251,164,216,33,48,204,181,161,66,253,33,42,140,218,80,183,153,140,74,204,87,193,169,113,192,114,250,52,52,55,114,248,201,110,123,51,16,96,129,61,30,105,45,166,91,144,220,164,130,238,252,191,104,250,106,245,253,105,150,6,120,7,98,41,105,106,54,202,30,130,242,217,214,246,150,139,168,178,130,150,209,6,18,154,243,52,215,116,115,238,55,201,91,168,93,233,76,115,33,152,122,110,233,111,94,158,59,171,144,85,217,242,215,195,108,23,107,44,86,91,221,77,49,5,33,194,223,61,134,71,225,143,189,134,32,1,201,66,150,52,229,74,109,15,119,167,73,170,85,10,218,242,16,44,141,153,194,168,165,141,113,242,107,134,111,48,38,172,166,145,253,93,230,75,8,150,6,49,46,71,92,35,142,21,249,137,59,176,134,160,4,227,158,118,3,36,147,252,47,170,64,153,216,151,152,131,118,34,234,42,194,140,87,92,12,159,58,224,101,245,94,242,93,198,25,185,103,228,133,172,193,78,156,134,9,121,237,35,150,133,61,25,58,215,79,232,41,104,89,233,27,253,0,201,10,244,251,124,205,239,81,97,75,127,112,221,47,227,189,150,34,195,125,13,240,211,207,199,182,110,128,65,196,19,42,200,153,210,83,127,150,244,211,30,48,93,139,166,201,71,64,98,72,30,88,241,235,42,63,212,134,91,137,124,34,247,179,18,48,67,172,4,100,163,149,252,164,29,110,69,67,12,26,36,222,179,156,46,187,27,188,191,223,70,212,238,20,57,138,131,188,110,182,114,139,25,238,247,76,151,195,189,193,105,99,55,103,187,98,225,22,67,240,236,193,227,1,8,149,140,248,203,111,191,228,235,102,169,37,53,58,133,39,172,41,239,87,199,46,26,142,74,156,253,15,246,188,208,52,225,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1ddbea9e-ae56-27a5-483a-144ecec56549"));
		}

		#endregion

	}

	#endregion

}

