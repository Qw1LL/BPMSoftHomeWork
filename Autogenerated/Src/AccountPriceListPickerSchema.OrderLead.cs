namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: AccountPriceListPickerSchema

	/// <exclude/>
	public class AccountPriceListPickerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public AccountPriceListPickerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public AccountPriceListPickerSchema(AccountPriceListPickerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b7a0a820-d8a1-46e7-b253-7496058e4918");
			Name = "AccountPriceListPicker";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("4c797525-d05e-4bd8-84e9-5dcb79ad7c60");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,201,110,219,48,16,61,43,64,254,97,160,92,100,160,144,238,169,109,160,206,6,3,13,96,212,93,14,69,15,44,53,74,136,74,164,203,37,173,91,228,223,59,164,40,57,82,20,23,57,206,112,150,247,222,204,80,178,6,205,142,113,132,213,230,118,171,42,155,95,40,89,137,59,167,153,21,74,158,158,252,61,61,73,156,17,242,14,182,123,99,177,121,219,219,135,132,166,81,114,202,175,113,218,155,95,174,94,120,184,102,220,42,45,208,208,59,69,156,105,188,35,20,112,81,51,99,206,225,29,231,202,73,187,209,130,227,123,97,236,70,240,31,168,67,100,81,20,48,55,174,105,152,222,47,163,29,178,160,82,26,12,214,200,61,31,232,115,161,210,170,233,42,230,93,133,226,73,137,175,151,88,49,87,219,149,144,37,1,205,236,126,135,170,202,214,163,246,179,217,55,10,222,185,239,181,224,192,67,203,105,156,112,14,227,92,74,244,250,246,60,175,5,214,37,17,221,104,101,9,48,150,129,91,178,235,76,208,200,74,37,235,61,124,50,168,105,82,50,210,26,154,173,120,201,25,202,178,45,28,237,78,77,37,141,213,206,43,237,123,5,228,109,196,88,197,224,88,75,97,5,171,197,31,52,192,64,226,47,16,148,207,36,237,140,170,192,222,35,165,32,2,215,88,45,210,105,234,105,177,108,165,241,66,63,87,186,245,236,152,102,13,72,90,200,69,234,6,124,210,229,71,234,226,125,192,123,103,62,47,66,70,40,16,229,159,238,158,141,196,26,22,159,65,24,65,50,10,90,140,194,252,194,38,143,199,133,189,69,123,175,218,249,137,7,102,177,155,94,48,96,27,150,16,110,208,142,97,182,47,217,141,19,37,176,246,109,93,118,184,52,90,167,101,208,61,198,13,145,206,66,84,146,208,1,213,174,145,89,218,151,93,151,105,255,120,77,219,158,117,211,57,184,191,220,163,198,44,245,145,249,218,92,253,116,172,206,218,58,249,198,139,139,150,228,59,64,138,121,204,68,40,175,20,229,133,165,14,188,73,150,30,248,106,31,129,190,32,201,3,211,157,51,138,186,56,34,235,33,61,192,77,6,153,249,213,111,228,206,226,150,46,188,198,15,200,149,46,231,190,235,50,243,183,70,27,183,8,11,230,231,224,205,156,250,180,2,125,102,181,195,24,58,212,252,13,40,71,115,246,208,53,26,250,65,98,227,56,201,214,247,58,233,254,119,163,132,10,104,207,56,214,254,107,107,63,214,200,243,200,201,61,59,187,94,170,116,25,197,4,81,162,180,162,18,68,253,233,193,133,212,150,144,89,246,236,231,69,231,122,114,148,15,66,91,218,171,231,99,62,190,240,211,11,49,26,230,132,128,209,55,212,244,241,31,180,51,51,34,232,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b7a0a820-d8a1-46e7-b253-7496058e4918"));
		}

		#endregion

	}

	#endregion

}

