namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: IntegrationSchema

	/// <exclude/>
	public class IntegrationSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IntegrationSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IntegrationSchema(IntegrationSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("06f664ab-f0bf-d2a5-e1ec-f7a4958fb6bc");
			Name = "Integration";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f1114c1f-cbc3-4ea1-be84-e9eaafb87c31");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,88,75,111,219,48,12,62,167,64,255,131,208,94,182,75,114,111,187,2,109,182,116,1,210,33,91,186,93,134,29,20,155,73,133,250,145,73,114,129,172,232,127,31,109,217,177,37,211,175,238,133,93,18,155,34,63,126,164,72,61,28,241,16,212,142,123,192,174,151,183,171,120,163,199,211,56,218,136,109,34,185,22,113,52,94,197,158,224,193,2,184,127,3,209,241,209,211,241,209,40,81,34,218,178,213,94,105,8,207,157,119,180,14,2,240,82,83,53,70,11,144,194,171,233,124,74,34,45,66,24,175,112,148,7,226,71,230,9,181,80,239,84,194,22,95,216,52,224,74,157,177,121,164,97,107,152,100,195,147,201,132,93,168,36,12,185,220,95,230,239,153,42,219,196,146,249,160,60,41,214,169,39,81,26,142,11,187,73,105,136,162,175,111,185,230,24,171,150,220,211,223,80,176,75,214,129,240,152,151,193,89,142,71,24,53,254,186,228,110,65,115,31,65,86,160,53,250,84,70,201,165,216,155,99,141,228,168,206,209,38,89,39,48,74,169,142,40,67,219,178,176,48,179,123,205,21,100,58,198,152,178,118,28,243,221,14,205,83,53,51,154,27,146,150,164,41,150,73,18,166,169,173,90,211,230,182,189,49,252,194,131,196,80,174,154,55,216,187,4,60,25,43,11,160,130,96,32,110,33,92,131,124,245,1,123,131,189,97,39,10,210,146,142,229,201,235,18,179,0,85,90,102,149,157,171,176,39,182,5,125,206,84,250,243,124,208,198,167,65,36,103,177,12,219,41,214,1,108,132,165,4,31,54,34,2,255,99,2,42,173,49,27,175,10,72,6,189,59,0,204,4,4,190,21,187,19,252,210,86,117,115,208,225,232,123,206,175,205,67,17,67,67,122,173,252,246,203,207,52,81,58,14,95,152,155,8,255,219,232,102,122,255,69,22,112,153,134,72,15,12,95,208,213,16,196,200,113,62,116,250,61,164,136,20,218,226,158,26,149,223,23,246,123,225,251,16,101,197,250,23,102,190,153,103,99,203,21,51,77,173,56,13,157,77,200,155,103,130,156,8,171,35,40,207,68,207,56,178,129,30,77,245,145,174,42,133,89,188,12,3,191,47,231,152,114,224,150,64,85,208,119,17,39,194,177,130,169,85,177,106,142,129,2,196,243,66,72,224,29,54,135,236,105,16,98,152,109,126,4,102,101,87,204,159,233,36,84,28,244,104,143,254,171,34,5,246,152,178,169,163,85,78,0,204,252,82,76,75,108,10,26,171,73,232,253,202,187,135,144,167,178,210,139,77,249,157,163,215,64,159,174,134,148,166,170,33,47,132,210,23,214,41,232,50,15,137,76,249,193,73,231,161,204,156,229,210,146,32,206,100,45,43,120,175,213,187,123,178,123,207,53,5,21,136,232,1,252,121,52,149,192,53,248,119,162,25,121,81,87,125,129,163,149,230,58,81,93,62,140,214,0,120,161,174,240,238,243,88,39,191,142,227,128,205,243,209,1,128,137,2,179,194,230,21,67,3,127,118,180,6,56,8,27,112,43,71,252,226,185,187,60,137,245,171,204,113,181,254,203,90,189,204,22,49,170,244,11,104,231,214,53,195,187,42,6,253,96,223,186,234,215,174,254,247,46,226,226,213,121,129,114,89,176,179,150,59,149,137,191,136,99,41,227,29,72,45,0,131,89,102,152,173,57,204,29,45,249,22,230,101,215,218,245,58,179,148,232,217,63,133,200,55,12,114,201,33,191,238,128,147,240,67,51,252,211,132,187,44,254,88,194,139,21,226,202,191,242,188,24,191,84,52,102,125,81,215,164,83,223,167,239,250,183,221,75,167,179,49,13,109,101,87,240,43,142,30,110,217,23,2,146,100,91,122,29,224,218,244,22,2,18,216,141,49,151,187,226,174,200,201,79,53,55,160,21,195,250,69,135,170,90,185,44,137,4,94,210,152,192,83,162,22,27,225,113,188,238,183,125,183,105,218,114,243,136,111,18,225,55,236,183,195,120,165,219,240,0,30,149,93,187,223,150,221,205,102,19,240,180,201,253,52,39,152,32,155,30,207,182,188,33,137,178,247,208,190,27,232,176,164,233,253,110,8,39,141,234,100,210,238,112,224,215,217,132,249,135,188,1,140,10,19,155,149,251,69,240,32,160,56,58,237,98,164,182,240,248,232,249,39,234,104,216,20,33,22,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("06f664ab-f0bf-d2a5-e1ec-f7a4958fb6bc"));
		}

		#endregion

	}

	#endregion

}

