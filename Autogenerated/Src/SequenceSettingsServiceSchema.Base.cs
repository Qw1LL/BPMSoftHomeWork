namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SequenceSettingsServiceSchema

	/// <exclude/>
	public class SequenceSettingsServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SequenceSettingsServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SequenceSettingsServiceSchema(SequenceSettingsServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("67d85461-7e33-4b25-8c30-d4ece35987d1");
			Name = "SequenceSettingsService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("76eace8e-4a48-486b-bf04-de18fe06b0a2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,83,77,111,155,64,16,61,59,82,254,195,138,147,35,33,184,55,142,37,227,168,85,43,57,142,66,155,28,172,30,214,48,118,87,133,93,186,59,80,161,42,255,189,179,187,96,227,80,57,145,218,83,15,24,239,236,123,243,230,227,33,121,9,166,226,25,176,228,126,149,170,29,70,75,37,119,98,95,107,142,66,201,203,139,95,151,23,147,218,8,185,103,105,107,16,202,40,5,221,136,12,86,42,135,226,250,220,101,180,200,80,52,46,205,121,220,19,108,143,128,99,25,26,162,219,100,124,65,104,186,44,75,151,149,110,227,56,102,51,83,151,37,215,237,188,59,167,240,163,6,73,77,25,64,36,178,161,63,78,48,234,9,241,128,177,233,170,161,206,81,243,12,191,218,216,194,84,119,128,36,84,81,7,91,81,8,108,31,40,171,208,80,130,68,51,29,30,108,27,236,134,189,66,177,168,168,11,228,87,86,164,170,183,133,200,88,86,112,99,14,53,167,93,201,93,81,239,88,194,13,116,7,226,216,125,140,122,118,129,15,128,199,198,179,90,107,18,101,13,47,106,215,245,184,109,31,169,184,230,37,147,100,131,155,192,180,166,83,191,163,115,48,183,191,76,237,24,197,187,65,206,98,135,63,210,53,96,173,165,153,31,132,157,224,44,238,227,22,184,89,87,224,237,52,156,240,100,67,155,252,40,27,245,29,166,43,192,111,42,167,17,6,247,235,244,115,16,50,59,38,48,248,94,233,146,35,197,9,186,2,99,248,30,124,40,250,100,148,12,89,162,242,54,197,182,128,19,200,33,26,61,105,94,85,144,135,86,238,129,124,174,164,129,243,57,221,94,250,197,8,26,32,77,181,239,237,209,182,54,53,168,173,29,79,103,117,197,220,94,38,13,215,100,53,15,95,241,138,84,36,252,60,108,133,34,211,47,228,68,26,131,4,250,56,72,238,122,68,35,206,32,67,68,250,73,107,37,214,250,22,118,188,46,112,250,66,218,167,240,3,63,80,45,111,233,61,224,203,246,176,103,247,201,252,217,63,233,208,63,255,198,55,93,182,145,107,78,200,200,181,175,49,152,187,215,89,230,127,237,183,70,137,220,174,225,13,134,11,157,57,143,179,251,75,3,14,29,183,212,192,145,236,182,40,16,116,207,124,97,186,112,40,221,59,203,62,207,191,1,208,51,43,146,81,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("67d85461-7e33-4b25-8c30-d4ece35987d1"));
		}

		#endregion

	}

	#endregion

}

