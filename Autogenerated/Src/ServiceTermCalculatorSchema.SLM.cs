namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ServiceTermCalculatorSchema

	/// <exclude/>
	public class ServiceTermCalculatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ServiceTermCalculatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ServiceTermCalculatorSchema(ServiceTermCalculatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("a52051c5-8c49-4dbd-ade2-111eba803475");
			Name = "ServiceTermCalculator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b11d550e-0087-4f53-ae17-fb00d41102cf");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,89,109,79,227,70,16,254,28,36,254,195,54,149,78,166,74,77,85,85,253,112,64,78,20,122,87,84,33,161,75,232,135,86,21,90,236,13,108,229,216,209,238,58,52,173,248,239,157,217,23,103,189,118,156,112,73,142,86,234,23,176,215,243,182,207,60,51,99,111,74,201,243,7,50,90,72,197,166,39,135,7,165,119,27,95,20,89,198,18,197,139,92,198,31,88,206,4,79,42,145,31,110,174,71,197,68,129,76,62,225,15,165,160,40,22,95,208,140,229,41,21,178,69,78,48,88,60,60,200,233,148,201,25,77,216,10,19,35,38,230,60,97,99,38,166,135,7,127,31,30,244,142,143,143,201,169,44,167,83,42,22,67,123,255,145,205,4,147,44,87,146,72,35,79,20,40,144,132,102,73,153,81,85,136,216,105,30,123,170,179,242,62,227,9,73,50,42,37,241,28,93,84,106,228,45,185,170,175,128,26,70,209,251,82,176,7,136,143,188,231,44,75,37,238,164,215,155,9,62,167,138,17,193,104,90,228,217,130,220,66,52,176,157,220,160,70,238,202,218,253,73,171,206,213,104,198,18,62,225,137,222,63,58,191,161,2,64,130,13,73,114,39,253,135,237,6,46,225,110,204,167,140,220,165,112,165,65,134,112,33,15,38,98,123,111,195,191,17,197,140,9,197,153,221,66,136,174,94,112,105,36,165,226,25,87,11,4,179,137,102,21,137,19,191,53,210,228,46,169,47,152,176,13,246,161,172,251,175,49,238,61,48,101,175,122,130,169,82,228,13,91,228,221,59,18,53,22,207,72,206,158,66,219,81,0,255,209,145,14,164,247,172,255,202,165,171,22,115,115,154,149,204,19,127,238,64,11,83,70,102,85,206,214,128,21,38,88,213,238,109,134,11,5,33,179,52,20,14,110,87,98,86,183,105,32,11,214,206,2,106,65,129,171,186,249,168,134,215,115,55,173,0,101,169,68,153,64,193,116,18,11,72,11,24,96,178,86,212,45,225,216,121,218,33,212,43,26,104,130,93,228,172,191,4,189,63,12,179,112,122,172,111,218,21,45,175,251,195,6,211,125,53,75,217,214,70,17,5,185,88,122,30,52,56,110,109,31,217,52,53,83,177,84,54,136,183,16,210,218,56,89,71,198,29,35,156,20,121,202,245,4,8,17,6,243,56,28,72,37,177,6,241,90,41,246,135,216,41,81,215,46,108,142,251,37,215,10,16,241,41,48,14,70,204,128,20,247,127,128,149,225,50,20,200,65,208,137,131,78,224,50,81,95,70,152,155,13,187,55,7,122,76,40,82,219,53,26,157,123,81,204,121,202,196,123,243,36,178,197,82,175,42,144,183,154,88,95,29,141,62,242,99,15,251,150,177,204,39,196,147,194,169,169,40,207,229,207,108,17,245,113,4,244,143,220,182,122,122,16,128,111,55,25,98,112,36,153,167,253,155,209,248,61,30,23,35,13,162,95,236,27,148,251,53,83,143,69,186,102,132,232,140,225,156,146,51,112,201,136,14,234,126,81,227,101,23,15,77,55,147,195,143,190,1,32,138,91,247,168,82,141,192,202,173,83,194,39,145,3,6,33,180,216,120,224,92,243,252,23,108,247,21,124,234,81,20,79,58,209,231,226,161,156,194,107,198,143,127,38,108,134,200,69,181,25,98,251,109,187,83,237,232,104,125,193,110,15,148,95,103,82,81,161,116,114,135,35,188,116,160,5,165,185,59,108,171,199,149,231,26,218,97,133,65,1,149,89,182,99,168,43,215,141,218,137,47,74,33,192,42,182,131,24,195,252,181,200,119,151,20,66,243,148,40,220,252,95,96,118,199,41,242,85,148,141,28,154,176,243,70,120,62,41,62,111,98,7,196,33,120,5,190,245,198,53,156,54,153,216,39,29,92,206,36,164,64,55,57,156,114,245,142,23,59,103,230,185,201,53,218,215,99,6,109,235,11,219,112,221,173,165,205,120,49,195,254,182,210,91,12,93,113,96,68,117,105,119,202,106,9,43,237,70,247,85,218,12,120,249,204,240,242,196,39,166,157,212,241,121,154,250,116,116,251,48,87,47,37,159,44,178,82,151,205,39,146,175,193,138,145,111,112,83,86,56,165,207,218,74,107,78,95,220,74,183,5,110,251,198,186,61,210,175,212,88,107,49,236,177,177,190,94,138,182,107,172,251,72,236,110,27,171,115,246,127,99,221,144,124,116,130,223,51,51,10,12,223,51,213,110,115,174,44,213,74,184,236,86,208,103,16,158,180,57,148,216,35,51,207,17,135,27,132,161,149,163,213,225,158,174,119,220,138,102,42,94,12,160,104,108,124,142,180,93,125,197,115,20,204,74,99,76,27,218,119,203,249,143,103,125,77,23,251,183,211,100,77,203,219,233,136,171,130,195,83,175,14,78,193,39,186,189,117,251,114,118,176,3,47,15,105,192,12,158,150,217,77,93,242,201,132,129,82,194,34,140,5,222,60,245,43,208,13,229,226,180,137,133,134,96,24,5,92,119,95,223,47,124,255,245,142,187,154,47,188,222,195,87,124,195,93,158,101,206,185,80,37,205,54,3,104,5,192,155,233,130,207,132,73,252,249,193,140,192,160,37,181,155,238,28,162,131,166,205,215,222,164,44,74,145,216,143,39,147,218,237,192,65,138,59,86,2,51,124,243,72,174,147,134,144,227,217,55,203,227,169,80,137,124,113,214,240,135,235,85,9,183,41,197,87,178,58,64,5,55,240,197,241,230,77,171,149,134,96,101,86,199,105,236,142,131,104,161,244,231,240,251,71,109,121,92,192,119,75,137,175,187,65,40,131,58,12,230,211,198,108,215,246,132,42,172,253,249,9,241,110,219,215,215,171,34,113,70,44,245,55,111,80,205,7,177,9,126,57,167,107,97,154,78,107,254,182,71,236,111,174,22,176,255,160,214,113,62,165,157,182,4,87,21,169,249,1,6,71,80,103,118,94,246,158,35,159,184,74,30,73,21,66,69,194,132,194,233,203,74,24,223,214,19,227,253,222,180,82,241,39,128,177,77,141,124,69,190,183,69,184,82,247,146,46,86,170,194,159,111,191,179,250,41,155,208,50,83,78,118,211,17,219,114,92,140,107,207,255,0,111,41,146,149,94,30,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("a52051c5-8c49-4dbd-ade2-111eba803475"));
		}

		#endregion

	}

	#endregion

}

