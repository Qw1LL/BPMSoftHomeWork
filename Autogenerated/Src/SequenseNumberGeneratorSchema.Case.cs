namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SequenseNumberGeneratorSchema

	/// <exclude/>
	public class SequenseNumberGeneratorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SequenseNumberGeneratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SequenseNumberGeneratorSchema(SequenseNumberGeneratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ad263e4f-8a6d-459c-bd3e-01d2b6f5abec");
			Name = "SequenseNumberGenerator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("677baab4-893e-4898-b508-38190fd135a7");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,85,75,79,219,64,16,62,27,137,255,176,114,46,142,132,54,237,181,60,164,6,34,132,84,32,34,180,61,32,132,54,246,144,88,181,215,238,238,108,32,66,252,247,238,203,175,96,23,90,31,146,157,241,60,190,249,102,198,203,89,14,178,100,49,144,233,252,114,81,60,34,61,45,248,99,186,82,130,97,90,240,253,189,151,253,189,64,201,148,175,200,98,43,17,242,195,90,110,28,4,244,107,233,217,116,224,197,140,99,138,41,72,253,90,27,140,4,172,116,50,114,154,49,41,191,144,5,252,86,192,37,92,169,124,9,226,28,56,104,48,133,176,166,147,201,132,28,73,149,231,76,108,79,188,60,50,143,254,117,7,253,231,15,213,211,136,180,138,48,105,133,184,187,94,202,34,3,132,123,45,148,106,153,165,49,137,13,146,97,32,129,97,165,129,93,112,137,140,163,134,62,23,233,134,33,88,168,111,176,54,96,219,160,26,116,125,167,234,104,144,191,133,30,148,46,31,137,13,4,34,81,216,70,117,96,207,69,17,67,162,4,92,233,86,147,99,18,162,44,31,124,45,208,53,13,93,59,130,17,240,196,213,230,229,118,161,66,197,154,3,83,171,165,202,89,120,218,6,8,139,198,196,18,246,250,33,99,59,27,219,69,188,134,156,17,104,9,7,228,187,4,161,65,112,136,205,112,18,213,17,125,146,160,227,127,220,137,96,166,49,8,118,162,28,239,196,57,108,65,29,98,66,147,90,130,48,19,108,122,94,160,246,132,228,3,93,239,105,240,112,107,125,216,221,170,119,68,87,244,10,208,21,39,253,225,95,10,104,53,114,24,61,121,7,174,107,106,135,252,142,240,127,56,47,1,215,69,242,97,144,61,91,244,14,110,171,17,128,74,112,121,50,224,58,162,71,147,202,164,85,171,95,183,106,151,220,28,87,179,30,108,152,32,220,170,244,132,57,83,58,203,75,220,30,214,175,203,106,53,181,5,135,39,178,208,227,15,73,189,176,81,183,211,7,127,91,236,113,19,53,97,200,126,176,76,193,237,182,132,75,198,217,202,66,136,206,122,244,227,110,10,250,181,44,253,27,29,125,147,38,32,232,57,160,87,69,97,95,136,208,167,174,139,161,63,83,92,207,153,208,168,80,59,181,135,128,182,160,118,237,175,21,150,10,27,175,80,128,84,25,62,108,76,182,240,160,183,40,3,237,194,126,122,99,152,110,77,232,40,188,133,103,12,199,62,133,187,120,34,75,202,114,246,12,177,210,4,107,42,118,138,158,113,169,97,156,77,27,85,52,174,186,24,52,142,116,129,76,224,173,96,92,50,103,229,110,68,106,88,161,23,250,14,177,87,230,55,216,64,70,111,128,37,167,69,158,167,168,55,216,195,9,80,108,171,176,173,242,93,124,136,154,76,149,125,144,62,146,168,49,172,217,145,250,18,85,28,201,9,249,84,227,12,130,122,216,34,55,109,227,62,207,187,207,247,212,242,88,165,208,251,103,255,72,204,48,94,215,209,90,101,223,20,89,182,100,241,175,118,229,53,66,92,139,226,201,11,62,84,203,213,49,208,227,232,76,221,78,249,45,25,250,26,120,93,91,245,250,7,238,8,115,35,182,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ad263e4f-8a6d-459c-bd3e-01d2b6f5abec"));
		}

		#endregion

	}

	#endregion

}

