namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ChangeOrgStructureListenerSchema

	/// <exclude/>
	public class ChangeOrgStructureListenerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ChangeOrgStructureListenerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ChangeOrgStructureListenerSchema(ChangeOrgStructureListenerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("df4f2cb1-a42d-4744-959e-ce99165e9e59");
			Name = "ChangeOrgStructureListener";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("1d281873-5267-4c41-ad3c-10f366cf40b0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,85,193,142,218,48,16,61,103,165,253,7,47,189,4,9,133,251,46,69,202,82,64,72,165,172,22,237,169,234,193,36,67,112,149,140,145,237,208,210,110,255,189,227,56,97,19,8,136,237,165,151,32,219,227,153,247,102,222,51,200,51,208,91,30,1,123,124,154,47,229,218,4,35,137,107,145,228,138,27,33,241,246,230,247,237,141,151,107,129,9,91,238,181,129,236,225,176,30,73,5,205,85,48,70,35,140,0,125,102,59,8,245,30,163,197,22,92,242,107,195,130,25,26,80,107,2,121,246,198,120,7,104,142,79,39,60,50,82,157,194,89,168,100,105,84,30,153,188,32,64,135,31,20,36,84,137,141,82,174,245,61,11,233,136,167,226,23,16,229,48,206,4,190,160,48,51,124,150,41,52,161,21,151,251,253,62,27,8,220,128,18,38,150,17,235,15,105,115,155,175,82,17,177,200,38,188,62,31,187,103,179,130,211,190,32,116,92,204,163,97,208,247,0,119,14,102,35,99,2,252,84,84,115,135,173,112,42,60,59,41,98,54,254,9,81,110,192,127,209,160,104,218,8,81,81,59,111,44,123,236,44,144,80,37,154,113,149,228,153,109,122,151,89,137,120,222,155,126,142,90,28,204,234,171,57,71,158,128,98,178,101,239,35,67,248,193,90,162,253,38,182,174,29,168,231,181,164,8,46,180,218,119,215,254,148,61,4,140,93,27,139,181,219,61,218,60,146,197,104,195,49,129,58,188,207,130,44,129,160,138,232,175,181,134,85,7,254,50,218,64,198,191,144,203,136,93,135,64,217,166,59,60,157,238,183,171,111,29,168,76,21,39,51,196,207,34,217,152,247,36,152,228,24,217,162,51,36,252,111,213,27,50,61,207,143,116,249,200,53,180,84,186,36,74,37,118,220,128,59,221,186,5,211,134,36,212,212,225,213,238,240,93,125,6,197,79,165,59,177,102,254,93,67,124,211,84,174,120,26,110,183,75,48,134,92,79,207,3,242,21,113,207,32,22,252,98,65,246,250,90,36,245,188,187,211,44,52,186,22,109,78,164,58,36,180,195,213,54,207,193,21,158,2,138,69,39,88,18,25,125,119,92,49,110,137,57,254,210,234,190,80,152,123,175,246,193,20,204,224,228,25,168,130,135,190,203,107,157,66,142,208,5,26,130,80,218,209,239,52,173,210,233,149,237,178,232,235,22,42,61,100,193,200,134,177,157,9,47,154,223,119,41,123,12,243,52,45,19,53,24,5,213,104,237,230,224,234,1,15,253,6,148,75,126,189,252,6,150,178,150,59,80,74,196,224,228,182,192,25,82,15,200,61,190,92,125,167,54,48,77,57,65,85,47,93,184,166,127,25,199,216,246,1,170,17,174,72,249,65,237,114,117,11,106,45,116,13,161,222,149,26,237,186,32,23,240,110,157,151,2,127,168,209,63,195,232,19,164,240,175,132,170,187,255,133,207,21,207,47,69,254,5,142,153,106,196,158,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("df4f2cb1-a42d-4744-959e-ce99165e9e59"));
		}

		#endregion

	}

	#endregion

}

