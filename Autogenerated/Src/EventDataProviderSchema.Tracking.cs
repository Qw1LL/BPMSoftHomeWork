namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EventDataProviderSchema

	/// <exclude/>
	public class EventDataProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EventDataProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EventDataProviderSchema(EventDataProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f78aca6a-915e-4355-bb93-f2b476e6895a");
			Name = "EventDataProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("120fd877-7905-4e7f-9414-1956e0c20629");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,84,223,79,227,48,12,126,30,18,255,131,85,94,58,221,180,190,195,168,196,113,48,33,29,186,105,133,103,148,165,238,150,163,77,138,147,12,56,196,255,126,110,178,29,251,117,136,151,170,113,236,207,159,63,219,209,162,65,219,10,137,240,125,114,91,152,202,13,47,141,174,212,220,147,112,202,232,225,29,9,249,168,244,252,248,232,237,248,168,231,45,255,66,241,106,29,54,103,59,103,14,172,107,148,93,148,29,142,81,35,41,185,231,243,83,233,167,15,227,71,74,66,182,178,253,132,112,206,0,112,89,11,107,79,225,106,137,218,253,16,78,76,200,44,85,137,20,156,178,44,131,145,245,77,35,232,53,95,157,87,14,160,116,101,168,9,220,161,34,211,0,97,107,200,129,69,90,42,137,195,117,120,182,17,223,250,89,173,36,200,46,231,126,74,56,133,105,192,40,34,196,54,157,30,203,194,223,127,196,175,21,214,37,51,159,144,90,10,135,241,178,141,7,144,44,13,83,113,212,21,255,80,33,150,19,225,22,133,175,42,245,2,231,144,100,162,85,89,32,144,117,151,73,212,164,119,130,186,140,240,219,185,184,83,140,229,165,51,212,101,12,85,68,143,93,133,130,97,195,29,76,5,34,22,220,41,178,47,73,180,180,130,68,3,154,71,228,60,241,172,32,35,232,216,225,36,191,97,48,161,121,110,24,234,126,235,110,56,202,66,96,192,89,105,187,167,106,186,29,3,219,240,125,232,98,123,189,83,152,9,139,233,238,229,27,188,127,174,204,45,186,133,41,191,34,202,20,157,39,109,187,214,56,33,29,184,213,188,67,215,128,175,106,99,209,90,78,123,83,218,36,47,226,63,112,145,218,169,74,33,89,224,145,132,57,186,136,185,169,206,30,146,169,42,139,46,201,167,40,13,149,22,226,249,243,24,105,188,222,8,9,199,253,8,138,133,230,191,102,191,89,70,22,2,121,30,9,171,243,36,244,230,154,169,109,246,103,202,175,2,207,11,38,89,14,207,11,37,23,81,33,197,82,137,186,6,205,238,88,242,114,133,156,156,109,13,191,219,243,255,225,194,24,195,93,122,115,165,125,131,36,102,53,142,198,94,149,57,204,218,198,58,95,42,179,126,123,88,215,193,122,107,162,32,3,222,115,23,43,229,105,8,179,178,20,4,158,106,94,163,184,173,247,252,255,109,119,201,206,130,107,228,10,5,15,207,157,121,68,173,254,176,143,177,110,138,79,30,173,27,125,74,60,79,57,203,128,5,120,14,88,49,121,111,69,43,30,2,175,213,255,161,98,152,227,5,145,120,237,158,218,37,146,187,168,235,244,144,223,240,206,4,191,180,63,0,126,31,114,120,97,75,17,116,72,251,253,128,255,222,15,37,29,94,135,104,221,52,190,255,5,27,144,180,6,239,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f78aca6a-915e-4355-bb93-f2b476e6895a"));
		}

		#endregion

	}

	#endregion

}

