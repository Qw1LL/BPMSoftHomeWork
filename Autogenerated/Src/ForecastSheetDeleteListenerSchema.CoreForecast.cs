namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastSheetDeleteListenerSchema

	/// <exclude/>
	public class ForecastSheetDeleteListenerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastSheetDeleteListenerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastSheetDeleteListenerSchema(ForecastSheetDeleteListenerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("bf4ad992-435a-4079-bea5-e2728964b9c8");
			Name = "ForecastSheetDeleteListener";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,149,75,111,219,48,12,199,207,46,208,239,32,120,23,27,40,148,123,95,64,157,71,23,96,217,138,165,221,14,195,14,138,205,36,26,108,41,147,228,116,193,208,239,94,90,180,157,71,147,166,61,12,187,56,182,69,254,73,254,72,51,74,20,96,23,34,5,150,220,141,198,122,234,120,87,171,169,156,149,70,56,169,213,233,201,223,211,147,160,180,82,205,216,120,101,29,20,23,237,243,218,193,0,239,37,7,14,250,202,73,39,193,30,57,230,253,37,40,87,89,161,221,7,3,51,12,206,186,185,176,246,156,13,208,48,21,214,141,231,0,174,7,57,56,248,36,49,23,5,198,155,255,240,34,43,175,208,28,68,227,116,14,133,248,140,229,177,43,22,110,73,132,241,79,244,90,148,147,92,166,44,173,98,188,22,130,157,179,68,88,216,19,3,69,144,14,94,219,132,71,224,230,58,195,148,239,140,92,10,7,116,186,160,7,182,212,50,99,36,222,196,251,170,31,35,82,102,224,127,206,216,109,137,86,211,205,124,134,89,204,170,54,4,193,82,24,102,96,10,6,84,10,84,33,187,242,39,1,185,243,7,11,6,59,168,32,173,218,71,120,87,100,57,18,74,204,192,240,129,84,217,80,89,39,80,35,89,61,12,179,136,20,26,137,91,112,247,171,5,100,93,157,151,133,250,38,242,18,46,171,164,174,163,22,35,201,14,85,23,242,28,5,194,56,174,218,27,4,114,202,162,23,249,93,49,85,230,121,83,66,96,192,149,70,145,253,147,191,18,18,150,209,15,154,195,99,141,41,218,91,85,204,7,70,23,235,108,16,98,24,243,239,115,12,27,197,188,255,7,219,99,235,154,42,169,49,74,165,238,144,20,85,25,133,85,21,252,198,214,55,62,192,78,37,188,26,166,38,78,136,65,43,203,26,29,31,218,254,239,82,228,219,73,157,177,90,86,101,81,88,183,18,31,27,91,10,205,239,132,65,97,135,51,187,219,245,56,102,194,214,40,8,24,49,194,26,33,45,17,15,97,127,58,56,102,31,17,133,54,171,170,77,246,61,115,246,238,142,16,134,157,190,108,68,111,64,53,244,90,24,187,252,142,51,121,43,146,32,120,29,10,54,232,255,49,241,35,251,42,146,127,64,196,111,42,80,25,45,171,67,155,203,175,69,58,236,116,58,151,82,97,122,210,101,58,237,92,123,160,180,54,245,18,140,145,89,13,246,139,242,241,113,187,71,122,242,11,235,103,22,227,128,57,99,4,56,129,42,105,191,60,111,204,204,50,104,160,78,112,179,242,13,239,198,13,234,133,178,213,31,132,94,55,44,38,187,139,118,41,238,48,65,203,227,203,172,98,77,10,244,191,20,245,18,66,166,13,203,38,237,109,43,245,98,181,218,210,64,47,89,191,138,226,118,201,173,253,249,216,9,227,238,141,80,86,212,86,20,180,30,168,173,79,180,153,195,221,22,239,243,240,243,251,38,135,205,63,155,35,14,27,121,119,117,81,200,125,137,251,111,107,255,56,209,219,237,151,248,238,25,207,61,52,99,101,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("bf4ad992-435a-4079-bea5-e2728964b9c8"));
		}

		#endregion

	}

	#endregion

}

