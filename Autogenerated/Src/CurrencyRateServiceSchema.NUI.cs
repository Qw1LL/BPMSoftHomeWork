namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CurrencyRateServiceSchema

	/// <exclude/>
	public class CurrencyRateServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CurrencyRateServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CurrencyRateServiceSchema(CurrencyRateServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("73d5b6d7-88a9-43cb-9442-97c3d7b2d7f3");
			Name = "CurrencyRateService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,85,77,111,218,64,16,61,59,82,254,195,138,94,64,74,205,157,18,42,146,42,145,171,210,70,208,40,135,40,135,197,30,147,85,236,93,119,103,13,178,170,254,247,206,238,218,193,6,135,168,82,79,176,243,61,111,222,140,37,207,1,11,30,3,187,186,91,172,84,106,194,107,37,83,177,41,53,55,66,201,243,179,223,231,103,65,137,66,110,216,170,66,3,249,167,131,55,217,103,25,196,214,24,195,91,144,160,69,124,100,179,2,189,21,49,44,84,2,217,73,101,56,167,72,91,151,250,180,221,3,172,247,6,77,233,36,164,114,242,188,237,188,111,75,67,120,195,99,163,180,0,36,61,89,124,208,176,161,76,44,146,6,116,74,32,76,88,116,93,106,13,50,174,150,220,64,157,209,217,142,199,99,54,197,50,207,185,174,102,245,251,11,96,172,197,26,144,9,153,250,8,44,85,154,197,117,12,70,32,2,67,31,37,108,130,140,91,81,138,114,157,137,152,220,235,2,222,200,31,216,41,4,223,4,154,105,91,31,201,84,205,216,45,24,66,173,228,89,91,133,195,219,82,36,159,95,75,137,18,118,201,100,153,101,35,11,205,31,223,62,200,196,35,208,65,35,206,56,226,132,253,11,16,119,90,109,69,66,56,236,96,253,177,238,215,33,177,83,250,133,237,132,121,238,98,130,189,96,60,214,105,136,129,70,211,164,158,172,108,142,197,119,48,52,213,130,88,177,22,153,48,213,18,126,149,66,67,14,210,224,176,253,176,212,160,54,223,113,177,86,97,45,72,70,79,251,41,184,198,251,250,102,19,118,197,177,121,93,156,24,146,29,83,131,35,181,129,70,151,150,113,232,53,117,158,30,239,225,136,185,17,7,29,29,121,242,141,237,232,218,86,230,201,91,209,146,117,89,80,155,205,134,46,64,32,97,215,78,61,215,155,210,182,61,28,148,52,24,82,72,191,172,131,11,118,223,17,140,28,51,106,106,156,42,53,234,171,17,253,239,233,54,106,163,118,158,3,14,190,130,71,140,42,64,27,90,213,9,187,115,181,116,234,234,173,161,79,230,203,217,128,113,73,3,172,255,188,147,125,1,230,89,37,7,169,15,137,239,4,52,12,100,220,173,95,15,197,143,57,238,37,5,215,60,103,146,110,239,229,96,191,161,131,89,211,1,139,146,233,216,25,237,125,52,152,82,75,156,217,43,192,84,122,152,109,58,110,12,172,199,227,15,66,207,157,209,246,50,5,143,116,33,35,185,85,47,48,188,215,226,39,228,69,102,47,212,37,27,244,31,17,34,201,146,62,15,196,38,184,81,58,231,134,76,41,196,2,16,9,92,47,10,191,162,146,23,14,221,43,149,84,43,83,101,208,49,123,149,134,15,154,23,5,36,118,247,0,141,91,189,102,160,255,231,182,213,227,126,35,152,3,202,110,211,49,79,236,82,245,37,218,167,240,219,17,120,144,125,168,19,76,114,82,214,22,146,228,47,141,50,220,151,108,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("73d5b6d7-88a9-43cb-9442-97c3d7b2d7f3"));
		}

		#endregion

	}

	#endregion

}

