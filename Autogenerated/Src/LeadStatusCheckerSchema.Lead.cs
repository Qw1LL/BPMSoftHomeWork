namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: LeadStatusCheckerSchema

	/// <exclude/>
	public class LeadStatusCheckerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LeadStatusCheckerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LeadStatusCheckerSchema(LeadStatusCheckerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b701b48f-b9bc-46c6-93b5-8a978c339785");
			Name = "LeadStatusChecker";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b424f2c1-869b-44e8-aaf1-c9a818421e06");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,125,83,77,111,218,64,16,61,59,82,254,195,200,185,24,169,50,247,6,56,64,10,178,4,85,42,210,92,171,205,122,12,171,174,215,100,63,90,89,81,254,123,103,189,6,108,199,233,113,199,111,222,123,243,102,172,88,137,230,196,56,194,242,113,183,175,10,155,174,42,85,136,131,211,204,138,74,221,222,188,221,222,68,206,8,117,128,125,109,44,150,247,131,55,225,165,68,238,193,38,221,160,66,45,248,7,204,86,168,215,107,241,170,164,113,188,154,62,44,63,249,240,77,89,97,5,26,250,76,128,59,141,7,18,134,149,100,198,124,133,45,178,124,111,153,117,102,117,68,254,27,181,7,17,236,228,94,164,224,192,61,106,12,20,249,33,47,100,107,129,50,39,182,71,45,254,48,139,13,67,116,10,15,208,212,93,41,89,195,79,131,154,162,82,97,116,248,229,122,239,96,47,186,67,149,7,214,246,125,246,75,97,89,237,184,173,52,233,52,238,90,153,224,244,131,199,100,32,215,87,155,64,51,64,100,143,194,164,3,39,48,31,128,125,176,209,251,255,253,237,208,30,171,38,131,142,183,233,116,10,51,227,202,146,233,122,113,46,100,42,23,156,130,49,32,10,144,100,27,132,130,66,40,38,193,52,3,164,151,214,233,176,119,118,98,154,149,160,232,4,231,177,188,140,156,229,241,194,7,208,18,128,200,145,150,94,8,212,233,108,218,180,92,25,52,90,167,149,89,60,105,135,222,193,185,197,4,15,212,112,70,116,210,125,169,42,9,153,241,26,153,90,123,92,16,78,54,78,228,208,53,114,14,182,185,186,122,207,143,88,50,120,117,76,138,162,14,152,182,54,31,30,64,218,109,217,49,197,14,100,127,131,54,163,197,51,197,113,89,127,167,177,147,248,71,151,44,158,220,119,228,250,66,109,109,62,38,159,174,232,44,45,6,72,50,112,50,9,156,35,100,41,93,184,95,8,253,193,174,84,207,76,82,134,243,222,252,159,183,174,209,242,227,90,87,229,195,50,81,248,23,182,194,216,25,221,52,253,176,11,120,131,56,51,77,176,49,188,127,129,130,73,131,173,141,176,142,177,209,124,58,79,245,9,243,142,157,153,95,213,34,185,176,5,146,145,227,109,107,253,123,166,218,63,124,202,86,118,223,4,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b701b48f-b9bc-46c6-93b5-8a978c339785"));
		}

		#endregion

	}

	#endregion

}

