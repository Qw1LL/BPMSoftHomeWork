namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastHistoryCellRepositorySchema

	/// <exclude/>
	public class ForecastHistoryCellRepositorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastHistoryCellRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastHistoryCellRepositorySchema(ForecastHistoryCellRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("34a2b5e5-c1f7-89c1-a01b-7b476cc8a544");
			Name = "ForecastHistoryCellRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,88,75,111,227,54,16,62,107,129,253,15,132,247,34,3,134,156,246,82,32,177,93,108,156,71,13,108,82,55,110,247,82,20,5,87,26,199,196,74,148,75,82,217,24,139,252,247,14,95,54,37,89,118,220,244,18,139,20,231,155,247,55,84,56,45,64,174,105,10,228,114,126,183,40,151,42,153,150,124,201,30,43,65,21,43,121,114,83,10,72,169,84,159,127,124,255,238,251,251,119,81,37,25,127,36,139,141,84,80,92,52,214,40,154,231,144,106,57,153,220,2,7,193,210,214,153,43,170,104,107,243,19,227,255,236,54,119,150,20,69,201,247,237,11,216,191,155,92,93,118,188,184,161,169,42,5,3,137,239,241,196,7,1,143,104,38,153,230,84,202,115,226,189,252,133,73,60,181,153,66,158,63,192,186,148,76,175,140,192,159,87,176,164,85,174,46,25,207,16,60,86,155,53,148,203,120,118,11,202,11,215,165,250,3,114,143,177,37,99,210,115,168,189,254,95,7,128,102,92,130,56,17,107,93,125,201,89,74,82,237,196,97,31,200,57,233,54,117,64,14,106,199,215,11,78,215,114,85,42,212,169,139,96,23,62,204,180,18,149,14,45,70,113,110,204,49,225,242,166,29,52,42,254,3,149,34,4,183,53,67,170,218,178,79,140,170,168,190,155,76,87,144,126,253,40,30,171,2,184,186,175,242,60,230,24,26,140,96,67,186,175,11,33,138,26,42,198,13,37,230,208,139,53,249,3,240,204,250,165,87,161,155,115,81,174,49,60,88,61,232,164,96,79,84,129,243,210,46,200,116,85,241,175,210,118,78,125,49,158,16,14,223,106,123,177,247,204,6,29,155,166,42,56,190,171,184,66,251,126,26,152,119,119,244,121,78,5,122,166,64,216,119,32,230,32,126,171,0,163,168,193,240,232,15,103,103,103,198,254,139,182,3,221,230,151,10,93,135,204,59,224,150,164,17,168,198,242,59,121,4,117,65,94,234,110,207,246,164,215,88,120,89,177,60,3,65,254,94,30,62,112,209,180,226,40,226,177,247,54,178,104,172,123,138,216,146,196,199,204,32,227,49,225,88,74,62,49,81,116,92,194,82,135,165,149,13,178,157,26,29,179,125,18,59,240,200,84,196,174,117,124,53,199,189,122,113,246,6,141,52,248,162,214,21,171,127,4,168,74,240,215,68,217,203,188,156,80,41,65,55,15,135,67,50,146,85,81,80,177,153,248,141,223,87,64,188,102,34,29,67,144,12,249,61,217,202,12,67,161,6,39,120,82,209,19,129,212,22,174,218,100,80,114,93,22,223,129,90,149,89,103,95,98,36,200,84,0,62,235,199,120,166,225,31,128,234,12,10,243,227,83,238,66,105,50,163,133,92,33,92,115,197,212,102,150,97,190,237,121,157,105,219,177,159,105,94,193,232,182,98,217,36,222,147,121,147,95,202,149,76,44,134,21,210,52,222,183,29,30,217,157,183,97,111,25,187,133,142,100,193,202,236,109,232,22,163,141,253,80,126,251,127,204,70,160,54,186,65,233,68,207,32,101,5,205,143,40,48,103,3,104,219,1,93,108,223,81,80,29,76,249,196,132,170,104,78,158,74,150,145,59,28,229,204,17,185,174,48,237,60,145,43,0,53,203,112,112,94,115,236,108,65,191,228,48,210,175,39,36,197,191,210,23,221,19,21,132,25,89,116,87,151,158,5,106,204,197,126,50,227,170,60,236,175,94,45,210,21,20,212,184,107,59,94,55,39,77,87,36,214,122,180,98,84,86,55,192,88,176,118,149,226,227,174,79,184,212,207,178,100,38,175,139,181,218,224,208,250,153,216,128,234,27,162,84,177,37,204,115,191,185,157,86,113,77,222,51,150,117,211,230,69,198,54,31,81,148,44,64,29,118,108,161,67,185,75,228,160,173,206,5,187,255,122,204,102,89,15,234,33,120,61,80,187,251,6,29,225,240,189,126,130,149,77,218,232,130,246,20,117,2,180,39,219,131,224,33,35,111,37,78,82,211,104,194,46,7,108,208,79,143,122,141,60,186,192,13,85,249,185,105,199,166,190,17,184,114,12,136,69,98,165,223,151,202,21,251,182,65,220,193,235,103,72,43,5,113,8,244,106,34,169,15,210,17,227,43,44,55,149,149,41,25,134,115,177,77,22,154,250,116,187,198,166,11,182,195,214,172,6,228,134,229,232,166,187,103,46,131,133,55,190,118,190,251,226,92,59,230,67,21,226,29,16,13,181,238,147,124,128,180,20,216,88,178,141,241,171,176,177,222,3,181,19,243,160,181,98,236,52,39,60,181,149,4,253,73,106,105,207,61,143,143,221,34,147,221,149,65,122,76,43,91,15,86,162,57,190,163,79,6,245,148,88,99,60,17,75,199,247,159,80,191,205,181,175,172,192,78,95,116,246,190,18,199,254,194,130,159,20,174,56,205,225,228,99,150,197,193,29,199,29,243,149,234,126,221,253,198,72,132,99,112,239,205,206,142,33,162,240,130,103,85,236,191,207,153,157,181,238,55,162,19,48,238,213,130,211,155,248,40,219,121,136,195,103,89,142,134,230,252,126,113,173,171,55,49,81,111,29,118,61,98,102,238,110,220,118,116,198,145,177,251,223,139,233,45,29,165,105,199,70,19,137,38,168,255,29,215,8,147,163,144,170,66,71,90,78,161,87,230,171,50,168,231,235,103,5,92,186,255,191,40,251,209,105,149,34,63,6,159,160,123,47,8,250,189,15,190,131,222,154,214,188,230,180,219,96,39,126,156,35,237,110,125,19,247,254,5,201,253,181,67,140,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("34a2b5e5-c1f7-89c1-a01b-7b476cc8a544"));
		}

		#endregion

	}

	#endregion

}

