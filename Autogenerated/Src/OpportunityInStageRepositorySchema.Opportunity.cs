namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: OpportunityInStageRepositorySchema

	/// <exclude/>
	public class OpportunityInStageRepositorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public OpportunityInStageRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public OpportunityInStageRepositorySchema(OpportunityInStageRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5a93b7ef-16ed-4f65-99cd-37a6e55a72dc");
			Name = "OpportunityInStageRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5ef32b22-5119-483b-953d-678c3fffad13");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,86,77,111,227,54,16,61,107,129,253,15,3,245,98,3,129,124,79,28,3,217,108,54,117,209,214,65,157,118,207,180,52,182,89,72,164,75,82,73,141,32,255,189,67,82,159,150,232,236,6,237,161,151,196,34,103,30,103,222,204,27,82,176,2,245,129,165,8,159,30,126,89,203,173,73,110,165,216,242,93,169,152,225,82,124,252,240,242,241,67,84,106,46,118,176,62,106,131,197,213,201,55,217,231,57,166,214,88,39,247,40,80,241,180,181,105,65,139,66,138,177,117,133,227,171,201,157,48,220,112,212,129,237,207,159,104,131,182,126,80,184,163,179,225,54,103,90,95,194,234,112,144,202,148,130,155,163,3,56,46,197,218,176,29,126,102,134,57,251,217,108,6,115,93,22,5,83,199,69,245,221,113,2,46,64,91,7,200,200,3,82,41,140,98,169,73,106,207,217,137,235,92,35,178,92,75,72,21,110,175,227,81,18,147,65,36,49,204,44,192,161,220,228,60,133,212,134,222,13,162,99,9,151,80,123,255,200,181,145,196,46,203,221,46,249,83,109,232,239,171,231,1,69,230,169,232,209,178,20,6,213,150,234,123,9,203,225,9,191,225,65,106,78,168,199,32,55,13,0,200,45,200,49,162,84,3,82,179,244,160,228,19,207,80,67,129,102,47,51,216,74,5,114,99,24,23,182,140,163,32,100,78,105,110,57,42,13,207,220,236,97,223,100,11,219,156,237,194,5,48,199,3,30,152,98,5,8,234,229,235,248,113,156,200,120,241,184,71,176,198,54,17,67,191,101,168,234,201,124,214,128,126,87,157,151,189,66,183,228,190,4,98,122,237,247,1,111,168,62,91,170,121,0,109,65,189,18,138,32,232,67,167,71,207,123,84,8,1,11,2,29,223,240,253,23,13,154,198,45,220,163,209,239,47,244,176,210,126,165,91,230,14,248,50,243,197,237,157,215,28,67,213,108,42,57,132,17,248,236,50,250,181,44,54,168,60,14,173,85,193,10,183,58,68,80,104,74,37,244,98,62,171,127,217,45,34,191,44,80,177,77,142,243,251,146,103,11,75,67,171,218,33,141,19,107,213,13,123,153,93,216,46,128,126,84,211,171,183,84,62,28,126,223,46,112,155,113,43,97,175,213,160,50,254,189,49,216,81,199,184,245,121,201,124,187,38,207,145,242,174,163,223,152,218,45,122,103,118,159,202,49,160,198,11,215,70,103,197,31,214,177,83,99,21,220,57,136,201,239,26,21,37,44,252,173,13,101,239,115,106,81,162,75,216,48,141,147,254,214,5,196,67,220,184,191,26,79,193,197,225,219,53,58,40,105,200,25,169,203,159,80,41,82,37,60,73,234,249,47,60,207,61,55,95,148,44,86,155,63,201,104,226,23,192,10,215,28,47,66,23,34,167,71,71,117,72,100,131,76,70,177,106,16,103,109,245,19,69,126,41,89,163,161,39,75,89,136,63,88,94,226,36,110,5,26,123,243,100,169,219,181,243,190,171,103,122,239,208,248,169,28,171,79,239,19,102,32,144,216,173,66,102,208,199,111,51,241,57,245,89,169,19,127,98,202,29,9,215,174,80,73,192,183,114,242,57,12,114,35,231,42,47,154,83,143,116,227,101,157,228,230,27,41,243,69,143,158,46,78,149,234,121,8,55,4,91,150,42,127,63,50,93,248,93,162,194,247,72,231,134,120,235,74,249,95,221,30,171,247,220,143,253,43,167,146,251,127,118,243,116,218,77,72,67,85,229,153,219,94,163,125,243,83,245,39,254,215,212,165,237,127,159,204,23,63,80,162,196,55,198,36,150,92,219,153,97,251,161,218,177,13,59,25,27,45,211,228,70,123,135,218,116,73,168,234,39,201,69,207,190,103,77,198,201,202,158,211,28,67,77,127,247,87,201,242,230,108,103,223,9,224,171,125,0,53,187,221,64,186,222,62,129,228,193,22,19,233,165,54,233,209,55,173,193,110,68,86,31,94,181,133,133,184,119,2,85,43,21,192,58,225,189,146,138,229,93,161,46,115,75,181,101,248,103,170,105,37,171,202,100,164,44,201,221,223,152,150,134,70,62,203,8,154,78,166,127,112,189,128,151,10,44,185,201,178,106,217,234,118,68,178,54,241,233,21,188,246,37,235,189,107,209,142,60,73,94,255,1,70,205,144,30,79,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5a93b7ef-16ed-4f65-99cd-37a6e55a72dc"));
		}

		#endregion

	}

	#endregion

}

