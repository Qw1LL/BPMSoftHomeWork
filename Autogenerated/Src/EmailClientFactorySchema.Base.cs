namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EmailClientFactorySchema

	/// <exclude/>
	public class EmailClientFactorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EmailClientFactorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EmailClientFactorySchema(EmailClientFactorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("bb18ef6c-25c9-43e3-b6da-de0755b0e432");
			Name = "EmailClientFactory";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("a99d7388-fb0e-4870-87fc-76975bec5847");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,88,77,111,219,56,16,61,171,64,255,3,215,5,10,25,240,218,247,110,226,34,77,155,93,31,178,9,234,246,180,232,129,145,40,155,11,137,52,40,202,65,176,200,127,239,240,67,22,73,73,182,236,58,40,22,232,81,195,199,153,225,204,227,204,136,12,23,164,220,224,132,160,15,247,183,75,158,201,233,45,166,249,116,73,88,74,4,122,253,234,191,215,175,162,170,164,108,181,91,191,230,44,163,171,74,96,73,57,251,163,99,89,144,110,233,244,6,39,146,11,74,202,102,253,227,151,59,116,137,62,21,96,19,244,74,1,136,41,200,0,0,144,55,130,172,192,6,186,206,113,89,190,179,168,156,18,38,141,166,39,141,154,205,102,232,162,172,138,2,139,167,185,253,214,80,148,104,44,202,12,24,209,98,147,147,2,36,218,243,105,189,117,230,236,253,231,35,201,112,149,203,15,148,165,224,94,44,159,54,132,103,241,162,109,122,60,254,6,248,77,245,144,211,4,12,129,131,29,254,161,119,168,99,43,130,152,194,222,221,241,110,104,78,82,56,223,189,160,91,44,137,89,220,8,46,73,34,73,138,4,193,41,103,249,19,250,90,18,1,65,98,32,86,219,252,79,19,177,232,13,228,205,168,245,109,0,176,148,162,82,246,149,37,237,182,65,120,225,155,42,192,212,11,137,1,108,176,192,5,98,64,150,203,81,229,25,30,205,175,24,162,160,29,51,32,17,207,144,92,19,164,32,40,217,97,64,163,86,160,245,217,152,181,227,18,7,7,244,237,140,85,216,162,40,10,64,151,1,76,81,43,122,222,31,140,91,34,215,188,21,241,144,71,90,240,39,145,32,36,4,37,130,100,151,163,197,178,144,27,227,244,104,54,111,142,221,166,86,155,91,237,64,130,206,20,246,80,156,151,163,185,99,5,46,192,244,218,89,3,75,14,212,11,166,214,41,136,172,4,43,231,199,59,122,49,171,247,26,206,233,112,32,103,179,10,64,243,21,243,135,127,33,204,174,55,144,0,86,229,121,157,157,45,22,65,66,174,196,74,97,200,163,203,65,16,86,202,139,56,36,211,36,160,245,88,231,51,162,25,138,61,163,190,213,200,156,194,20,10,203,166,41,120,126,225,156,100,30,183,252,178,202,159,119,158,59,38,140,219,160,195,73,68,215,1,156,45,86,221,105,190,76,2,227,99,151,200,157,212,4,199,84,178,156,164,119,248,167,146,159,9,94,120,4,58,133,158,78,24,144,97,193,32,30,246,184,164,248,200,160,233,244,16,176,99,215,128,84,180,201,89,243,131,102,30,123,104,137,130,43,182,35,146,98,129,46,76,30,195,193,218,150,8,249,133,223,250,75,158,86,220,214,106,8,81,51,162,247,14,4,6,225,18,4,18,143,168,135,180,185,105,243,88,165,60,108,41,221,203,48,115,108,180,191,52,73,238,2,130,8,185,197,231,5,202,226,78,245,16,46,118,184,230,151,213,46,42,6,155,250,169,16,120,215,69,67,39,115,161,90,75,191,191,120,41,129,111,174,91,75,34,182,52,33,95,69,62,49,152,123,46,66,140,18,217,85,85,62,255,134,48,6,136,90,236,160,238,161,62,61,114,145,134,186,172,184,65,46,203,188,173,13,132,13,226,238,170,146,235,54,70,139,45,202,12,148,186,233,95,165,208,149,97,94,10,207,25,2,12,231,135,54,244,148,235,134,110,167,166,14,86,127,54,217,69,9,164,15,83,230,181,117,103,24,209,180,208,243,156,67,174,22,95,107,170,92,159,160,204,167,89,61,230,185,219,116,177,51,154,29,105,220,148,51,20,255,230,247,73,213,97,22,229,13,116,132,74,144,79,12,63,192,72,25,143,238,242,84,239,95,48,73,86,102,96,31,141,77,62,162,183,111,209,81,58,84,126,70,227,195,29,215,113,120,30,159,220,246,59,43,30,116,252,222,154,117,158,236,162,8,29,168,71,189,195,110,231,128,182,211,119,30,190,40,117,71,49,230,64,65,250,255,16,201,218,58,153,79,147,67,10,122,187,166,61,230,79,34,100,116,28,29,247,119,203,61,68,253,153,101,109,64,231,252,69,212,29,81,73,123,90,60,141,173,135,155,105,223,43,65,45,168,41,142,25,34,238,131,139,29,196,229,26,203,230,135,83,113,69,18,1,143,49,100,15,173,106,213,176,83,149,214,114,67,18,154,81,224,209,6,38,35,156,35,108,103,7,91,122,75,61,52,28,186,49,101,107,180,24,205,237,3,23,249,93,59,110,213,246,95,136,69,125,201,250,93,15,175,128,121,230,216,82,33,43,112,220,187,7,230,215,205,189,3,80,144,212,115,88,219,211,96,118,236,27,12,222,191,15,254,212,15,79,247,117,246,188,212,169,7,47,148,113,225,68,94,175,255,72,136,237,254,32,178,238,110,186,98,240,62,248,153,174,214,18,246,221,228,120,101,201,3,175,112,9,68,170,68,143,107,96,37,40,131,159,13,3,70,66,163,135,61,134,4,165,171,175,104,157,39,99,19,244,192,121,142,220,51,5,73,236,80,214,206,251,224,252,189,196,237,75,18,248,3,80,199,131,120,55,76,104,30,244,144,14,58,1,141,42,3,71,188,34,52,26,6,245,161,69,119,111,59,231,205,27,246,207,214,125,239,60,124,235,10,182,158,134,126,101,179,124,233,108,14,255,11,63,103,70,131,86,106,164,190,240,249,59,15,205,47,163,105,25,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("bb18ef6c-25c9-43e3-b6da-de0755b0e432"));
		}

		#endregion

	}

	#endregion

}

