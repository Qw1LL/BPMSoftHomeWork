namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DelayedNotifyingSchema

	/// <exclude/>
	public class DelayedNotifyingSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DelayedNotifyingSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DelayedNotifyingSchema(DelayedNotifyingSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("40621076-0161-469d-a877-c66a3467d0cf");
			Name = "DelayedNotifying";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("33bac096-c819-4c57-86af-fe71bbb0cb56");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,87,91,111,219,54,20,126,118,129,254,7,78,125,81,0,67,222,94,115,113,145,58,78,144,161,73,211,216,217,30,182,97,96,164,99,155,157,68,58,36,229,212,8,252,223,119,120,177,37,74,190,181,47,73,72,157,243,157,251,119,24,78,11,80,115,154,2,249,244,112,55,18,19,157,12,4,159,176,105,41,169,102,130,191,127,247,246,254,93,167,84,140,79,201,104,169,52,20,103,141,51,202,231,57,164,70,88,37,55,192,65,178,180,37,243,153,241,151,234,114,32,138,66,240,250,89,66,120,74,134,92,51,205,64,53,145,70,160,53,158,20,185,112,114,129,179,9,202,172,5,80,17,85,63,72,152,226,7,50,200,169,82,228,148,92,65,78,151,144,221,11,205,38,75,20,179,66,189,94,143,156,171,178,40,168,92,246,253,249,17,230,18,20,112,173,8,37,153,211,34,220,168,177,212,218,34,223,196,115,178,86,238,213,180,231,229,115,206,82,146,90,139,77,123,232,194,237,239,226,121,248,29,210,82,11,137,226,152,94,252,89,57,138,89,212,212,152,61,37,15,146,45,168,6,39,48,119,7,146,26,1,162,180,52,104,67,41,133,188,22,178,160,26,19,18,189,253,186,250,155,191,253,182,138,92,240,157,15,192,51,135,27,26,185,102,144,103,59,45,120,236,127,83,170,224,54,195,234,150,5,191,199,46,57,0,106,61,151,101,138,97,89,104,155,6,143,236,82,210,76,70,124,66,76,115,117,86,251,129,31,164,152,131,52,205,208,128,109,214,205,94,220,81,78,167,64,160,160,44,39,88,192,12,164,74,214,31,153,77,46,246,186,152,16,61,3,212,6,204,168,132,201,69,52,52,10,119,52,149,66,57,8,121,77,77,44,203,168,215,119,197,220,152,172,87,123,29,219,78,117,239,208,230,248,70,166,160,207,208,51,125,118,40,240,59,208,51,177,187,78,11,193,50,114,153,101,245,180,250,230,116,69,83,177,157,162,229,40,157,97,58,190,150,128,230,65,189,248,172,119,90,5,198,22,194,207,9,66,186,187,56,26,160,68,114,155,69,39,137,111,0,84,107,136,216,192,199,80,204,115,244,201,136,110,149,186,76,117,73,243,17,6,122,133,98,187,132,148,130,226,57,95,126,69,81,12,5,50,159,58,99,123,135,138,29,0,255,109,117,116,122,174,89,174,177,45,246,167,103,65,37,153,56,65,76,12,135,215,191,254,241,95,172,19,3,9,104,197,33,253,201,244,236,129,74,116,211,194,186,75,36,185,57,149,76,9,62,94,206,33,249,12,74,125,145,195,23,140,173,75,162,77,38,186,196,252,26,179,2,146,39,157,222,139,215,147,238,118,27,219,81,111,213,125,153,27,192,102,130,127,20,69,104,15,244,243,16,78,223,87,196,234,174,170,154,249,148,155,218,61,82,62,133,216,167,54,40,221,49,131,32,52,238,26,200,246,48,192,13,104,83,71,162,69,64,216,21,11,132,3,108,111,48,20,90,16,142,21,188,136,74,101,162,227,220,237,180,168,63,70,162,48,119,134,122,253,101,114,222,179,26,142,1,214,62,145,5,147,166,10,164,221,87,232,211,150,62,28,170,151,248,41,176,102,13,85,199,122,47,154,144,108,31,182,225,227,80,43,169,11,248,25,194,202,108,113,160,62,85,200,49,38,39,22,208,141,23,22,245,50,127,165,102,167,154,5,143,214,145,223,61,11,236,231,29,51,70,251,228,214,3,88,201,73,208,165,228,38,200,122,67,108,173,175,233,208,160,178,199,22,182,174,19,245,43,127,208,172,77,88,80,213,150,182,219,37,81,223,152,199,102,176,11,230,64,31,88,10,50,242,245,216,61,235,4,17,212,235,236,88,217,148,186,30,34,54,144,153,51,79,124,127,208,188,132,243,155,146,101,253,184,69,227,62,163,6,75,111,120,249,120,188,93,140,110,240,138,138,144,143,1,116,47,137,254,113,204,174,205,114,116,148,83,51,133,102,194,5,106,12,125,90,26,83,70,57,174,121,228,113,58,254,42,49,137,183,177,196,46,67,221,90,58,214,178,65,8,248,116,172,121,223,90,90,109,170,118,32,43,44,153,78,103,36,30,126,79,97,110,167,24,214,5,117,147,107,40,17,3,113,233,72,220,123,45,174,189,221,186,4,146,59,220,15,232,182,249,115,164,105,250,223,88,226,155,252,40,55,29,227,162,162,249,189,241,105,194,56,205,243,77,74,67,4,186,128,120,129,165,200,48,160,71,120,41,153,132,236,148,76,104,174,214,38,87,63,70,203,135,94,101,110,0,240,5,135,28,138,209,225,243,246,117,6,156,48,77,152,34,218,164,244,39,201,249,105,15,49,183,148,231,155,29,29,245,171,125,29,14,177,123,206,5,19,236,94,235,176,159,170,187,228,246,138,217,191,208,119,223,249,93,34,158,191,225,231,62,169,44,183,41,125,247,110,104,44,3,87,25,71,31,213,63,93,225,146,243,111,56,196,108,202,109,71,99,19,18,255,18,174,201,75,190,140,79,54,13,236,136,185,214,20,157,198,131,182,57,160,228,227,71,183,165,118,189,136,183,59,50,193,255,230,168,157,162,54,61,226,187,61,140,114,227,93,139,92,3,86,61,216,202,238,54,188,92,253,15,237,82,52,226,18,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("40621076-0161-469d-a877-c66a3467d0cf"));
		}

		#endregion

	}

	#endregion

}

