namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: IndexerFactorySchema

	/// <exclude/>
	public class IndexerFactorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IndexerFactorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IndexerFactorySchema(IndexerFactorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7dd97aab-f6c9-494a-bc55-6550dca89127");
			Name = "IndexerFactory";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("3c3a921b-299a-4f38-a040-5c0154a25bee");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,86,235,138,26,49,20,254,173,224,59,132,45,44,35,148,121,128,186,174,184,222,16,106,177,43,246,111,137,51,71,13,205,100,166,73,70,58,20,223,189,39,201,140,58,154,113,89,74,139,226,152,115,251,190,115,201,81,65,19,80,25,141,128,188,44,23,171,116,171,195,81,42,182,108,151,75,170,89,42,194,25,79,55,148,175,128,202,104,223,105,255,238,180,91,185,98,98,71,86,133,210,144,244,174,206,225,103,38,126,158,133,231,144,18,194,137,208,76,51,80,13,234,41,141,116,42,189,250,75,14,225,92,196,240,11,181,198,12,223,31,36,236,144,39,25,113,170,212,39,98,181,32,93,176,162,211,70,139,44,223,112,22,145,200,24,220,232,91,152,17,126,158,194,76,25,240,24,227,44,37,59,80,13,78,153,185,3,145,64,227,84,240,130,12,15,148,113,186,225,80,145,169,114,35,223,105,147,170,87,2,129,136,29,86,29,24,171,174,180,204,13,45,3,111,57,151,232,142,127,157,121,208,76,161,145,65,151,152,246,181,90,205,28,73,191,217,219,212,187,117,188,159,196,2,244,62,109,44,223,38,77,57,153,129,158,171,87,160,92,67,108,67,23,103,32,3,27,7,78,74,192,62,42,206,18,116,46,69,41,12,215,10,36,22,76,64,228,102,212,196,156,2,69,19,168,162,60,92,14,205,43,112,122,131,247,208,189,76,169,70,114,180,135,232,199,92,97,22,9,149,197,40,229,121,34,70,123,42,118,215,244,62,18,119,28,110,53,200,201,1,133,67,185,83,165,178,46,172,50,57,80,73,146,52,102,91,6,177,139,252,141,242,220,212,222,170,91,62,223,65,184,240,121,12,6,8,159,39,32,77,202,225,36,201,116,241,228,248,92,152,61,7,46,79,11,156,185,140,198,76,101,156,150,86,107,22,99,223,177,134,75,191,50,40,59,225,162,176,45,9,26,163,244,137,200,57,175,50,173,154,182,165,92,129,243,198,98,159,229,190,42,132,67,81,4,145,21,144,254,51,113,223,112,65,216,199,122,110,49,26,224,189,237,156,229,44,30,220,75,206,59,109,166,84,78,178,138,246,144,80,172,79,57,121,238,220,243,90,249,32,78,158,206,36,244,217,244,110,39,188,57,224,192,84,161,113,112,237,77,168,6,124,12,26,239,114,128,107,197,44,83,101,67,126,193,117,127,117,167,154,215,65,232,34,24,31,101,126,22,240,32,84,112,17,232,125,59,225,118,167,189,80,229,64,65,26,234,211,84,206,5,94,109,237,239,138,25,61,95,130,181,214,88,94,215,19,104,127,28,202,205,105,182,197,147,243,44,161,79,55,164,54,157,55,62,23,100,43,143,227,27,217,172,179,24,91,243,215,43,227,63,37,126,130,185,187,158,171,158,60,62,58,164,123,187,178,202,216,155,92,247,45,174,95,115,192,255,3,241,63,239,210,24,56,96,151,42,62,239,143,124,53,250,78,90,23,186,215,241,15,94,50,50,4,110,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7dd97aab-f6c9-494a-bc55-6550dca89127"));
		}

		#endregion

	}

	#endregion

}

