namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: WorkingIntervalSchema

	/// <exclude/>
	public class WorkingIntervalSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public WorkingIntervalSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public WorkingIntervalSchema(WorkingIntervalSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6a090ccf-6e88-44ca-828b-e8f931fed71b");
			Name = "WorkingInterval";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("761f835c-6644-4753-9a3e-2c2ccab7b4d0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,85,81,107,219,48,16,126,118,161,255,225,72,161,164,144,38,239,109,226,177,182,99,20,86,86,72,97,207,138,125,78,180,218,146,145,228,132,48,250,223,119,210,89,105,106,103,93,202,246,16,99,159,238,78,223,125,247,221,69,137,10,109,45,50,132,155,199,135,185,46,220,248,86,171,66,46,27,35,156,212,106,124,43,74,84,185,48,246,244,228,215,233,73,210,88,169,150,48,223,90,135,213,245,233,9,89,206,12,46,201,49,153,59,211,100,14,174,224,135,54,207,228,116,175,28,154,181,40,131,211,100,50,129,169,109,170,74,152,109,218,126,127,6,203,33,110,37,28,24,172,13,90,84,206,130,128,13,167,0,217,230,128,141,116,43,152,59,97,28,8,149,195,23,250,213,90,6,103,11,79,178,194,121,45,20,232,197,79,204,156,109,243,123,71,81,90,13,181,209,107,153,163,5,171,43,132,198,201,82,58,73,159,78,135,139,56,185,116,227,136,115,178,7,180,110,22,165,204,34,210,94,105,9,113,66,207,29,9,143,70,215,104,66,246,43,120,12,177,236,208,37,32,24,184,32,71,240,185,26,143,160,15,33,98,216,149,201,97,190,27,73,178,68,119,29,94,106,35,215,194,33,216,214,240,242,206,189,158,190,15,223,234,131,254,225,206,167,21,2,41,105,185,114,160,11,106,57,190,54,119,175,133,71,98,249,70,137,168,103,59,56,237,91,98,208,53,134,161,94,50,77,12,244,101,15,221,25,201,153,187,245,182,117,36,123,238,178,54,71,53,239,214,32,213,78,2,84,84,137,117,66,209,8,81,101,10,55,61,249,254,161,170,96,169,133,17,21,40,154,194,217,128,178,24,55,72,123,178,152,78,130,215,225,32,42,103,144,118,58,186,31,208,114,215,145,238,112,199,101,184,116,244,202,45,229,187,8,164,93,81,151,164,29,94,180,228,50,170,25,251,51,173,254,214,153,15,184,62,130,223,7,116,43,157,31,71,237,10,179,103,11,178,224,154,50,93,213,90,209,106,136,202,89,202,53,42,200,137,126,143,26,22,88,106,181,12,243,236,17,127,152,246,152,104,144,246,136,102,65,89,58,136,111,123,148,46,180,46,225,43,186,123,123,71,25,110,208,109,16,213,240,46,194,138,105,35,129,173,56,163,121,236,31,223,139,59,177,133,116,214,206,244,249,249,161,227,233,204,43,250,239,19,102,26,149,5,73,242,116,173,121,186,22,91,191,91,75,145,121,69,134,230,241,194,235,144,72,100,75,247,31,169,220,209,192,75,249,125,13,27,73,123,97,144,222,171,92,182,21,112,45,164,27,200,165,161,120,255,87,180,11,205,210,130,22,59,78,39,89,10,21,10,101,33,107,156,243,245,149,88,208,228,104,8,9,71,222,147,50,177,227,37,27,253,169,247,234,3,138,29,142,60,230,253,57,62,40,131,206,100,237,250,208,87,194,136,37,195,56,102,16,138,136,234,32,254,135,135,122,207,202,136,94,81,68,190,57,123,171,45,241,209,61,37,238,4,216,141,102,0,108,74,62,133,149,213,93,15,225,214,209,1,53,242,110,240,219,225,80,88,223,127,228,181,123,177,143,53,206,1,22,162,41,221,176,147,130,93,15,239,18,182,190,53,190,252,6,166,216,35,92,193,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6a090ccf-6e88-44ca-828b-e8f931fed71b"));
		}

		#endregion

	}

	#endregion

}

