namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DeduplicationSearchQueryBuilderSchema

	/// <exclude/>
	public class DeduplicationSearchQueryBuilderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DeduplicationSearchQueryBuilderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DeduplicationSearchQueryBuilderSchema(DeduplicationSearchQueryBuilderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2feccb84-df80-4ade-9331-c969bd3ac170");
			Name = "DeduplicationSearchQueryBuilder";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("4c53ad23-c903-414d-89cd-b08703861304");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,86,91,79,219,48,20,126,14,18,255,193,128,132,90,169,114,247,12,180,211,160,116,66,2,202,8,218,158,77,114,74,45,37,78,177,157,78,221,232,127,159,175,169,155,164,205,38,237,133,146,227,239,124,62,247,99,70,114,16,75,146,0,186,126,122,136,139,185,196,55,5,155,211,183,146,19,73,11,134,39,144,150,203,140,38,230,235,248,232,247,241,81,84,10,202,222,80,188,22,18,114,133,206,50,72,244,161,192,95,129,1,167,201,101,29,115,79,217,187,18,42,241,25,135,55,5,69,55,25,17,226,2,237,144,199,64,120,178,248,86,2,95,95,151,52,75,129,27,149,225,112,136,174,68,153,231,132,175,199,238,219,66,209,187,198,162,87,11,70,243,130,163,52,36,68,28,20,66,72,236,89,134,1,205,178,124,85,56,148,104,67,186,236,64,23,232,174,211,212,72,133,70,253,173,92,124,0,185,40,82,229,228,19,167,43,34,193,158,46,237,7,10,24,166,52,147,234,14,67,212,16,247,38,238,86,16,207,101,6,14,155,182,8,7,154,62,138,238,169,144,87,91,37,149,158,50,103,19,34,201,24,229,69,10,89,31,233,20,70,209,138,112,36,146,5,228,196,66,4,26,89,0,254,177,0,14,189,196,72,209,104,140,236,127,56,54,224,71,85,46,104,52,106,181,32,128,244,117,13,68,81,155,29,246,22,251,109,81,116,142,122,66,114,85,48,248,78,60,150,89,54,227,183,249,82,174,123,173,151,188,172,151,208,247,94,68,1,153,114,96,199,33,60,165,92,200,25,159,192,156,148,153,108,122,100,113,7,61,218,66,236,117,209,249,57,106,53,213,81,90,227,172,91,27,4,153,128,255,97,168,102,221,107,162,185,210,221,88,133,51,184,237,51,254,78,178,210,232,51,101,48,250,248,8,51,96,15,235,22,172,172,198,248,164,213,87,115,170,82,224,24,171,92,112,144,37,103,70,214,22,1,127,12,63,91,170,223,97,162,176,202,186,138,204,85,124,20,230,177,43,141,94,199,134,116,127,68,61,206,197,174,37,100,182,77,124,164,208,193,80,225,151,66,247,101,175,111,89,55,65,186,54,123,231,130,182,168,49,21,180,176,54,19,38,47,51,196,213,239,0,117,245,254,192,213,174,43,63,211,168,46,242,186,104,52,9,214,140,215,69,186,254,139,236,86,115,132,87,58,104,135,163,163,189,189,26,126,46,10,25,204,14,93,162,123,206,180,85,77,227,237,48,171,69,110,84,175,52,35,245,117,102,83,45,28,202,4,174,81,148,227,90,190,34,181,97,128,36,139,158,247,89,193,84,233,82,182,181,214,209,86,134,213,45,115,213,62,218,55,237,43,214,129,155,214,238,102,27,196,6,207,73,45,71,81,84,139,130,55,8,127,73,211,166,126,197,190,219,168,45,185,246,217,246,63,14,80,187,45,172,139,58,133,171,243,51,96,169,93,144,251,182,165,217,203,246,208,44,109,202,84,163,81,153,22,106,89,115,152,143,78,187,86,49,174,199,246,116,168,23,190,223,248,193,65,35,11,61,99,250,221,45,43,115,224,228,53,131,171,70,171,141,77,178,133,157,15,83,202,210,0,97,159,27,104,190,35,157,177,152,172,192,157,133,219,215,36,88,149,194,1,56,126,208,152,203,218,194,118,147,238,144,222,182,99,2,229,221,100,233,218,55,174,224,24,244,11,206,212,158,158,100,173,35,199,14,24,63,69,182,29,232,58,196,77,195,70,15,142,27,109,233,75,214,233,249,193,24,140,138,154,153,106,120,151,76,234,198,255,212,53,139,218,55,140,87,154,242,34,239,8,155,134,184,201,31,211,95,157,65,86,16,135,246,1,173,27,239,142,183,79,172,67,124,14,229,13,248,247,92,59,77,245,224,212,175,92,75,231,23,216,33,134,166,130,13,234,129,198,181,210,93,225,230,15,184,98,88,95,76,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2feccb84-df80-4ade-9331-c969bd3ac170"));
		}

		#endregion

	}

	#endregion

}

