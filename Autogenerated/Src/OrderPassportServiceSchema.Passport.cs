namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: OrderPassportServiceSchema

	/// <exclude/>
	public class OrderPassportServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public OrderPassportServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public OrderPassportServiceSchema(OrderPassportServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9d704f21-52c6-4edb-8663-c053bb3834f7");
			Name = "OrderPassportService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("a0538e5b-8885-491e-bb6b-658d0c2fee8a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,88,75,111,219,48,12,62,167,192,254,131,208,94,28,32,115,239,91,91,160,143,117,235,128,44,89,211,110,135,98,7,213,102,82,99,126,77,146,187,121,69,255,251,168,87,44,57,78,218,6,11,6,12,201,193,177,37,146,34,191,143,34,101,231,52,3,94,210,8,200,201,120,56,41,166,34,60,45,242,105,50,171,24,21,73,145,135,99,202,121,89,48,241,106,231,225,213,78,175,226,73,62,35,147,154,11,200,222,182,158,81,49,77,33,146,90,60,124,15,57,176,36,90,144,185,172,114,145,100,16,78,112,150,166,201,111,181,200,130,20,206,222,39,17,12,139,24,210,149,147,225,87,184,93,45,112,140,14,221,183,86,105,34,101,16,158,211,72,20,44,1,190,56,143,198,81,38,203,148,46,206,238,49,152,161,33,114,154,34,40,111,200,152,21,113,21,137,139,124,90,168,233,155,51,42,40,162,39,24,154,252,134,3,101,117,155,38,17,41,41,19,24,44,137,164,154,175,213,147,160,106,197,33,100,183,192,130,79,200,7,57,36,187,165,21,27,177,24,216,69,188,219,151,22,173,201,247,85,18,55,150,140,8,121,32,51,16,111,9,151,151,71,229,82,167,233,31,21,69,18,68,237,155,140,33,74,50,244,242,179,153,109,91,235,105,139,123,144,199,26,134,46,72,38,85,89,166,245,152,214,25,228,194,137,244,18,126,84,192,197,11,96,122,210,146,132,110,89,132,220,85,126,151,130,252,235,132,112,210,41,248,92,32,13,71,92,250,229,27,119,28,190,249,102,159,148,92,135,237,231,0,171,40,182,123,209,36,184,70,211,60,184,128,222,28,243,242,19,8,76,221,18,51,255,54,73,145,78,137,91,194,84,128,60,112,31,228,54,193,96,158,80,145,82,161,25,136,85,168,38,82,205,86,151,123,228,13,57,161,28,230,206,234,92,111,197,117,93,198,84,64,23,217,220,205,153,197,164,241,215,127,142,153,158,118,160,183,191,191,79,14,120,149,101,148,213,71,243,17,100,125,15,127,234,226,252,227,141,190,13,27,221,125,79,249,197,249,183,102,2,46,241,219,250,217,120,234,251,191,23,146,246,72,19,232,107,59,52,32,243,241,215,22,10,207,230,128,44,172,136,146,45,195,234,182,173,251,114,68,13,62,103,137,234,37,56,124,32,161,26,216,10,117,212,218,79,74,167,135,120,217,219,30,3,81,49,76,49,85,186,195,143,220,94,206,128,155,182,3,7,75,173,31,5,214,188,36,182,47,187,2,254,100,1,84,215,165,156,219,98,32,167,90,76,115,193,100,91,113,237,46,84,87,107,187,85,6,230,251,5,149,75,192,2,9,170,241,200,150,166,247,127,175,212,15,254,22,252,0,41,74,147,214,163,198,199,65,202,2,37,247,144,238,131,53,118,110,113,208,97,235,40,200,225,39,66,154,99,48,24,68,193,142,217,172,146,217,26,236,86,136,42,78,228,186,247,239,14,200,181,55,208,55,24,62,39,202,33,136,187,34,150,33,42,228,204,222,31,225,250,170,133,123,5,224,6,219,243,69,126,95,124,135,64,171,73,22,198,163,201,21,122,112,82,196,245,68,212,169,100,6,197,134,192,57,157,193,124,52,252,202,104,89,66,60,80,142,153,10,113,94,176,140,10,79,65,15,169,228,25,144,75,60,39,97,248,176,90,206,107,3,222,81,202,20,66,107,134,156,222,209,124,6,87,144,149,41,242,23,168,114,80,232,78,62,208,197,65,152,185,139,184,111,24,187,167,140,48,107,224,144,24,74,150,174,17,24,232,5,171,45,229,62,171,97,203,137,249,250,206,210,134,61,18,81,17,221,145,224,221,175,8,74,185,22,129,95,253,38,145,244,130,97,51,123,136,243,14,241,54,215,172,164,154,122,252,175,9,190,194,120,207,96,106,17,183,32,143,166,83,143,236,141,113,187,98,125,187,244,150,219,53,185,93,113,224,8,158,62,140,144,74,137,152,167,141,37,192,42,39,61,15,194,238,99,200,192,247,51,116,251,238,54,117,214,174,251,41,80,214,77,138,42,11,221,135,199,205,117,128,229,238,44,241,100,91,52,214,100,254,11,30,61,23,119,36,176,8,255,208,166,127,4,208,100,169,161,168,98,204,223,151,246,101,29,233,111,244,209,124,5,27,203,147,167,156,159,31,29,22,189,237,240,114,155,67,127,51,135,142,179,2,191,171,141,83,154,119,29,35,87,166,79,163,250,15,210,199,241,123,117,250,180,189,116,15,150,219,115,233,154,41,164,223,242,116,177,183,95,253,156,252,177,223,176,252,124,177,130,27,79,148,81,151,119,109,199,92,135,54,95,82,220,183,214,206,175,118,40,247,7,58,169,37,4,80,23,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9d704f21-52c6-4edb-8663-c053bb3834f7"));
		}

		#endregion

	}

	#endregion

}

