namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: LookupColumnProcessorSchema

	/// <exclude/>
	public class LookupColumnProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LookupColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LookupColumnProcessorSchema(LookupColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e4c047e4-ffa9-45aa-aaf3-0b5509c03d91");
			Name = "LookupColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bdeb1980-c322-4103-af7f-58bfe7162080");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,88,223,143,211,56,16,126,14,18,255,131,233,189,100,117,85,250,206,181,69,75,119,23,85,98,239,208,22,184,71,228,38,211,93,31,137,83,236,164,208,59,241,191,223,216,227,180,78,226,180,5,241,194,38,102,126,126,243,205,120,26,201,11,208,91,158,2,123,253,238,126,85,110,170,100,81,202,141,120,172,21,175,68,41,147,59,145,195,178,216,150,170,122,254,236,191,231,207,162,90,11,249,200,86,123,93,65,241,71,231,29,85,243,28,82,163,167,147,55,32,65,137,180,39,243,86,200,47,199,195,69,169,32,185,227,105,85,42,1,250,120,126,12,166,40,74,25,58,87,16,62,77,110,101,37,42,50,134,2,191,41,120,196,120,216,34,231,90,191,100,111,203,242,115,189,197,56,235,66,190,83,101,10,90,151,202,10,78,38,19,54,213,117,81,112,181,159,187,247,107,201,132,212,21,151,8,79,185,97,213,147,208,44,53,134,24,62,40,196,13,19,21,235,28,216,166,84,108,75,230,76,60,228,133,165,214,13,219,241,188,6,157,52,62,38,158,147,109,189,206,69,234,108,6,99,99,47,217,107,174,161,115,58,102,203,94,14,17,150,7,255,61,102,140,193,85,170,54,208,98,226,239,172,39,146,232,166,106,15,22,10,120,5,186,157,240,126,11,40,9,192,82,5,155,217,40,24,225,104,50,55,185,245,147,163,147,45,87,188,96,18,105,54,27,213,26,20,134,37,137,35,163,249,7,124,71,148,154,131,100,58,177,210,86,217,65,19,116,25,127,104,25,98,109,187,87,136,217,26,49,139,187,199,134,191,81,244,145,231,34,195,84,31,224,75,45,20,100,100,91,179,25,67,180,44,169,162,239,14,73,144,25,129,217,70,22,227,216,130,50,28,67,92,149,216,161,49,18,216,210,139,11,250,163,173,251,251,210,133,205,62,229,161,227,63,46,81,13,159,206,44,80,81,216,46,123,245,138,197,3,255,53,163,118,160,190,219,99,171,86,211,160,135,121,108,29,68,145,132,175,62,159,174,213,99,93,128,172,226,110,69,199,172,93,153,171,171,171,96,126,206,62,100,228,144,125,194,102,170,243,170,1,35,72,208,7,18,25,224,218,105,251,78,23,17,59,184,34,124,154,151,62,34,108,26,52,213,64,242,171,17,33,235,199,182,111,85,238,112,124,145,106,248,148,200,255,136,137,209,83,36,54,29,126,28,101,95,204,152,172,243,188,233,152,40,82,80,213,74,14,7,101,100,176,105,204,159,1,147,104,17,17,11,134,214,233,230,49,27,232,80,3,220,176,135,196,61,221,42,133,238,126,159,177,191,164,127,242,0,41,136,29,100,206,198,5,9,125,247,38,65,144,144,228,9,175,79,205,31,129,225,221,182,205,49,232,51,252,68,194,152,27,226,19,24,229,123,210,125,239,84,59,213,117,162,183,1,201,129,106,134,140,178,89,183,152,75,236,134,178,86,41,172,144,184,38,116,237,254,206,58,92,77,254,46,213,103,187,28,36,29,21,135,98,52,224,209,213,58,197,58,254,203,241,126,92,217,76,98,231,103,204,6,46,146,177,179,26,141,122,186,58,9,193,144,216,194,141,174,218,12,108,106,59,0,113,167,180,151,13,249,178,66,72,32,59,193,134,27,94,113,186,234,233,218,172,165,248,130,207,34,195,169,32,54,2,212,32,49,156,109,86,238,48,98,148,103,111,106,145,89,123,54,189,247,104,237,195,50,235,151,220,229,217,18,76,8,217,174,242,79,166,125,110,103,184,129,10,84,33,164,89,27,54,184,16,81,187,186,189,71,27,52,76,31,27,179,184,47,73,128,12,178,33,20,232,182,95,151,101,62,212,254,71,0,40,27,237,30,206,36,116,15,213,83,153,117,111,234,51,43,16,238,115,5,5,206,215,101,93,249,187,157,101,213,165,11,79,10,121,254,0,155,13,40,192,149,106,52,95,246,44,195,55,148,97,70,174,181,253,244,44,25,22,85,251,85,250,4,5,199,130,142,230,118,205,221,51,109,79,2,108,59,105,173,16,54,25,106,159,249,45,198,176,181,49,185,97,214,87,38,174,233,249,116,210,60,5,38,21,225,215,234,106,191,107,99,203,235,78,34,227,70,217,15,169,153,85,75,18,187,231,18,213,213,18,71,236,148,210,166,243,121,147,125,111,112,249,82,78,219,220,233,198,194,235,61,122,141,59,81,184,9,226,58,138,34,74,238,108,169,226,208,224,193,168,173,106,178,224,22,184,113,59,124,55,200,29,51,27,148,118,37,166,31,190,149,226,114,253,15,134,206,52,146,24,112,187,15,222,147,86,227,118,135,161,227,182,161,25,52,79,13,90,33,120,17,154,131,92,11,149,195,80,104,224,39,122,91,151,45,165,123,47,49,210,216,113,101,9,171,151,24,236,55,236,151,89,120,63,53,136,47,60,185,46,232,99,207,11,145,230,79,36,231,184,21,138,43,140,185,221,94,248,62,147,107,185,143,175,14,119,26,21,206,155,114,17,246,25,240,244,137,197,46,191,163,50,182,119,43,252,131,145,21,130,239,23,39,62,74,141,207,114,251,68,110,135,246,74,156,176,93,1,47,156,199,222,248,58,127,7,33,224,186,249,213,153,129,174,132,164,81,147,193,134,227,154,107,198,152,27,238,151,14,48,63,45,74,190,59,121,200,221,233,113,67,50,110,218,144,25,119,85,122,163,118,120,232,44,46,202,168,59,154,122,215,234,141,176,195,1,115,157,18,41,198,140,218,110,110,128,35,39,55,71,31,199,155,208,173,252,126,251,184,144,250,240,224,47,115,251,181,132,222,168,157,188,244,27,178,157,136,37,11,133,128,61,102,126,210,38,103,2,13,196,67,177,251,33,16,249,130,110,146,235,44,139,241,194,162,251,234,192,102,39,176,167,254,236,59,73,250,42,237,137,26,116,246,99,183,247,185,93,4,35,199,111,50,252,107,179,131,61,241,138,125,21,121,206,214,208,92,223,131,219,71,143,176,194,214,144,10,142,183,182,125,115,121,95,194,244,131,202,15,55,71,75,143,82,57,173,237,33,219,213,246,254,43,244,101,197,94,71,166,222,164,229,186,218,207,188,205,101,103,246,12,193,29,223,124,25,143,170,126,76,77,43,132,239,14,19,88,59,150,198,189,239,172,101,207,231,83,144,34,119,66,34,71,14,100,112,240,94,72,137,159,0,250,23,148,186,25,105,135,175,16,7,193,214,176,163,138,186,37,194,164,105,125,224,2,179,226,59,136,47,40,198,133,99,203,181,115,243,41,166,231,169,101,49,237,206,156,83,181,121,168,113,195,39,13,247,193,212,91,186,79,255,104,176,68,118,0,197,77,164,222,151,157,224,50,213,124,46,160,227,120,112,129,49,43,35,90,109,37,208,25,86,116,218,62,252,254,63,64,71,153,242,88,23,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateErrorMessageTemplateLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateErrorMessageTemplateLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("177a17b9-4298-4505-911d-7339f7761741"),
				Name = "ErrorMessageTemplate",
				CreatedInPackageId = new Guid("1101e5cd-b945-4f88-8001-faccb4fdb24c"),
				CreatedInSchemaUId = new Guid("e4c047e4-ffa9-45aa-aaf3-0b5509c03d91"),
				ModifiedInSchemaUId = new Guid("e4c047e4-ffa9-45aa-aaf3-0b5509c03d91")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e4c047e4-ffa9-45aa-aaf3-0b5509c03d91"));
		}

		#endregion

	}

	#endregion

}

