namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SuppMailBoxLangProviderSchema

	/// <exclude/>
	public class SuppMailBoxLangProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SuppMailBoxLangProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SuppMailBoxLangProviderSchema(SuppMailBoxLangProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8ccf2d10-4665-4a9d-a0d3-e1d36ccb25ec");
			Name = "SuppMailBoxLangProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b11d550e-0087-4f53-ae17-fb00d41102cf");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,84,77,111,155,64,16,61,19,41,255,97,75,46,88,170,224,158,216,72,73,148,88,150,236,202,170,147,94,170,170,90,195,96,175,4,187,116,63,210,208,202,255,189,179,11,24,140,113,212,11,120,199,243,222,204,188,121,11,167,5,168,146,38,64,30,214,171,141,200,116,248,40,120,198,118,70,82,205,4,191,190,250,123,125,229,25,197,248,142,108,42,165,161,184,27,156,49,63,207,33,177,201,42,156,3,7,201,146,179,156,37,227,191,186,96,87,73,66,248,76,19,45,36,3,53,254,255,5,212,19,215,76,215,32,76,184,145,176,195,250,228,49,167,74,221,146,141,41,87,148,229,15,226,125,73,249,110,45,197,27,75,65,186,204,40,138,200,148,241,61,118,169,83,145,144,40,198,96,105,182,57,75,72,98,209,23,192,228,150,44,46,209,122,86,162,99,15,207,12,242,20,155,88,75,246,70,53,184,170,94,89,31,28,71,41,164,110,120,190,66,41,20,195,241,43,242,179,24,134,238,250,64,55,111,245,253,199,49,175,29,221,187,1,158,214,165,155,115,171,5,238,67,75,99,197,181,221,184,17,235,12,167,129,50,69,65,101,21,183,129,5,71,61,105,206,254,0,225,240,155,48,4,83,142,174,16,25,230,2,144,68,66,54,243,199,37,240,163,56,60,18,71,67,230,105,73,37,45,8,71,163,205,124,163,64,98,103,188,54,140,31,191,226,153,36,199,64,56,141,92,246,56,88,66,194,74,6,92,43,63,94,50,165,109,115,93,12,123,38,96,213,57,33,105,118,59,222,120,240,122,210,14,57,237,110,66,220,98,189,158,146,247,114,103,10,44,54,200,60,134,103,78,188,17,64,48,156,252,243,176,152,91,183,231,28,92,95,137,42,124,145,213,28,16,122,230,22,68,11,163,71,60,51,100,109,203,55,236,44,35,193,57,136,124,194,182,77,158,183,243,122,157,199,112,160,243,124,188,229,206,192,91,155,17,76,194,23,113,47,37,173,130,166,200,193,62,15,31,155,115,5,122,47,210,49,95,14,239,102,187,192,185,97,41,193,194,118,125,134,238,32,176,6,152,162,204,248,105,136,123,46,104,135,248,207,81,51,252,152,208,100,79,130,154,169,35,178,110,58,103,237,1,234,27,73,154,18,54,189,147,173,75,119,125,116,164,179,89,11,176,34,190,84,37,164,248,249,52,5,255,70,115,3,237,56,245,198,183,226,253,11,218,222,159,244,216,60,39,67,142,26,44,82,220,205,71,92,54,211,50,129,82,40,87,43,219,34,245,155,53,181,205,53,100,40,140,69,132,79,69,169,171,126,69,79,130,54,146,55,69,59,172,91,115,255,71,243,174,95,245,179,129,118,196,14,62,238,141,58,122,26,60,252,3,202,132,221,255,158,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8ccf2d10-4665-4a9d-a0d3-e1d36ccb25ec"));
		}

		#endregion

	}

	#endregion

}

