namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SchedulerJobServiceSchema

	/// <exclude/>
	public class SchedulerJobServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SchedulerJobServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SchedulerJobServiceSchema(SchedulerJobServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7ffbc216-a83c-4629-b1f2-132d949a2d7f");
			Name = "SchedulerJobService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("eb6766f3-b02c-43b4-b27d-0c161c2ddac8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,87,75,79,227,48,16,62,7,137,255,48,203,94,82,169,138,56,179,219,3,5,22,21,169,80,17,80,15,104,15,105,50,109,189,36,113,214,118,186,68,208,255,190,118,156,71,147,148,180,93,45,165,151,40,246,120,198,243,248,252,141,29,58,1,242,200,113,17,250,163,161,77,167,194,186,160,225,148,204,98,230,8,66,67,203,118,231,232,197,62,178,27,58,177,145,45,136,139,199,71,175,199,71,70,204,73,56,3,59,225,2,131,111,181,177,149,173,28,82,15,253,86,161,117,238,10,178,72,183,106,95,55,198,73,185,160,116,53,8,86,21,203,121,134,235,103,203,120,154,114,185,69,105,81,74,159,50,7,100,66,4,115,92,241,83,205,157,243,232,22,133,92,22,73,167,39,196,39,34,185,199,223,49,97,24,96,40,184,185,58,80,158,67,15,54,168,168,85,86,54,225,117,212,38,81,60,241,137,11,174,239,112,14,107,10,0,103,208,119,56,22,229,48,100,61,228,215,248,202,112,38,19,9,67,20,115,234,241,51,24,49,149,91,212,210,72,15,96,65,137,7,23,12,229,191,157,132,174,52,107,62,114,100,50,202,16,101,49,164,126,92,25,118,129,11,166,242,244,139,78,110,37,90,138,49,215,218,215,140,198,81,42,80,187,24,198,138,116,196,168,139,156,107,45,18,10,136,144,17,234,13,194,33,9,99,129,188,11,19,74,125,96,232,166,238,148,150,243,152,149,166,204,96,24,251,126,7,20,234,12,99,225,176,82,174,178,27,69,69,138,172,107,20,197,224,142,93,226,212,137,125,97,86,204,117,84,225,13,163,162,118,143,1,93,160,202,68,25,99,61,184,114,211,204,2,153,130,89,139,7,190,195,41,188,189,193,151,60,162,220,105,131,161,136,89,138,84,195,88,54,29,200,255,180,29,63,201,18,183,201,163,90,138,245,86,213,234,89,99,202,158,211,3,110,105,165,154,248,34,102,76,162,80,33,32,91,208,168,81,17,248,89,61,7,203,119,145,53,8,2,244,200,190,33,246,73,240,201,255,138,160,63,179,124,27,171,245,21,67,79,19,197,123,172,145,210,143,22,62,221,73,56,164,244,188,202,130,198,147,228,202,65,184,160,207,104,106,53,153,201,147,209,157,253,112,210,133,71,70,30,48,136,124,133,8,57,91,97,26,41,238,83,47,177,69,226,43,161,180,50,148,209,59,51,44,102,173,49,115,162,8,61,157,13,69,139,200,197,15,202,2,71,84,20,244,148,117,195,21,122,238,101,11,163,33,199,246,117,41,183,230,228,186,134,5,51,244,200,223,10,154,236,102,225,74,193,70,134,211,69,221,157,230,218,8,186,91,250,216,116,174,225,85,227,60,23,126,100,135,169,9,239,229,135,20,127,76,196,60,175,212,225,0,161,114,221,201,90,106,110,6,222,245,127,107,176,84,8,203,254,160,158,40,88,146,55,154,117,93,169,215,131,211,162,19,25,91,17,244,110,16,91,199,144,198,18,208,151,41,172,110,187,15,64,175,133,116,222,118,179,78,12,33,254,105,45,189,153,169,45,193,117,132,59,7,243,234,197,197,40,237,93,245,174,190,209,22,188,66,169,221,3,92,174,220,3,254,243,81,171,151,245,112,206,89,219,229,96,219,238,191,42,168,64,162,122,45,216,72,171,27,193,191,67,215,134,189,241,103,63,25,165,200,39,174,124,65,28,100,97,215,57,106,94,199,82,78,188,162,120,255,220,95,211,56,86,100,197,213,168,161,165,202,185,245,141,80,49,38,241,172,1,191,10,34,233,110,167,229,206,174,46,143,81,25,154,141,66,72,235,252,81,168,71,29,81,76,155,114,193,168,101,73,3,106,196,203,152,166,205,176,165,243,251,192,200,108,134,204,220,133,45,155,153,210,209,213,242,244,145,32,158,163,251,60,152,74,63,175,94,8,23,135,131,220,180,209,214,188,51,119,69,233,30,30,27,89,155,169,104,95,82,84,239,11,237,115,11,30,182,122,3,200,217,229,95,199,86,26,207,9,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7ffbc216-a83c-4629-b1f2-132d949a2d7f"));
		}

		#endregion

	}

	#endregion

}

