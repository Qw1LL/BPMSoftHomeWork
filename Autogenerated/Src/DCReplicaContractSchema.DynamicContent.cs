namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DCReplicaContractSchema

	/// <exclude/>
	public class DCReplicaContractSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DCReplicaContractSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DCReplicaContractSchema(DCReplicaContractSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("39942a8a-b356-4059-a046-afcdd33a806f");
			Name = "DCReplicaContract";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e81fdc99-2bd3-4785-b2cd-a2accfc6f9a3");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,85,77,111,219,48,12,61,167,64,255,3,151,29,154,0,131,179,115,91,167,88,83,96,40,176,108,69,187,157,138,30,20,153,78,180,218,178,43,81,75,179,98,255,125,148,252,17,187,233,182,12,216,114,176,34,154,143,124,164,196,103,45,114,180,165,144,8,231,87,243,155,34,165,104,86,232,84,45,157,17,164,10,29,93,108,180,200,149,100,35,161,166,232,66,144,240,255,141,144,116,120,240,116,120,48,112,86,233,37,220,108,44,97,126,242,108,31,125,80,250,97,199,120,237,52,169,28,163,27,52,74,100,234,123,72,180,245,218,139,199,188,72,48,179,12,98,216,107,131,75,118,129,89,38,172,61,134,139,217,53,150,153,146,29,158,236,52,153,76,224,212,186,60,23,102,51,173,247,1,0,84,128,193,210,160,229,184,144,112,125,32,107,32,164,133,97,16,34,72,131,105,60,108,35,15,39,83,96,111,69,155,168,9,61,233,196,190,237,118,233,142,13,165,91,48,12,100,200,247,2,191,1,55,146,159,109,37,87,166,40,209,144,66,46,231,42,96,171,247,207,139,8,134,47,90,61,56,4,149,120,70,169,66,227,57,237,146,170,88,205,49,95,160,241,156,26,82,239,157,74,224,50,129,39,88,34,157,128,245,143,31,191,73,87,147,63,178,32,69,25,142,230,175,210,89,50,254,144,103,21,118,239,172,77,145,58,193,71,200,133,189,135,181,162,149,210,64,43,4,190,84,101,38,8,65,88,88,40,90,43,139,192,1,160,72,97,145,21,242,190,130,161,13,231,41,157,49,254,164,77,85,199,159,217,143,46,237,53,62,56,101,48,129,24,200,56,28,119,11,82,28,107,238,9,237,91,74,125,133,123,100,218,10,254,21,171,166,205,117,174,125,185,189,51,70,108,218,190,217,163,182,115,180,18,4,194,248,19,144,153,75,56,233,127,234,229,237,29,156,251,220,151,117,226,30,115,198,104,92,7,183,183,119,97,248,195,212,160,78,170,193,233,79,209,28,105,85,36,251,140,208,167,111,104,12,15,144,5,124,244,149,40,242,26,192,70,242,77,100,129,120,73,4,130,4,121,37,160,77,137,109,233,179,10,103,65,187,44,243,80,191,254,162,49,193,82,10,35,114,96,113,195,120,216,8,207,112,90,231,216,74,81,177,248,138,188,172,87,74,174,26,114,152,68,167,147,128,159,246,142,158,21,83,110,43,241,82,34,136,79,171,207,124,180,163,67,109,178,49,196,33,224,160,205,254,42,14,117,4,227,224,44,28,66,63,26,248,79,129,255,177,146,196,109,160,200,239,98,72,48,21,46,163,145,151,154,49,156,5,201,137,62,226,218,175,163,49,28,119,253,223,212,113,194,72,117,34,249,125,243,174,185,213,157,215,181,169,245,168,229,165,235,81,153,26,143,222,37,235,184,117,237,209,231,34,12,196,104,92,129,120,114,252,114,28,122,81,125,123,158,95,190,106,184,250,70,182,253,4,162,13,14,8,102,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("39942a8a-b356-4059-a046-afcdd33a806f"));
		}

		#endregion

	}

	#endregion

}

