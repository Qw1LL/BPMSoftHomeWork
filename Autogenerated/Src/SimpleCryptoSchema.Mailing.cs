namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SimpleCryptoSchema

	/// <exclude/>
	public class SimpleCryptoSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SimpleCryptoSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SimpleCryptoSchema(SimpleCryptoSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("993dfa50-74b4-4910-81c6-ade279107913");
			Name = "SimpleCrypto";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("0a66fb70-43c4-43cd-a81c-f036ca2264c0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,86,203,106,219,64,20,93,43,144,127,24,210,141,11,65,46,244,21,242,130,90,73,90,147,26,12,82,87,165,139,137,116,45,13,145,102,196,204,200,173,8,249,247,94,105,174,28,201,177,157,199,174,208,77,200,92,157,115,230,204,125,97,201,11,48,37,143,129,77,230,179,80,45,172,31,40,185,16,105,165,185,21,74,238,239,221,237,239,237,239,121,149,17,50,101,97,109,44,20,39,107,103,63,130,63,246,81,48,132,184,210,194,214,126,160,235,210,170,84,243,50,171,17,133,184,55,26,82,212,102,83,105,65,47,240,238,99,54,13,173,70,178,195,182,160,241,120,204,78,77,85,20,92,215,231,116,142,50,96,162,35,177,4,76,172,197,13,24,102,49,14,50,110,200,141,46,151,9,126,236,142,126,39,54,238,169,149,213,77,46,226,158,216,154,1,15,159,237,121,166,141,177,75,39,237,16,35,10,98,218,12,79,225,144,209,185,228,198,148,153,230,6,222,158,244,184,23,240,114,238,189,203,18,200,196,37,106,144,180,32,71,240,49,11,69,81,230,240,68,190,166,13,166,0,105,219,90,50,181,104,51,245,254,226,50,100,60,79,21,150,39,43,118,165,39,110,238,26,92,197,142,55,101,170,121,111,231,111,6,54,83,9,58,156,183,26,238,227,186,185,54,64,105,53,148,133,198,200,99,39,46,82,114,205,11,38,177,87,207,14,40,121,7,231,161,170,52,86,142,216,167,227,22,180,153,243,144,224,131,115,186,182,241,122,11,245,99,158,6,91,105,105,58,28,36,15,55,116,159,26,44,165,232,149,45,194,218,254,242,110,106,11,63,127,49,13,166,202,173,105,251,198,251,17,93,29,161,156,74,26,74,101,23,71,236,140,73,248,205,250,241,145,235,49,111,118,241,209,213,33,4,189,20,49,204,181,90,138,4,52,203,184,201,86,7,199,223,134,237,180,200,139,197,177,186,134,26,73,125,13,220,10,69,89,89,248,134,177,81,99,202,255,10,118,130,12,51,234,189,138,148,220,30,24,45,185,110,213,190,116,173,70,70,34,45,176,159,176,9,183,216,233,146,227,13,200,190,51,69,246,78,54,33,102,42,1,132,4,162,204,64,55,7,255,50,152,108,68,206,121,210,166,247,140,209,127,45,122,126,29,132,159,9,79,217,72,184,229,145,162,234,34,124,248,116,42,48,61,187,123,247,212,189,43,210,92,154,133,210,69,183,154,84,83,137,161,143,64,3,183,64,242,170,255,118,143,122,2,41,43,186,191,146,188,18,146,231,147,92,197,183,163,129,195,67,246,238,112,232,217,255,14,50,181,89,103,17,87,203,234,175,235,102,134,251,126,9,218,250,145,154,96,13,63,125,160,30,166,251,29,241,126,199,24,211,134,123,245,24,111,152,179,103,78,50,221,252,228,36,19,238,121,147,252,210,133,253,127,146,255,165,73,166,234,54,218,212,246,87,90,21,131,198,127,230,80,39,78,105,235,80,211,77,219,134,122,69,223,49,212,36,209,27,106,138,60,61,212,221,158,218,49,204,107,191,47,54,253,232,184,255,11,224,176,209,206,30,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("993dfa50-74b4-4910-81c6-ade279107913"));
		}

		#endregion

	}

	#endregion

}

