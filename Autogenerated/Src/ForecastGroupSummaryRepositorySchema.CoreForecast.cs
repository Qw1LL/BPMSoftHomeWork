namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastGroupSummaryRepositorySchema

	/// <exclude/>
	public class ForecastGroupSummaryRepositorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastGroupSummaryRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastGroupSummaryRepositorySchema(ForecastGroupSummaryRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2dfdff3f-28f6-4076-b72f-116a96a6cf01");
			Name = "ForecastGroupSummaryRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,77,111,227,54,16,61,107,129,253,15,132,183,7,25,53,120,216,227,54,31,200,186,118,106,32,187,235,198,105,122,40,138,130,145,198,54,11,137,84,72,42,11,35,240,127,239,144,148,108,82,178,29,119,47,54,72,205,188,121,51,124,51,164,96,37,232,138,101,64,62,207,191,44,228,210,208,177,20,75,190,170,21,51,92,10,58,149,10,50,166,205,227,199,247,239,94,223,191,75,106,205,197,138,44,54,218,64,249,75,103,141,174,69,1,153,245,211,244,22,4,40,158,245,108,238,184,120,222,111,238,131,150,165,20,135,246,21,28,222,165,19,97,184,225,160,143,124,158,178,204,72,229,191,163,197,7,5,43,228,69,198,5,211,250,19,105,211,186,85,178,174,22,117,89,50,181,185,135,74,106,142,78,27,231,241,215,175,176,100,117,97,62,115,145,35,122,106,54,21,200,101,58,107,93,123,94,143,31,135,35,242,21,235,73,46,201,192,1,15,134,127,35,80,85,63,21,60,35,153,141,252,70,96,178,103,118,128,84,130,7,128,191,187,92,166,28,138,28,147,153,43,254,194,12,248,143,149,95,16,87,158,205,34,91,67,201,126,175,65,109,240,112,234,82,144,127,86,54,178,95,248,210,36,31,64,228,30,50,198,71,37,104,163,106,91,71,27,197,165,209,4,241,41,157,78,38,253,67,131,66,12,225,37,65,234,104,57,34,179,57,10,68,230,65,246,85,103,99,100,99,37,187,138,123,210,129,125,214,217,24,58,251,79,228,137,105,72,187,225,122,224,125,119,242,74,182,167,75,242,5,204,90,158,95,243,41,47,140,101,209,182,5,185,5,51,209,207,77,169,92,217,188,73,218,90,218,222,35,203,96,225,107,144,132,208,205,73,42,88,130,2,145,129,95,143,250,225,9,232,103,76,202,33,224,73,218,30,217,57,121,51,71,193,251,55,202,253,105,240,218,1,166,246,203,150,190,134,172,104,224,56,103,102,189,29,216,54,76,146,80,93,8,134,241,233,77,158,251,117,122,58,246,208,35,188,48,133,36,51,169,114,141,0,81,204,123,183,61,203,245,53,125,144,119,92,155,116,72,174,175,137,128,239,196,174,46,110,107,158,95,165,125,28,23,8,193,172,225,155,71,148,218,154,237,33,60,129,31,69,8,9,208,59,185,226,25,43,190,161,16,221,108,69,188,238,214,2,15,41,51,244,155,242,238,65,240,255,225,125,35,114,239,206,151,36,109,24,216,169,110,24,23,58,181,69,162,147,178,50,155,97,43,141,150,38,22,184,148,47,16,154,120,160,56,15,60,80,155,34,29,43,64,209,207,244,215,186,40,26,21,191,113,194,13,220,182,199,14,65,164,113,17,211,30,171,67,65,125,184,63,185,89,207,153,66,100,92,232,93,11,149,21,83,92,75,241,128,3,155,78,158,107,86,52,61,148,156,166,55,106,245,66,199,56,108,46,228,211,191,120,158,168,39,20,219,141,82,204,82,139,18,8,79,199,210,11,249,54,134,184,253,27,199,211,81,217,186,145,73,26,245,118,191,135,67,237,152,90,217,46,223,163,186,15,219,120,230,188,72,158,147,3,113,142,15,20,114,198,44,233,15,157,222,64,137,90,115,23,253,218,190,24,38,44,91,167,235,118,107,134,215,62,185,188,106,143,181,25,68,209,231,253,32,57,57,129,34,31,218,159,62,78,83,123,245,250,195,215,49,19,250,200,138,26,165,216,210,73,172,170,124,177,244,41,105,31,225,219,74,34,217,18,40,52,156,129,250,131,218,77,142,16,56,252,189,205,178,37,231,101,235,151,231,95,113,210,96,7,64,222,10,174,89,18,156,17,74,241,28,200,3,123,42,96,12,69,97,95,2,229,110,53,85,178,244,210,73,253,31,225,72,169,173,184,157,170,153,245,185,116,247,52,61,230,234,124,60,127,107,190,155,254,232,103,63,225,3,211,216,42,53,151,139,203,183,185,1,194,75,200,73,135,252,76,6,179,124,16,55,150,5,141,27,170,151,95,95,255,24,180,185,188,241,26,79,23,107,0,67,180,253,197,231,204,68,212,37,30,1,102,114,225,95,54,87,205,155,67,207,196,82,54,111,153,192,40,126,214,92,237,154,212,174,244,136,28,109,224,176,144,40,171,182,142,49,181,134,84,72,160,27,32,194,244,165,121,123,50,96,52,7,77,237,75,198,89,223,199,6,157,87,223,1,224,131,151,166,215,105,124,219,30,125,44,157,61,67,187,93,24,224,199,98,64,195,19,189,225,119,227,77,220,251,15,19,243,220,52,60,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2dfdff3f-28f6-4076-b72f-116a96a6cf01"));
		}

		#endregion

	}

	#endregion

}

