namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: OpportunityStageManagerSchema

	/// <exclude/>
	public class OpportunityStageManagerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public OpportunityStageManagerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public OpportunityStageManagerSchema(OpportunityStageManagerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6c0de654-58bb-4dce-8002-d927d451dd0a");
			Name = "OpportunityStageManager";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5ef32b22-5119-483b-953d-678c3fffad13");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,229,87,75,111,219,70,16,62,43,64,254,195,132,1,2,25,21,40,180,61,20,176,21,29,226,184,137,128,56,54,226,36,151,160,7,138,28,201,219,146,92,97,31,10,4,91,255,189,179,15,134,111,189,210,162,1,122,177,188,203,121,124,243,237,204,199,101,30,101,40,87,81,140,240,234,246,250,142,47,84,120,201,243,5,91,106,17,41,198,243,167,79,30,158,62,25,104,201,242,37,220,109,164,194,236,162,177,38,251,52,197,216,24,203,240,13,230,40,88,92,218,148,65,5,118,239,134,87,185,98,138,161,164,199,100,240,92,224,146,66,193,101,26,73,121,14,55,171,21,23,74,231,76,109,238,84,180,196,235,40,167,191,194,154,142,199,99,152,72,157,101,145,216,76,253,250,227,61,66,230,108,96,193,5,240,210,31,164,9,32,195,194,115,220,112,157,72,196,40,149,28,98,129,139,151,65,39,29,14,108,13,202,67,183,97,5,248,44,183,246,175,35,21,141,192,39,219,235,116,168,203,172,157,232,3,174,184,100,138,139,205,81,216,182,219,0,198,63,56,25,5,196,149,158,167,44,134,216,52,73,95,143,192,57,180,1,78,250,160,116,82,79,153,6,59,9,238,9,55,53,24,205,224,148,237,76,211,161,132,142,201,137,186,250,214,194,183,77,92,148,210,83,196,240,147,68,65,206,185,155,48,208,181,165,5,56,152,185,50,187,81,149,152,170,179,208,40,195,199,57,165,210,106,212,150,211,153,141,123,14,243,72,226,176,1,125,23,156,221,65,193,50,187,117,244,61,199,60,113,28,251,181,39,252,26,213,61,79,12,215,130,173,35,133,158,108,183,128,238,98,224,119,150,166,55,95,73,194,102,201,208,145,10,104,127,70,125,30,4,180,178,244,208,6,245,221,208,135,132,151,62,26,201,164,250,184,89,97,66,210,169,179,252,115,148,106,156,188,209,44,153,14,3,111,27,156,25,181,28,12,4,42,45,242,70,154,139,74,253,69,69,115,206,83,152,201,119,145,84,214,238,78,199,49,74,185,208,233,176,171,27,32,199,175,45,216,62,89,245,81,56,147,101,36,120,241,162,249,240,42,79,224,241,17,158,181,183,47,142,59,36,174,168,47,48,41,138,242,75,224,107,20,130,37,8,107,206,18,99,102,160,84,104,147,205,115,162,97,208,25,138,104,158,226,196,61,170,88,79,189,153,115,45,202,54,221,25,118,133,46,98,214,156,220,185,152,211,242,251,182,238,3,79,215,219,6,213,40,60,77,202,6,33,223,155,180,195,179,11,202,8,154,221,226,226,157,222,109,182,137,152,180,187,151,247,4,213,68,169,224,123,70,43,247,175,179,103,11,24,214,204,11,74,7,235,72,248,244,7,34,41,65,12,40,84,190,196,75,45,4,185,89,198,108,6,207,193,44,41,88,240,100,142,10,76,222,127,91,155,142,86,35,245,141,62,23,217,123,223,196,111,153,52,66,243,1,99,46,90,66,224,48,30,60,83,7,233,6,49,100,155,176,31,68,145,189,150,162,38,17,85,237,42,172,27,234,116,113,50,51,179,92,161,200,48,97,36,53,94,142,143,228,198,94,190,78,38,165,47,127,145,216,69,255,30,62,190,220,204,37,79,81,225,48,248,45,252,249,151,240,87,120,244,242,68,3,1,9,174,4,198,148,60,9,129,222,200,133,16,221,10,92,51,174,165,13,217,146,162,0,126,178,128,130,78,66,104,172,246,92,63,234,135,29,156,253,113,128,52,54,16,85,100,202,12,138,93,22,81,61,57,163,29,135,118,44,198,14,65,109,0,42,177,52,97,52,146,117,52,186,209,148,123,59,21,44,142,82,23,144,154,196,177,222,186,38,24,177,121,251,205,186,221,113,29,80,236,203,235,189,206,230,40,124,202,190,216,175,116,250,215,167,85,66,13,49,108,34,178,225,224,53,179,183,28,250,188,152,208,189,143,190,121,168,190,249,159,116,112,211,66,33,31,130,18,93,48,2,186,28,162,85,174,193,118,223,156,238,56,239,254,75,75,223,161,30,41,103,123,143,246,128,115,172,53,101,249,114,160,139,154,249,28,171,188,27,254,199,199,126,146,28,181,84,242,135,144,164,14,84,255,141,44,153,219,202,63,115,183,253,118,205,169,142,67,71,157,223,163,118,123,174,49,123,24,190,250,183,133,192,144,217,253,185,81,179,62,142,169,35,105,169,126,86,248,189,234,214,246,111,167,166,20,235,220,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6c0de654-58bb-4dce-8002-d927d451dd0a"));
		}

		#endregion

	}

	#endregion

}

