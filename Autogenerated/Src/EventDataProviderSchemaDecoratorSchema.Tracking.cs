namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EventDataProviderSchemaDecoratorSchema

	/// <exclude/>
	public class EventDataProviderSchemaDecoratorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EventDataProviderSchemaDecoratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EventDataProviderSchemaDecoratorSchema(EventDataProviderSchemaDecoratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c2d1f90e-396e-4c2d-8f08-114a5167b7d7");
			Name = "EventDataProviderSchemaDecorator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("120fd877-7905-4e7f-9414-1956e0c20629");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,87,109,111,219,54,16,254,172,2,253,15,132,6,4,50,16,200,223,151,88,64,82,59,133,129,166,77,227,116,251,88,208,210,41,214,42,145,30,73,185,51,2,255,247,30,223,108,189,213,246,6,20,27,138,125,178,73,222,29,143,207,221,243,144,98,180,2,185,166,41,144,219,135,251,5,207,85,252,134,179,188,120,174,5,85,5,103,241,147,160,233,151,130,61,191,126,245,242,250,85,80,75,252,75,22,91,169,160,186,234,140,209,177,44,33,213,94,50,126,11,12,68,145,30,108,14,209,5,12,207,198,211,219,161,133,170,226,236,48,175,13,109,130,100,98,6,237,116,209,16,77,127,17,240,140,3,242,166,164,82,254,74,102,27,96,106,74,21,125,16,124,83,100,32,22,233,10,42,58,133,148,163,23,23,198,103,60,30,147,107,89,87,21,21,219,196,141,157,61,41,88,206,69,101,54,32,185,224,21,17,176,230,66,17,9,98,83,164,16,123,247,113,195,127,93,47,203,34,37,169,78,225,140,12,2,141,110,176,22,197,134,42,192,248,52,227,172,220,246,29,201,103,232,78,93,13,122,126,194,228,16,26,102,11,66,62,215,173,113,203,103,201,121,73,230,114,10,21,191,231,120,220,23,162,87,131,103,80,254,111,112,87,179,244,90,42,129,37,184,36,246,55,33,104,176,0,165,240,191,92,152,169,223,104,89,3,214,37,74,49,204,200,122,6,147,164,81,180,24,91,197,251,96,143,40,227,17,117,146,187,36,198,63,126,226,54,108,52,50,233,6,193,134,10,162,92,63,62,1,163,76,125,18,37,238,55,156,72,20,62,117,109,195,161,72,143,144,66,177,1,113,94,172,134,245,119,162,233,214,56,55,150,179,29,140,164,235,161,235,140,129,58,0,105,228,230,242,14,168,170,5,204,24,93,150,144,29,162,122,191,86,208,66,222,148,165,79,102,86,173,213,22,195,218,66,198,115,249,190,46,203,15,194,76,71,61,128,71,228,226,194,213,242,168,67,3,153,243,93,28,0,62,85,1,120,36,214,135,224,226,98,224,4,214,103,71,76,143,238,12,139,15,212,71,17,82,162,78,145,92,168,0,15,134,140,214,162,75,116,51,209,48,39,60,39,212,242,86,19,187,207,108,59,179,166,130,86,132,161,122,78,194,118,117,194,100,142,193,40,67,73,197,80,109,30,198,215,99,227,56,28,167,71,237,118,168,158,24,180,162,57,193,57,37,53,81,71,24,186,212,235,43,78,47,171,17,49,98,21,116,186,18,27,106,64,100,130,190,96,161,225,176,136,249,26,2,203,108,25,219,53,189,7,181,226,153,46,167,21,46,187,234,85,108,1,250,242,33,72,141,119,168,129,11,144,18,125,230,153,188,221,98,70,138,166,234,99,13,98,27,189,173,139,12,245,197,204,204,51,127,20,77,17,105,3,76,8,131,175,46,90,87,153,156,166,197,211,66,98,27,226,186,159,192,171,175,174,88,20,222,174,171,253,206,161,95,188,195,43,35,10,117,86,251,169,223,87,32,80,8,62,214,180,44,242,2,50,151,226,193,41,64,198,204,254,196,229,200,134,142,31,116,161,65,129,136,14,201,251,104,55,44,27,222,58,136,223,115,76,210,177,47,26,17,42,221,201,108,109,28,221,236,201,155,37,56,5,106,3,203,18,23,254,117,32,207,2,206,101,250,227,81,155,207,88,93,129,208,186,124,173,49,74,142,116,229,57,13,121,170,167,15,222,87,123,231,101,227,96,210,213,226,29,162,109,19,242,87,170,221,34,158,253,5,105,173,224,17,55,65,156,50,228,165,253,75,240,242,182,249,4,173,120,241,77,150,53,204,244,125,100,209,54,23,156,219,162,131,173,219,113,55,106,129,216,10,251,15,177,60,217,135,223,105,95,231,241,243,97,102,52,252,14,32,107,42,236,35,62,243,241,150,3,141,198,81,131,123,158,126,33,209,232,165,185,165,70,226,168,147,49,118,199,54,134,26,191,189,135,14,169,15,108,87,28,217,119,87,65,240,183,84,255,212,37,254,104,114,149,158,76,251,87,4,201,49,133,115,239,242,61,151,194,196,113,140,224,57,153,210,50,45,8,126,7,232,87,157,141,120,244,46,231,121,46,65,133,9,190,138,184,192,110,178,227,227,62,41,175,89,195,197,12,251,30,182,36,50,249,176,252,67,183,247,181,4,32,169,128,124,18,30,173,80,56,78,200,215,85,145,174,44,62,5,2,69,203,18,43,11,25,100,248,221,96,246,196,221,124,248,238,155,226,88,63,57,164,180,73,71,207,252,215,130,59,255,37,126,75,41,123,48,207,212,34,39,209,225,227,195,207,250,198,59,167,89,61,49,119,77,34,75,85,103,5,247,111,98,203,231,35,42,220,149,80,157,213,80,20,125,187,152,39,236,168,155,233,73,138,244,211,212,93,164,95,247,189,215,144,230,138,1,115,40,133,203,61,150,22,199,150,54,232,144,77,73,248,113,68,177,234,25,38,26,209,255,41,114,146,34,26,166,3,63,44,120,255,109,114,68,173,251,241,103,33,68,231,154,177,179,205,73,156,249,6,177,63,135,70,20,19,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c2d1f90e-396e-4c2d-8f08-114a5167b7d7"));
		}

		#endregion

	}

	#endregion

}

