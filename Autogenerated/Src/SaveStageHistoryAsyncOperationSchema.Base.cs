namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SaveStageHistoryAsyncOperationSchema

	/// <exclude/>
	public class SaveStageHistoryAsyncOperationSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SaveStageHistoryAsyncOperationSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SaveStageHistoryAsyncOperationSchema(SaveStageHistoryAsyncOperationSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("80816efe-95c1-4fe3-be10-3ae51af16c15");
			Name = "SaveStageHistoryAsyncOperation";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("76eace8e-4a48-486b-bf04-de18fe06b0a2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,223,111,219,56,12,126,206,128,253,15,66,247,226,2,133,11,220,99,127,100,232,114,105,23,108,221,138,203,109,239,154,205,36,2,28,41,39,201,185,229,182,254,239,163,44,217,150,20,185,201,182,235,75,18,81,212,71,242,35,69,49,156,174,65,109,104,1,228,205,195,253,92,44,116,62,17,124,193,150,181,164,154,9,254,242,197,183,151,47,70,181,98,124,73,230,59,165,97,125,25,173,81,191,170,160,48,202,42,191,3,14,146,21,123,58,239,25,255,167,23,78,132,132,112,149,79,185,102,154,129,26,16,231,55,106,199,139,143,27,176,94,29,171,150,207,184,6,185,192,232,226,19,183,180,208,66,90,131,184,243,74,194,18,15,144,73,69,149,186,32,115,186,133,185,166,75,120,203,20,170,237,66,216,230,196,249,249,57,185,98,124,133,225,234,82,20,228,124,140,194,77,253,165,98,5,41,12,202,1,16,114,65,102,141,219,187,233,22,184,142,45,140,144,118,252,236,28,187,7,189,18,37,186,246,32,217,150,106,176,187,27,187,104,145,26,107,247,148,227,167,252,252,7,185,3,189,47,207,62,41,144,152,98,110,83,70,234,96,121,102,80,71,35,223,237,57,104,109,104,83,246,251,148,152,130,24,141,182,84,18,232,209,255,130,141,80,204,232,147,107,203,162,101,120,135,37,161,175,102,248,209,107,92,77,196,122,45,120,115,238,79,170,233,120,156,157,52,139,64,235,196,249,194,225,95,76,25,87,90,214,6,240,70,46,235,53,26,206,78,66,207,79,206,162,80,78,15,157,87,251,65,34,72,27,230,233,101,23,102,65,139,85,232,219,131,20,95,147,129,78,210,170,137,136,159,57,56,233,241,152,206,211,97,126,48,148,53,253,128,253,161,167,37,111,64,230,221,142,79,147,181,50,227,199,212,131,229,99,154,62,113,213,202,109,114,88,65,171,70,227,249,89,59,170,36,36,232,90,242,68,80,169,75,56,206,158,205,217,100,86,17,102,160,92,143,196,219,203,70,87,63,123,59,255,11,157,143,81,39,195,7,227,94,148,117,21,180,78,175,154,48,176,16,81,245,155,79,247,182,182,115,37,242,103,227,176,89,60,224,192,111,36,52,25,112,170,213,162,31,55,120,36,124,62,220,230,129,254,77,238,106,86,18,123,117,63,205,74,191,91,175,134,104,195,27,250,36,171,81,24,151,3,136,8,51,104,34,191,101,188,204,122,183,44,6,91,144,44,198,184,38,188,174,170,214,239,54,89,70,102,207,32,125,189,56,60,156,207,148,165,141,188,142,93,187,232,17,226,130,155,114,76,159,164,95,42,112,125,7,231,153,122,205,63,211,170,134,113,255,134,90,233,199,170,108,54,212,81,207,232,224,251,142,53,163,8,117,133,163,252,36,21,189,113,133,132,118,58,249,158,111,42,159,131,153,187,50,32,215,227,150,174,94,31,61,77,28,249,91,238,48,162,102,145,65,254,14,118,103,68,212,154,24,203,194,133,230,114,211,49,143,213,190,7,20,151,68,107,126,212,236,162,223,144,55,191,28,15,163,150,54,220,105,205,180,91,230,21,105,14,24,103,156,108,166,222,11,90,66,137,114,188,100,56,235,24,225,163,203,127,216,133,125,190,82,233,221,10,188,14,183,172,170,246,201,200,172,200,117,183,51,242,147,217,90,224,24,137,157,150,100,125,218,8,227,79,102,172,227,201,154,196,4,106,159,84,11,98,179,226,126,251,25,121,244,194,123,5,188,180,147,225,208,152,216,76,162,118,51,57,170,182,179,106,67,208,244,43,20,181,134,67,189,229,23,234,217,61,82,205,197,199,116,134,136,142,34,187,235,158,76,211,132,103,216,92,41,47,224,205,206,84,71,22,83,234,141,31,125,47,114,175,138,237,101,195,221,51,14,201,247,47,15,59,147,10,91,18,249,254,61,138,38,217,170,252,46,213,19,96,42,220,183,52,193,218,209,96,195,73,247,215,129,154,109,139,181,39,219,170,167,43,42,176,137,255,28,214,84,58,184,220,208,231,193,56,106,59,2,182,93,81,119,45,207,82,155,238,134,49,173,177,123,6,174,153,6,92,150,125,172,224,223,73,12,212,14,11,22,198,135,200,231,88,129,43,41,56,251,207,102,186,227,38,242,59,120,118,163,139,99,165,161,16,101,63,0,60,100,222,43,21,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("80816efe-95c1-4fe3-be10-3ae51af16c15"));
		}

		#endregion

	}

	#endregion

}

