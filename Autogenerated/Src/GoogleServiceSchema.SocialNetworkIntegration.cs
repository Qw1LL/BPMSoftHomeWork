namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: GoogleServiceSchema

	/// <exclude/>
	public class GoogleServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public GoogleServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public GoogleServiceSchema(GoogleServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("92e7bd72-1d76-432f-a993-0073d6e7f751");
			Name = "GoogleService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("76eace8e-4a48-486b-bf04-de18fe06b0a2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,84,193,110,219,48,12,61,187,64,255,129,232,46,9,48,216,247,204,11,144,101,67,215,67,186,32,62,236,80,236,32,203,140,35,204,150,60,73,110,151,13,249,247,81,146,29,39,110,178,237,16,199,36,31,31,159,72,202,146,213,104,26,198,17,62,172,87,153,218,218,120,169,228,86,148,173,102,86,40,25,103,138,11,86,221,222,252,190,189,137,90,35,100,9,217,222,88,172,223,141,236,120,211,74,43,106,140,51,212,148,32,126,249,244,87,40,138,62,11,142,43,85,96,21,47,184,21,207,151,113,95,49,39,172,49,20,203,44,179,56,0,122,153,247,74,149,21,58,62,212,36,89,34,183,74,19,140,128,111,52,150,148,8,203,138,25,51,131,1,73,149,61,224,105,97,154,71,180,75,85,55,84,62,23,149,176,251,13,254,104,133,198,26,165,53,147,83,195,105,133,247,240,143,20,135,138,59,71,49,253,70,69,154,54,175,4,7,238,68,156,107,128,25,132,182,18,225,139,210,223,59,119,218,129,118,140,40,22,77,67,217,190,57,199,211,205,223,194,195,25,17,217,27,100,197,23,89,237,79,155,69,197,105,92,244,60,118,98,133,118,167,10,234,197,218,139,10,193,36,73,32,53,109,93,51,189,159,247,142,13,218,86,75,3,92,73,10,161,6,33,183,74,215,94,8,176,92,181,22,74,47,1,140,215,9,108,16,26,31,89,147,49,109,170,3,239,124,121,129,55,78,147,62,236,240,93,227,194,73,123,252,3,193,55,180,169,100,34,220,187,65,12,254,201,20,220,122,70,145,213,251,238,45,10,132,32,241,229,111,68,29,56,58,13,210,172,71,91,21,191,170,23,210,14,110,43,233,15,232,248,124,7,147,79,63,57,54,190,81,56,29,233,24,51,126,102,178,168,240,152,144,94,215,56,159,224,180,171,227,158,135,110,176,40,139,48,91,111,7,239,200,121,241,26,92,42,17,238,196,71,102,25,69,173,102,220,94,217,223,139,61,156,193,217,23,163,91,205,129,123,188,139,107,173,26,212,86,224,201,58,70,145,251,121,9,43,172,115,212,147,71,250,46,209,36,238,250,61,116,37,239,252,189,186,190,31,78,200,96,132,1,148,104,67,247,76,247,242,255,13,60,252,1,152,7,95,3,28,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("92e7bd72-1d76-432f-a993-0073d6e7f751"));
		}

		#endregion

	}

	#endregion

}

