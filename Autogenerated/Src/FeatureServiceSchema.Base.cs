namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: FeatureServiceSchema

	/// <exclude/>
	public class FeatureServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FeatureServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FeatureServiceSchema(FeatureServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1888fdae-e894-4e03-ac6a-5fe320dcdc38");
			Name = "FeatureService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("2e3e95a4-2024-4552-b820-30e9633c8933");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,229,88,75,79,35,57,16,62,103,164,249,15,86,230,18,164,108,103,207,16,34,65,24,216,172,22,6,145,65,115,64,123,112,186,43,196,162,95,107,187,195,102,86,252,247,45,151,187,59,238,206,163,155,5,36,102,246,2,105,251,171,178,93,245,213,231,71,204,35,80,41,247,129,157,94,95,78,147,185,246,198,73,60,23,247,153,228,90,36,241,199,15,255,124,252,208,201,148,136,239,217,116,165,52,68,71,181,111,196,135,33,248,6,172,188,11,136,65,10,127,3,115,147,197,90,68,224,77,177,151,135,226,59,249,222,64,97,239,82,248,112,153,4,16,238,237,244,78,112,188,101,179,19,239,27,204,214,128,245,2,37,108,182,34,20,123,162,136,92,98,239,39,9,247,232,159,141,67,174,212,33,59,7,174,51,9,147,120,158,80,247,221,25,215,28,67,165,37,247,245,159,216,144,102,179,80,248,204,55,240,42,186,99,66,88,250,187,150,73,10,82,11,64,167,215,100,67,254,172,195,75,136,102,32,141,187,194,223,69,38,2,54,9,142,246,130,148,150,102,41,87,152,203,86,192,49,6,167,21,240,12,148,47,69,154,7,122,15,254,15,161,244,48,95,245,84,115,77,75,31,49,250,169,204,239,253,230,34,214,12,115,154,241,144,44,246,131,103,73,18,178,223,184,34,232,121,34,111,21,200,231,89,92,200,36,75,155,103,68,48,119,66,159,32,14,108,26,243,239,60,167,151,160,23,73,96,18,42,13,45,193,246,166,246,131,45,19,76,225,120,1,254,195,56,147,18,98,109,38,76,110,123,230,23,146,40,182,245,195,178,202,231,1,35,226,116,230,200,87,238,47,88,111,201,37,38,198,184,20,177,19,218,2,215,17,115,214,163,126,15,107,225,36,136,68,124,27,11,61,9,216,241,113,205,181,231,204,196,155,4,165,135,142,147,4,118,108,7,243,138,8,16,160,22,119,4,105,153,21,189,79,244,143,254,62,237,138,193,58,168,189,87,93,224,41,87,128,11,84,90,121,39,97,248,57,74,195,100,5,82,185,192,91,119,165,235,121,52,46,148,160,77,43,109,230,134,83,236,131,193,128,13,85,22,69,92,174,70,69,131,141,189,248,14,170,206,110,198,227,192,180,57,115,158,135,252,94,121,165,175,65,221,217,48,229,146,71,44,70,73,56,238,86,147,223,29,13,21,0,243,37,204,143,187,85,6,118,7,35,12,61,70,35,246,193,27,14,200,199,200,169,10,74,99,57,79,183,222,219,81,217,36,112,157,87,212,91,220,23,216,136,253,90,166,101,123,153,212,156,229,57,216,160,211,209,222,164,228,109,181,60,109,151,249,82,194,218,107,189,99,82,21,252,115,1,97,61,255,142,232,244,140,106,35,185,186,62,138,114,247,160,181,90,151,118,196,221,170,161,17,175,29,66,90,154,241,117,249,84,141,105,199,169,214,215,209,11,163,105,183,100,66,212,153,111,190,113,75,92,138,0,105,255,8,179,95,148,5,51,20,5,246,152,200,7,246,40,244,130,205,173,39,98,252,6,225,239,242,1,220,20,221,157,168,244,10,52,238,232,41,158,19,102,34,20,122,117,3,127,101,66,66,132,220,82,61,247,195,28,22,48,38,13,38,6,229,229,13,193,193,78,30,228,243,63,36,69,42,151,94,229,68,123,81,184,1,116,26,171,34,0,185,60,206,86,204,208,165,109,253,19,181,70,249,4,173,165,91,220,132,151,118,160,18,101,37,113,56,40,218,29,32,14,244,160,70,55,160,178,80,51,114,3,26,69,202,140,197,186,110,57,116,201,222,194,137,135,95,240,232,67,199,54,55,85,157,59,60,123,77,226,101,242,0,61,27,24,195,207,235,47,211,175,221,62,187,149,226,43,160,152,91,157,238,94,128,174,12,208,103,167,73,176,154,234,85,104,186,209,207,37,40,197,239,161,108,245,190,73,158,166,16,244,73,27,76,246,64,105,148,213,136,235,138,129,109,242,126,87,73,220,199,160,171,20,183,18,216,143,179,85,115,103,3,116,200,114,192,117,17,143,178,210,42,19,222,168,211,218,138,122,121,209,155,36,21,170,104,71,96,85,133,245,234,134,100,113,228,136,223,86,62,77,65,215,201,100,42,205,183,146,75,178,253,154,172,114,241,86,168,70,87,240,88,157,64,197,234,229,20,153,254,128,20,145,84,75,85,114,84,238,97,185,142,20,163,154,52,238,98,77,159,104,69,145,45,8,164,229,170,216,96,107,36,170,251,177,14,172,113,190,205,230,236,139,49,109,251,166,84,110,191,204,231,218,28,230,62,255,237,3,221,28,88,57,143,214,190,138,193,237,49,235,57,156,86,47,36,117,225,166,36,182,98,161,185,219,188,17,69,213,255,130,163,118,149,189,29,151,196,34,228,91,216,90,222,12,234,86,76,224,93,223,220,18,234,198,141,12,55,134,120,240,164,58,161,247,2,151,235,79,239,132,242,255,65,193,121,24,18,209,213,207,37,223,72,84,188,206,153,156,170,31,182,74,232,214,180,123,93,13,226,221,94,177,251,134,8,133,215,67,186,174,54,31,8,198,88,97,120,31,43,114,250,86,236,49,127,215,120,243,181,31,31,172,95,158,214,102,78,227,43,179,206,70,33,31,231,231,148,227,202,18,171,156,203,63,76,228,203,15,39,214,205,199,136,170,111,235,212,122,115,221,188,151,3,197,83,251,251,150,162,167,23,189,0,145,191,76,41,44,208,57,101,203,172,123,79,177,20,247,38,179,233,177,100,110,124,144,70,151,142,233,94,235,122,174,93,182,94,243,178,68,207,45,239,128,214,91,94,139,237,25,160,54,213,94,219,171,79,142,94,171,92,99,98,157,28,20,113,127,70,22,203,119,136,183,203,149,125,31,123,63,201,58,19,20,116,12,203,208,74,3,237,81,110,202,236,140,91,231,172,128,187,91,83,237,29,105,219,227,18,182,253,11,104,230,185,110,173,26,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1888fdae-e894-4e03-ac6a-5fe320dcdc38"));
		}

		#endregion

	}

	#endregion

}

