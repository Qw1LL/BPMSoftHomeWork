namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DeduplicatorSchema

	/// <exclude/>
	public class DeduplicatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DeduplicatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DeduplicatorSchema(DeduplicatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("3b101bb1-30c4-4d3d-b6ef-6f6e0f4efe33");
			Name = "Deduplicator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d3b16cd4-e124-46c1-8f09-d3b70a775b3e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,90,221,111,219,54,16,127,86,129,254,15,132,251,34,3,134,242,222,214,46,154,56,233,220,53,109,176,164,219,67,16,20,140,69,199,92,37,202,21,169,164,222,208,255,125,199,79,137,18,21,203,75,218,109,192,94,18,137,186,239,187,223,241,68,153,225,156,240,13,94,18,116,120,118,122,94,172,68,114,84,176,21,189,169,74,44,104,193,146,227,28,211,236,148,50,202,110,158,62,249,243,233,147,168,226,112,137,206,183,92,144,252,69,235,30,120,179,140,44,37,35,79,222,16,70,74,186,236,208,204,177,192,157,197,119,148,125,169,23,173,41,199,12,4,172,115,194,68,178,96,130,148,43,176,147,119,201,142,138,60,47,88,104,189,36,225,213,100,126,216,243,224,4,47,69,81,82,165,6,40,158,149,228,6,188,65,78,253,115,180,152,147,180,218,100,116,137,129,80,17,29,28,28,160,151,188,202,115,92,110,103,230,254,172,44,110,105,74,56,170,4,205,168,216,162,156,136,117,145,114,180,42,74,148,58,9,82,118,177,66,57,101,36,69,41,68,38,177,242,14,26,2,55,213,53,80,35,106,141,104,219,16,65,98,224,175,179,246,84,235,122,142,206,20,163,126,216,182,82,45,156,226,242,51,55,234,33,204,84,128,231,19,36,214,88,32,92,18,132,179,146,224,116,139,54,37,225,240,24,44,64,203,130,9,136,209,4,97,142,172,13,132,75,179,187,118,235,149,13,46,113,142,24,20,218,116,4,33,1,45,43,74,210,35,45,103,228,232,230,84,21,14,176,78,208,221,154,128,246,207,100,139,168,181,206,232,69,130,124,21,218,84,120,152,34,204,82,116,139,179,138,72,202,90,186,37,111,216,165,204,8,91,101,61,31,205,78,189,72,36,77,174,219,2,212,213,113,39,198,1,89,206,113,109,251,203,55,21,77,39,72,254,157,53,236,49,196,16,219,11,176,255,216,200,119,138,198,186,218,162,103,132,165,58,135,234,254,155,174,65,127,209,38,249,40,195,28,82,60,168,26,231,100,133,171,12,242,151,111,50,34,241,228,42,239,37,39,4,45,75,178,154,142,118,54,128,196,43,187,209,193,44,88,172,151,70,217,33,101,41,48,197,98,187,33,197,42,246,120,199,227,171,186,172,151,210,17,207,15,244,124,87,133,159,80,146,169,2,47,233,45,228,66,63,220,232,27,36,107,182,96,217,22,125,228,164,4,111,152,110,73,232,83,229,221,135,99,94,199,23,154,152,40,43,217,14,134,32,105,193,32,147,56,163,127,64,90,49,98,228,14,192,194,5,102,128,214,125,195,220,138,178,14,208,80,132,249,62,142,102,50,6,18,13,102,193,43,105,147,128,166,190,184,21,51,95,220,24,201,45,32,138,90,145,68,211,22,157,108,174,166,122,135,70,107,241,184,225,178,138,238,168,88,163,101,197,69,145,239,150,186,56,91,23,140,188,175,242,107,233,76,14,129,34,182,204,31,59,244,29,230,77,64,245,76,217,131,152,90,5,73,122,249,97,41,156,160,144,151,40,160,126,175,100,71,159,148,4,39,111,26,146,216,44,139,62,216,193,198,185,33,165,108,138,61,232,14,154,239,107,127,177,147,94,173,185,59,237,231,13,17,230,42,42,137,168,74,104,24,190,79,175,94,161,184,227,166,172,221,128,134,184,21,181,177,108,241,145,242,222,133,192,90,248,19,230,235,115,34,212,214,49,51,74,47,160,107,170,81,167,135,234,204,17,237,176,94,211,212,166,235,251,41,122,87,224,180,22,18,135,236,235,75,81,61,94,132,242,227,219,217,86,99,108,188,197,37,226,68,206,138,96,74,124,174,174,198,50,148,250,178,19,61,237,88,36,7,204,42,103,241,72,142,124,21,51,19,148,20,189,72,71,134,40,57,41,139,92,81,200,245,235,173,71,58,26,195,36,9,115,233,219,130,182,165,56,254,15,237,39,82,118,178,224,199,95,42,156,181,153,38,104,212,80,253,155,156,91,36,73,74,26,44,218,232,228,76,130,150,192,8,23,143,84,68,70,54,230,122,12,141,231,135,199,95,201,178,146,251,95,122,237,46,167,237,109,11,166,98,94,149,100,126,88,47,65,246,108,238,141,172,133,28,75,126,129,125,16,106,84,110,135,170,84,117,192,19,45,154,232,167,113,173,170,22,98,43,72,38,196,75,103,172,101,193,108,47,94,103,153,246,235,87,57,125,113,243,60,156,24,227,167,46,174,32,4,212,112,37,107,197,227,231,177,95,76,102,168,91,164,124,162,5,22,149,64,157,217,203,242,192,238,13,177,152,205,116,39,218,143,165,16,144,73,110,3,162,5,64,4,107,3,146,139,162,150,18,131,241,83,57,238,77,144,190,106,6,206,200,116,8,211,162,31,73,216,195,113,100,108,24,117,30,233,126,214,93,63,39,184,92,174,251,158,14,1,166,82,25,198,158,3,144,51,11,240,218,1,16,143,235,216,253,123,65,116,183,166,25,65,22,50,146,178,161,34,138,100,229,213,53,0,146,107,108,53,128,85,227,202,69,196,128,41,138,174,139,34,131,215,30,61,36,76,27,91,130,28,107,4,134,129,42,222,33,243,30,172,70,17,93,161,216,72,111,152,109,192,112,233,44,191,74,94,167,105,143,34,91,174,173,162,169,117,124,67,36,227,164,33,93,163,99,79,233,1,185,230,226,219,174,198,211,105,5,70,168,106,70,11,182,42,90,45,136,66,239,49,52,136,47,215,36,199,238,22,222,243,178,212,70,170,87,46,5,153,144,44,186,11,245,154,30,6,221,141,216,26,191,52,166,31,132,247,0,208,181,217,77,136,106,191,90,144,236,199,34,253,175,131,144,238,68,159,7,59,151,238,140,164,138,170,151,219,22,168,14,113,13,44,40,129,75,154,94,1,95,45,228,69,111,197,218,221,88,178,189,232,219,59,63,110,224,244,136,204,237,225,132,61,97,136,23,199,240,246,64,74,124,157,25,103,234,67,27,75,99,195,161,69,160,74,255,131,242,210,11,170,188,244,101,187,188,96,248,129,35,186,229,218,157,105,108,93,35,7,196,196,35,107,14,144,158,195,145,67,197,97,92,234,12,67,74,130,51,92,211,65,102,41,23,124,193,180,84,64,202,185,10,37,228,110,112,89,118,253,180,69,170,124,177,197,19,143,67,49,237,134,237,4,142,51,156,149,173,41,101,248,241,143,54,222,59,3,146,7,90,237,84,188,3,239,219,233,242,117,154,55,143,154,208,248,17,53,45,247,88,116,40,103,250,56,173,251,68,154,50,245,140,73,124,141,94,220,187,66,116,247,106,59,236,118,162,159,201,54,192,164,31,203,62,111,147,35,55,157,126,11,229,72,45,27,98,3,195,6,28,61,97,106,188,212,68,67,7,69,205,51,116,70,212,212,125,115,170,73,147,63,68,7,194,164,135,104,19,131,192,28,220,152,124,145,156,96,205,72,171,174,205,172,170,121,225,120,153,224,229,26,197,129,220,7,82,47,79,116,251,195,237,130,108,218,100,203,108,181,141,181,93,185,188,47,203,87,166,203,133,179,12,217,109,77,27,173,152,163,207,172,184,99,70,154,34,149,1,54,3,73,199,20,171,76,105,243,94,248,147,83,44,150,235,215,44,88,146,42,21,147,128,170,230,190,209,83,110,106,88,9,57,86,119,127,219,223,253,193,39,232,232,7,153,216,14,236,205,132,116,191,187,125,252,245,100,216,231,249,227,122,217,221,197,238,3,234,126,77,24,172,128,207,18,156,252,160,254,235,212,13,106,189,134,218,107,186,205,181,64,187,117,10,186,157,214,60,26,218,99,13,249,61,221,181,101,10,32,239,125,33,218,173,245,81,155,90,255,68,140,27,129,117,83,119,179,225,217,151,31,121,216,98,12,119,227,152,235,119,94,192,189,120,187,30,215,114,186,46,244,189,219,91,39,192,14,124,102,56,84,248,115,89,171,93,28,2,91,199,54,245,204,54,240,12,160,211,21,78,13,76,203,179,31,36,157,160,191,129,198,183,197,245,15,2,162,212,52,8,131,64,232,225,207,222,7,176,39,101,118,97,7,171,67,33,7,164,247,192,173,161,249,31,133,218,239,58,116,59,81,6,246,94,80,145,145,46,204,92,76,93,72,29,188,26,78,62,0,90,94,32,131,176,82,89,81,174,12,65,147,162,54,72,146,178,123,81,36,75,160,6,144,36,221,15,60,146,127,200,7,142,255,63,206,127,135,143,243,230,51,216,119,253,70,223,248,116,209,255,82,118,223,107,98,72,85,243,23,0,109,225,205,137,163,103,242,217,87,164,233,157,221,206,77,247,20,36,165,244,141,135,32,1,46,235,23,112,103,238,184,243,72,234,110,52,203,198,15,74,130,109,178,239,148,163,230,219,253,25,43,244,163,10,88,251,11,128,201,229,77,9,37,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("3b101bb1-30c4-4d3d-b6ef-6f6e0f4efe33"));
		}

		#endregion

	}

	#endregion

}

