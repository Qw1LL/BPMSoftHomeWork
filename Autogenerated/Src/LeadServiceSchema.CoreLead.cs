namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: LeadServiceSchema

	/// <exclude/>
	public class LeadServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LeadServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LeadServiceSchema(LeadServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e0595561-29cb-475e-b0ba-b8ca0af81613");
			Name = "LeadService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("555d4b37-c88a-4293-9442-4a20aed79dca");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,84,77,79,227,48,16,61,7,137,255,48,42,135,77,165,110,122,135,182,18,176,130,101,69,1,53,172,56,84,28,76,60,45,214,38,78,240,56,93,85,136,255,190,99,59,253,162,31,156,246,18,201,227,247,102,230,61,207,68,139,2,169,18,25,194,197,195,48,45,39,54,185,44,245,68,77,107,35,172,42,245,241,209,251,241,81,84,147,210,83,72,231,100,177,56,251,116,102,124,158,99,230,192,148,92,163,70,163,178,45,76,138,102,166,50,28,150,18,243,131,151,201,57,103,154,249,210,135,113,79,248,178,2,172,90,55,152,92,137,204,150,70,33,109,223,51,137,49,69,225,147,243,237,137,193,41,87,130,203,92,16,157,194,15,148,117,149,171,204,151,111,170,121,92,183,219,237,81,93,20,194,204,7,35,172,12,18,106,11,153,99,193,164,52,144,163,144,64,129,144,244,186,11,40,51,199,77,26,54,213,26,110,236,217,197,206,169,186,67,203,141,84,92,233,69,229,202,206,71,248,86,43,131,5,231,165,120,253,224,212,66,31,190,160,56,84,210,4,100,219,21,169,234,23,86,210,244,120,203,253,53,141,192,41,92,8,194,165,186,136,223,151,191,78,34,44,53,46,2,236,215,247,2,237,107,41,161,66,195,74,11,98,153,194,100,175,64,170,80,185,48,96,48,43,141,164,100,153,99,93,125,136,84,194,136,2,52,15,90,191,229,156,186,145,173,129,235,232,27,65,173,213,91,141,160,36,139,80,19,133,134,221,243,240,21,219,160,173,141,166,193,106,204,160,156,108,19,137,153,11,168,227,142,239,185,99,255,144,235,214,71,99,150,116,163,103,229,31,140,135,65,88,31,90,15,247,233,99,171,3,191,141,122,196,162,202,133,117,142,183,174,148,150,163,160,46,13,98,93,211,140,187,40,229,60,181,243,220,161,56,221,16,137,196,20,151,209,228,201,136,170,66,217,113,245,34,247,40,72,246,138,189,19,118,131,16,66,201,47,42,117,7,70,188,132,188,64,120,24,231,95,118,241,180,183,138,108,239,186,86,114,0,187,91,141,201,26,55,253,148,189,98,33,238,216,255,14,56,188,31,215,27,217,6,183,218,81,52,227,87,148,155,147,239,94,248,220,76,137,251,208,248,23,216,65,78,85,187,181,226,104,237,38,110,252,12,239,224,233,209,30,68,220,170,121,35,248,66,135,87,115,6,111,4,218,158,254,225,182,52,138,62,173,158,31,177,29,77,53,37,251,97,99,195,166,207,249,175,99,123,59,18,12,226,61,178,218,103,75,225,205,24,135,5,113,247,63,49,231,193,249,255,226,59,95,240,119,180,206,73,118,68,55,108,76,119,203,217,39,19,246,218,185,39,209,32,62,96,88,99,235,218,92,54,224,102,52,217,208,61,236,196,13,176,15,110,16,226,245,201,109,134,54,212,8,155,254,41,191,191,250,240,191,179,240,61,65,45,195,31,222,29,57,246,15,131,96,94,227,237,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e0595561-29cb-475e-b0ba-b8ca0af81613"));
		}

		#endregion

	}

	#endregion

}

