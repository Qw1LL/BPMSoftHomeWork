namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: LandingConditionalTransitionElementSchema

	/// <exclude/>
	public class LandingConditionalTransitionElementSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LandingConditionalTransitionElementSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LandingConditionalTransitionElementSchema(LandingConditionalTransitionElementSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6934d897-6434-4bdb-aa9b-923cf38071ee");
			Name = "LandingConditionalTransitionElement";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d0bba11f-3986-4819-81ab-1d3ddbfc1f48");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,149,91,111,155,48,20,199,159,169,212,239,112,68,31,150,72,17,188,167,9,15,163,91,53,105,149,162,165,95,192,49,135,196,19,216,204,151,85,209,180,239,62,95,32,129,180,77,89,165,104,123,177,240,225,248,231,115,251,3,112,82,163,106,8,69,248,184,122,88,139,82,39,185,224,37,219,26,73,52,19,252,250,234,215,245,85,100,20,227,91,88,239,149,198,250,246,100,111,253,171,10,169,115,86,201,61,114,148,140,30,125,114,33,49,39,117,67,216,150,175,233,14,107,2,203,222,77,18,147,238,109,50,116,179,8,11,185,145,184,181,96,200,43,162,212,28,190,18,94,88,170,141,176,96,238,66,82,61,74,194,149,127,254,84,97,141,92,251,99,105,154,194,66,153,186,38,114,159,181,251,246,118,12,110,80,10,9,85,192,1,61,242,64,31,128,73,7,74,123,164,198,108,42,70,129,186,120,198,132,3,115,232,189,94,227,15,131,156,226,231,74,60,29,226,141,108,133,237,122,204,213,22,82,75,67,181,144,54,229,149,191,48,120,156,166,229,13,119,88,18,83,105,151,132,10,167,92,224,207,35,239,66,31,17,244,100,10,174,235,209,239,51,215,246,162,4,81,130,222,161,45,138,224,248,202,229,222,210,16,73,106,112,19,183,140,149,48,146,98,156,125,177,24,98,75,226,32,11,133,150,34,177,92,198,35,162,140,211,44,89,164,158,249,183,249,141,105,92,8,112,234,200,209,220,230,199,212,36,152,102,192,77,85,133,245,157,133,18,205,254,223,213,233,217,21,5,163,250,81,124,195,13,227,69,156,221,217,157,3,201,61,104,1,210,91,65,13,196,163,62,0,43,212,121,168,125,182,158,65,116,113,182,242,59,160,173,196,91,222,229,219,55,243,237,139,142,57,45,238,13,43,102,224,214,12,250,137,207,94,250,84,245,147,8,147,224,102,97,67,20,30,102,97,200,24,28,24,204,198,13,242,34,8,124,168,246,7,212,59,81,140,17,122,46,145,104,84,64,128,227,19,176,110,30,244,142,104,96,206,236,198,234,48,98,70,250,138,119,110,231,198,77,162,54,146,171,44,119,250,45,142,228,22,53,162,218,182,145,29,164,215,74,241,19,165,100,133,5,109,190,219,31,4,120,126,247,109,137,194,1,159,203,152,158,59,1,78,111,223,20,219,165,106,244,255,233,101,216,58,209,176,139,182,78,52,251,201,104,21,189,246,79,127,73,30,239,153,131,179,170,235,207,200,137,232,130,117,104,180,182,63,66,100,159,165,4,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6934d897-6434-4bdb-aa9b-923cf38071ee"));
		}

		#endregion

	}

	#endregion

}

