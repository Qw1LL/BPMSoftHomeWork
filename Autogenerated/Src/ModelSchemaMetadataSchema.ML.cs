namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ModelSchemaMetadataSchema

	/// <exclude/>
	public class ModelSchemaMetadataSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ModelSchemaMetadataSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ModelSchemaMetadataSchema(ModelSchemaMetadataSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("3aafb1e4-7ef7-46d3-9a1c-bf938d74b695");
			Name = "ModelSchemaMetadata";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("73704ec6-562c-4400-8a4a-17477a18625f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,88,75,111,219,56,16,62,167,64,255,3,161,30,182,5,188,246,61,73,13,180,73,211,13,144,184,217,216,232,30,22,69,64,203,35,155,40,69,106,249,216,212,13,242,223,119,248,176,252,82,98,209,14,10,236,197,22,37,206,204,55,239,33,5,45,65,87,52,7,242,241,230,122,40,11,211,61,147,162,96,83,171,168,97,82,116,175,175,94,191,122,120,253,234,200,106,38,166,100,56,215,6,74,220,194,57,228,238,187,238,126,6,1,138,229,39,155,123,206,25,157,10,169,13,203,245,214,183,91,43,12,43,161,59,68,74,202,217,79,47,10,119,225,190,55,10,166,184,32,103,156,106,125,76,174,229,4,248,48,159,65,73,81,168,45,133,223,212,235,245,200,169,182,101,73,213,188,31,215,231,160,115,197,198,160,9,37,185,223,74,238,153,153,49,129,235,9,53,84,131,233,46,72,123,43,180,127,159,227,71,212,217,40,154,155,111,254,5,140,237,116,10,234,156,233,138,211,249,219,236,97,128,70,122,204,222,185,175,149,29,115,150,147,220,193,107,66,119,132,198,194,223,90,143,27,37,43,80,134,1,42,115,227,105,195,247,77,21,252,139,207,96,52,145,138,32,86,189,80,66,160,108,7,124,27,121,128,126,13,229,24,212,91,7,145,188,39,153,219,158,117,200,165,190,133,127,44,83,48,193,151,70,89,240,224,23,232,181,81,206,27,158,230,129,76,193,156,56,145,39,228,49,17,219,36,88,104,29,227,104,198,234,13,248,4,63,42,12,21,196,97,36,25,3,49,51,32,218,201,165,26,101,0,144,92,65,241,62,115,80,178,94,63,210,117,200,216,26,239,62,50,179,37,21,191,43,160,19,58,230,224,37,233,117,81,37,2,144,130,207,241,225,59,242,6,161,129,20,8,52,176,66,204,5,49,243,10,72,118,37,229,119,91,101,132,138,9,201,62,74,201,129,138,44,193,180,81,219,65,131,133,11,202,117,163,137,99,12,29,106,233,223,240,129,86,62,33,219,227,141,20,173,177,158,133,253,7,226,68,119,130,2,129,5,69,251,196,72,13,224,154,62,228,85,146,181,111,183,105,247,211,198,69,41,22,4,161,49,144,74,226,50,216,151,40,253,132,30,254,205,191,148,91,168,151,163,85,14,91,196,203,189,77,38,216,160,219,173,254,21,211,230,116,171,24,141,214,216,244,201,250,90,55,89,230,13,136,73,40,92,126,29,222,110,188,220,85,161,215,197,164,212,107,111,149,38,187,183,43,220,207,151,230,77,88,237,10,117,251,112,89,3,219,62,70,154,200,158,143,142,154,162,109,153,255,178,32,216,246,248,62,217,64,213,212,150,32,76,98,50,52,145,61,175,104,77,209,50,1,130,186,125,242,97,65,247,242,17,126,41,42,107,14,25,65,98,23,180,26,21,193,14,88,58,214,132,57,174,251,14,39,209,90,97,70,57,33,35,215,234,112,233,254,119,140,44,94,25,114,252,75,166,24,167,190,111,195,181,247,63,112,46,239,209,10,62,6,208,98,10,142,151,93,185,67,178,1,250,16,231,74,247,56,130,31,198,253,199,6,142,79,104,22,24,225,4,153,210,190,157,244,214,157,196,155,177,109,235,184,20,19,150,35,34,77,238,103,128,201,162,162,95,245,76,90,62,137,19,16,102,209,114,46,114,51,11,134,193,105,222,23,150,243,211,94,222,119,6,91,153,135,38,18,225,64,119,64,7,56,21,213,74,158,89,133,237,205,240,121,39,112,171,168,66,229,12,10,196,5,195,113,27,181,74,176,8,171,77,177,219,46,99,244,204,234,158,116,219,152,25,117,70,64,13,131,22,33,236,29,114,33,221,194,37,69,18,248,203,160,112,107,236,113,255,203,87,133,47,214,28,88,22,58,24,57,44,159,45,34,102,165,66,84,136,152,185,249,249,176,30,24,32,254,31,146,61,38,249,175,78,236,54,17,240,188,115,235,100,244,71,142,88,1,188,161,15,115,221,141,227,171,151,110,106,116,195,77,131,112,228,204,132,211,153,242,169,84,24,113,101,130,81,11,102,118,219,116,5,229,5,51,1,40,193,167,77,3,31,29,61,9,252,2,168,177,10,8,43,43,169,12,117,231,6,111,72,157,130,53,240,184,91,242,104,132,222,33,159,74,102,206,161,160,150,155,175,126,214,108,82,42,34,186,172,153,69,189,150,47,182,212,123,220,51,60,154,61,180,127,168,212,78,216,17,45,95,41,222,187,132,67,0,98,41,144,171,68,88,194,58,171,118,201,39,138,149,8,56,184,25,202,31,170,245,18,223,130,3,150,39,162,177,173,177,130,161,129,3,229,10,175,20,231,5,138,221,193,246,7,213,179,33,152,83,38,76,159,92,68,204,109,219,208,112,251,202,33,178,112,183,14,238,182,193,93,25,96,174,91,142,182,9,23,82,193,101,73,71,215,85,242,4,149,66,183,239,227,249,117,141,65,107,237,254,180,120,139,102,240,6,4,176,200,229,235,165,119,55,236,64,117,151,84,70,175,61,77,83,49,117,201,112,116,88,54,20,91,53,97,143,180,120,34,141,119,100,198,160,142,100,35,171,26,0,222,69,73,53,209,62,70,12,14,163,11,132,41,113,142,252,234,2,101,238,60,191,187,92,226,69,232,33,181,10,115,129,140,100,181,80,210,252,229,216,158,57,174,79,212,168,167,135,24,244,40,222,177,25,218,162,148,185,33,206,247,120,119,160,113,54,137,254,243,71,27,108,28,7,79,43,75,44,47,61,155,232,132,19,89,138,119,3,65,250,77,141,63,131,245,113,74,118,228,251,221,85,29,58,84,182,212,80,250,9,50,105,38,136,67,103,252,107,80,174,73,78,232,254,73,114,98,131,142,127,251,13,119,136,232,63,197,200,151,214,11,25,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("3aafb1e4-7ef7-46d3-9a1c-bf938d74b695"));
		}

		#endregion

	}

	#endregion

}

