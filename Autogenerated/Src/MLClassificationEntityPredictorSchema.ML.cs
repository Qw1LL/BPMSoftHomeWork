namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MLClassificationEntityPredictorSchema

	/// <exclude/>
	public class MLClassificationEntityPredictorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLClassificationEntityPredictorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLClassificationEntityPredictorSchema(MLClassificationEntityPredictorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("a801449d-9c31-4f7c-9517-04f24b8b56df");
			Name = "MLClassificationEntityPredictor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("73704ec6-562c-4400-8a4a-17477a18625f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,223,111,219,54,16,126,118,129,254,15,132,247,226,0,134,220,1,125,106,108,1,75,210,4,6,236,213,152,157,189,20,197,64,75,167,132,171,68,106,36,229,214,51,252,191,239,72,74,214,79,43,206,128,0,65,108,146,119,71,126,223,125,60,158,57,77,64,165,52,0,114,179,90,174,69,164,189,91,193,35,246,148,73,170,153,224,222,114,241,254,221,225,253,187,65,166,24,127,34,235,189,210,144,92,55,198,232,18,199,16,24,123,229,61,0,7,201,130,150,205,130,241,127,202,201,91,33,161,62,242,238,105,160,133,100,160,202,249,242,72,184,190,146,34,0,165,234,231,107,219,46,23,222,156,107,144,17,98,234,8,85,91,246,254,64,236,120,104,107,136,166,147,201,132,76,85,150,36,84,238,253,124,124,27,83,165,88,196,2,187,31,97,73,26,67,2,92,187,161,136,208,1,128,4,18,162,217,112,190,92,124,230,154,233,253,74,66,200,12,156,225,196,39,148,135,13,163,211,242,97,243,37,211,71,52,242,138,221,39,141,237,141,35,141,149,200,157,151,139,27,170,160,177,201,97,193,148,62,116,35,172,31,31,241,102,177,62,30,135,100,114,102,131,14,8,206,246,235,29,68,20,157,111,24,15,145,208,145,222,167,32,162,81,219,254,106,76,126,71,81,145,25,89,46,48,87,74,55,15,129,137,220,34,135,27,12,112,245,173,55,242,41,230,212,32,156,118,97,241,253,87,239,151,102,219,152,5,36,48,70,198,167,102,220,0,67,62,145,78,202,251,14,132,91,224,141,193,255,131,95,36,60,25,149,216,99,201,204,56,170,79,100,101,247,119,22,77,197,217,137,57,103,154,209,152,253,11,138,80,194,225,7,97,232,79,57,94,82,212,155,126,134,170,156,94,0,96,4,104,145,26,133,181,37,230,102,82,42,105,66,56,178,56,27,102,10,36,158,151,187,251,60,244,55,184,157,153,35,193,105,210,155,78,172,135,13,144,179,249,194,49,70,143,181,176,54,98,57,188,66,154,183,72,242,168,57,109,42,207,224,152,147,9,60,116,124,214,201,197,244,166,32,53,22,14,164,86,10,141,190,16,58,147,180,24,146,29,147,58,163,49,18,169,201,13,213,193,243,134,37,32,50,189,134,128,204,124,242,235,199,143,31,62,92,247,164,228,1,180,178,204,167,78,76,196,136,148,176,16,11,1,66,6,217,199,238,142,198,25,156,134,155,139,130,148,62,37,6,177,3,41,209,154,60,100,44,36,21,85,207,67,131,193,232,196,172,140,46,184,6,215,253,148,46,65,63,139,176,205,103,39,53,121,142,21,113,133,214,144,164,82,8,12,162,208,32,253,185,39,63,152,126,38,240,83,75,74,172,112,144,74,250,29,56,137,164,72,156,184,52,85,223,47,85,168,141,233,132,105,191,214,228,216,178,78,68,8,177,179,182,95,251,173,67,170,169,51,102,60,205,52,49,227,126,143,212,193,71,218,140,196,55,136,99,232,63,22,144,28,242,210,164,70,66,59,174,4,157,73,174,252,156,82,228,79,218,154,130,150,197,210,25,73,156,47,71,69,126,76,61,93,131,220,177,0,86,54,41,150,187,49,94,220,165,161,197,189,170,142,162,177,217,100,48,184,115,103,198,60,76,177,122,97,110,199,68,108,255,198,141,125,75,139,113,189,195,207,85,139,128,10,224,98,42,191,202,3,7,35,207,91,126,222,253,200,37,198,158,99,158,87,186,199,121,56,182,219,24,173,158,106,64,191,0,29,89,138,68,88,183,141,12,159,216,14,69,182,53,215,221,20,78,9,129,144,225,197,133,240,245,194,185,23,178,36,99,232,191,32,27,43,226,229,130,40,151,148,75,180,252,134,90,51,14,175,18,91,207,3,120,146,220,121,109,205,173,251,121,133,57,137,213,8,29,147,110,5,187,128,255,67,139,59,42,43,171,43,87,152,102,182,142,154,88,10,244,220,214,128,67,129,7,113,224,41,183,153,109,116,209,50,194,190,9,200,209,10,116,208,162,194,54,150,134,83,247,101,150,39,56,143,213,166,206,154,249,231,238,130,67,217,65,138,179,47,103,62,243,48,21,248,204,141,91,216,198,205,151,207,93,173,65,71,38,177,43,69,228,62,17,246,211,96,45,112,120,110,73,85,92,251,148,80,92,201,89,17,202,187,165,253,46,163,43,111,35,204,250,40,63,94,94,50,242,72,213,106,208,33,205,157,192,167,113,77,119,245,126,13,194,63,205,123,170,58,5,233,158,83,243,6,235,253,137,232,158,122,154,211,10,161,155,168,170,169,108,145,126,147,79,185,148,42,189,31,78,102,230,167,195,168,217,100,141,201,95,141,206,231,250,20,51,98,49,54,243,24,204,158,198,253,72,218,227,175,44,61,117,141,105,29,226,189,181,246,71,181,147,84,162,165,117,66,10,185,151,247,176,198,208,184,231,93,241,115,220,131,67,193,99,131,24,130,89,194,229,252,122,148,2,53,217,145,222,249,28,181,5,109,172,214,193,51,36,212,60,10,167,76,53,193,228,169,115,132,121,95,248,26,133,147,214,163,191,252,152,152,115,21,157,94,179,48,190,201,195,81,192,113,14,110,84,237,9,47,121,16,10,202,139,166,168,213,61,84,218,117,121,254,206,148,156,191,229,69,233,82,66,101,103,71,153,73,239,185,174,160,67,0,249,14,213,236,54,122,91,156,197,191,255,0,42,166,249,176,238,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("a801449d-9c31-4f7c-9517-04f24b8b56df"));
		}

		#endregion

	}

	#endregion

}

