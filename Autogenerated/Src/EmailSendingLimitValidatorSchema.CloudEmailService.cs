namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EmailSendingLimitValidatorSchema

	/// <exclude/>
	public class EmailSendingLimitValidatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EmailSendingLimitValidatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EmailSendingLimitValidatorSchema(EmailSendingLimitValidatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("20f157cc-4117-4519-9a74-4b99e780aeea");
			Name = "EmailSendingLimitValidator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bbfdb6d8-67aa-4e5b-af46-39321e13789f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,219,110,227,54,16,125,214,2,251,15,3,239,139,12,120,229,237,107,26,59,200,197,94,24,181,219,32,78,218,199,130,150,198,54,81,137,84,72,202,89,183,200,191,119,120,177,45,37,82,146,125,73,192,33,231,204,156,51,23,89,176,2,117,201,82,132,171,219,197,82,174,77,114,45,197,154,111,42,197,12,151,226,243,167,255,62,127,138,42,205,197,6,150,123,109,176,248,245,197,57,153,115,241,120,50,182,162,36,215,147,229,7,158,44,100,134,185,110,123,168,48,185,185,162,11,186,250,162,112,67,239,225,58,103,90,159,193,164,96,60,95,162,200,200,97,206,11,110,254,100,57,207,152,145,202,189,30,14,135,112,174,171,162,96,106,63,14,231,5,19,108,131,26,118,254,165,5,147,107,88,85,249,63,128,22,13,180,135,131,220,226,37,7,148,97,13,166,172,86,57,79,33,181,57,188,145,2,156,193,21,211,184,64,173,41,98,45,179,136,84,165,191,39,50,82,104,195,132,33,66,183,138,239,152,65,127,95,250,3,164,246,30,184,48,240,32,92,86,152,133,128,211,156,109,96,4,95,127,241,234,68,95,200,236,65,155,17,166,28,243,172,11,254,138,184,59,22,147,29,10,51,151,155,13,42,248,123,213,98,125,39,202,173,146,37,42,195,209,69,146,6,83,202,212,63,121,89,9,103,248,142,70,131,217,34,148,82,107,190,226,57,55,123,48,210,50,69,165,170,210,64,186,101,220,213,39,84,75,42,109,43,242,186,36,68,38,196,3,185,35,103,158,33,172,164,204,97,166,47,87,82,153,63,68,208,223,230,57,26,195,154,229,26,127,134,142,43,249,71,184,212,58,9,173,114,144,59,233,186,210,246,173,212,90,130,86,227,200,185,69,173,229,129,139,11,136,219,111,70,32,240,169,21,49,126,208,168,168,3,5,169,71,172,251,253,119,84,89,160,217,202,206,94,178,77,74,82,92,86,25,71,145,226,189,180,141,122,45,43,97,226,239,21,207,160,240,195,48,203,250,96,87,75,20,237,152,162,137,203,41,120,200,113,233,14,47,179,162,45,144,87,133,136,167,149,72,19,143,215,155,101,189,126,63,153,42,89,196,189,35,179,123,166,54,104,122,125,7,30,37,127,109,81,97,237,218,250,132,171,153,158,60,86,44,143,61,114,114,203,20,45,67,106,188,248,148,99,63,185,20,89,205,251,142,150,37,205,34,118,163,184,81,142,23,244,150,166,211,29,116,242,202,253,14,89,182,247,210,216,32,192,116,96,109,151,95,20,41,52,149,18,65,149,100,242,3,211,202,224,50,101,57,83,231,164,239,56,182,37,138,162,231,15,215,233,253,73,12,195,65,107,241,176,253,86,123,191,0,53,172,73,96,218,117,178,202,142,11,82,237,120,138,29,29,237,44,165,21,19,4,9,58,234,57,39,146,194,224,15,211,27,223,208,124,63,113,179,165,90,167,86,103,181,175,79,12,23,107,121,62,116,222,39,48,175,135,30,215,38,56,148,8,248,26,132,52,160,171,52,69,204,146,243,225,225,109,199,74,208,70,89,114,7,186,241,177,52,33,63,159,70,56,212,91,148,134,116,70,185,81,143,46,61,251,203,146,39,182,209,211,212,54,227,156,44,182,47,232,137,42,92,138,177,155,55,90,255,225,253,29,62,86,72,91,220,67,70,228,254,27,238,155,112,222,230,238,159,125,137,35,226,23,135,208,201,13,101,182,119,95,24,215,255,48,26,181,126,14,14,89,31,219,200,81,78,38,69,105,246,30,244,249,200,138,133,49,13,128,13,246,201,29,166,188,164,235,16,110,12,223,224,226,205,23,103,205,219,240,221,155,101,58,89,86,69,220,190,21,14,60,201,221,57,223,217,191,66,83,46,93,180,191,30,111,238,101,198,246,15,54,134,7,121,1,208,56,214,178,63,152,206,224,219,73,228,166,18,231,77,239,159,145,244,244,179,34,240,191,199,162,204,237,106,28,217,197,56,79,255,93,58,111,106,193,138,22,83,215,175,135,147,127,47,72,212,10,78,160,33,153,169,107,188,184,51,252,160,75,208,129,167,214,16,96,208,162,241,160,41,137,79,138,218,29,89,186,5,138,171,78,187,157,198,184,171,21,250,7,41,219,62,69,9,253,155,40,37,107,43,120,0,55,148,252,61,47,48,121,48,233,239,242,105,208,166,226,97,158,67,28,7,217,235,7,102,164,220,11,77,6,208,252,186,36,215,149,82,228,98,173,118,131,27,150,26,90,204,245,210,134,202,191,130,122,99,19,123,107,211,248,252,63,129,84,109,83,113,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("20f157cc-4117-4519-9a74-4b99e780aeea"));
		}

		#endregion

	}

	#endregion

}

