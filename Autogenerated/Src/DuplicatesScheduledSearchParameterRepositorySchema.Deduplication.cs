namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DuplicatesScheduledSearchParameterRepositorySchema

	/// <exclude/>
	public class DuplicatesScheduledSearchParameterRepositorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DuplicatesScheduledSearchParameterRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DuplicatesScheduledSearchParameterRepositorySchema(DuplicatesScheduledSearchParameterRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1e7fb931-e492-400f-bd4b-8f3f35d7bafd");
			Name = "DuplicatesScheduledSearchParameterRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("4c53ad23-c903-414d-89cd-b08703861304");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,86,201,110,219,48,16,61,59,64,255,129,80,46,52,16,200,247,44,6,226,173,48,144,20,105,237,54,135,162,40,24,105,100,19,144,72,133,164,156,24,69,255,189,35,146,182,233,45,177,138,220,76,114,150,55,239,205,140,44,88,1,186,100,9,144,222,195,253,68,102,38,238,75,145,241,89,165,152,225,82,196,3,72,171,50,231,137,61,125,58,251,243,233,172,85,105,46,102,100,178,212,6,138,248,142,139,231,171,245,229,38,134,130,195,183,241,160,119,228,97,40,12,55,28,244,145,231,17,75,140,84,238,29,45,206,21,204,16,17,233,231,76,235,75,50,240,32,65,79,146,57,66,206,33,157,0,83,201,252,129,41,172,208,128,250,6,165,212,28,67,44,173,127,167,211,33,215,186,42,10,166,150,93,127,30,64,198,170,220,16,94,148,57,20,32,140,45,154,200,140,152,57,160,53,0,73,20,100,55,209,184,73,186,168,211,37,92,224,85,134,44,199,171,212,157,32,247,79,159,184,199,69,138,117,83,179,44,65,102,180,81,150,118,251,23,70,42,171,39,244,32,73,77,74,35,78,200,37,105,148,14,115,213,173,176,145,65,10,109,152,48,40,197,131,226,11,12,98,89,110,149,238,64,146,250,157,104,163,106,93,131,68,219,241,235,188,5,251,130,7,114,67,162,163,102,145,107,129,214,57,136,212,229,247,103,15,102,196,33,79,143,33,81,192,82,41,242,37,249,174,65,33,108,1,137,85,249,119,181,117,126,39,133,173,87,85,117,75,214,137,44,237,62,143,147,160,9,153,116,7,202,54,146,54,177,76,183,118,0,34,67,123,136,91,173,191,111,195,190,7,51,151,71,169,177,19,184,116,34,144,207,96,194,51,93,193,80,96,42,181,71,87,28,218,222,51,193,102,160,98,12,49,182,109,145,64,111,89,171,74,79,80,190,221,172,142,128,121,59,87,92,204,65,113,147,202,228,127,102,213,66,222,197,166,135,175,92,27,28,227,64,222,39,41,115,114,220,152,250,78,215,155,178,60,125,11,166,136,134,28,89,251,90,1,206,221,13,17,240,66,38,246,134,238,144,218,182,30,45,220,127,121,85,8,58,170,68,130,191,43,97,104,228,248,154,74,151,189,78,16,181,87,230,35,37,139,147,152,246,246,143,200,216,73,210,92,144,131,121,227,177,30,62,87,44,167,14,103,188,246,164,65,249,78,214,85,247,80,234,42,110,7,84,180,227,225,43,36,149,129,73,194,114,166,174,107,138,187,116,171,29,62,66,225,62,46,0,3,126,227,238,152,245,124,3,219,186,182,244,94,72,158,146,83,93,223,86,31,236,164,160,240,123,19,230,177,185,203,189,102,184,218,244,207,58,238,56,197,56,167,142,34,126,174,253,24,6,192,226,113,234,2,59,88,241,4,12,22,232,148,252,193,242,10,180,151,32,48,8,94,119,59,49,186,216,66,215,196,213,146,30,186,239,56,179,5,124,124,55,12,176,255,176,227,26,181,193,187,62,239,232,175,159,253,212,135,66,217,17,160,39,72,121,113,202,231,51,104,150,140,231,248,132,25,49,175,111,176,145,189,122,228,38,88,91,212,93,246,101,81,50,197,181,20,83,252,19,18,219,185,62,60,246,135,148,194,12,46,140,142,111,211,148,186,212,193,35,126,117,234,255,60,182,86,191,44,198,250,54,127,97,75,44,37,199,154,17,38,126,85,237,95,71,231,129,97,252,246,139,6,104,21,5,193,130,39,7,107,202,235,109,116,216,224,192,218,218,24,174,7,17,205,107,20,200,252,177,85,60,149,119,245,122,95,175,90,169,134,44,153,211,213,76,119,253,116,251,190,162,126,237,29,248,154,249,187,240,10,111,254,1,124,0,114,128,142,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1e7fb931-e492-400f-bd4b-8f3f35d7bafd"));
		}

		#endregion

	}

	#endregion

}

