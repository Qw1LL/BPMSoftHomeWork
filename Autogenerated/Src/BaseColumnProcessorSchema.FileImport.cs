namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseColumnProcessorSchema

	/// <exclude/>
	public class BaseColumnProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseColumnProcessorSchema(BaseColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9a78ff61-e56b-4033-9d63-6f39b2e2a039");
			Name = "BaseColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("52abf94a-4a51-4e9b-afae-86480a04ff1e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,88,75,111,27,55,16,62,43,64,254,3,171,246,32,1,194,234,30,75,91,36,182,236,10,173,93,195,142,219,99,65,237,142,100,54,251,80,72,174,18,213,240,127,239,240,177,22,185,47,173,29,163,1,122,145,118,201,225,204,240,155,247,102,52,5,177,165,17,144,15,215,151,183,249,90,6,167,121,182,102,155,130,83,201,242,44,56,103,9,44,211,109,206,229,219,55,15,111,223,12,10,193,178,13,185,221,11,9,233,73,229,29,143,38,9,68,234,156,8,46,32,3,206,162,3,205,129,127,154,230,89,211,58,135,230,213,96,145,73,38,25,8,220,70,130,31,57,108,80,4,57,77,168,16,239,200,7,42,0,5,23,105,118,205,243,8,132,200,185,38,155,78,167,100,38,138,52,165,124,31,218,119,67,71,182,37,33,89,225,97,18,41,70,65,121,100,234,156,217,22,171,132,69,132,174,132,228,52,146,134,178,73,34,121,71,150,7,168,188,205,5,231,57,159,120,219,28,168,180,28,4,74,65,92,241,247,112,47,132,79,210,76,226,221,144,133,68,64,33,54,20,219,242,149,68,138,134,160,86,10,171,143,251,45,220,45,99,36,222,2,151,251,43,52,41,153,147,161,93,30,158,116,28,189,129,53,112,200,34,184,141,238,33,165,13,92,234,20,138,161,214,23,178,216,168,236,235,79,206,25,36,177,214,158,237,240,162,165,238,250,165,20,252,87,84,195,232,18,31,232,6,142,112,215,232,240,34,146,57,175,3,84,181,185,49,186,134,91,16,166,97,69,79,207,215,68,34,54,72,9,104,124,14,235,249,176,193,164,195,105,168,124,162,238,20,102,101,75,57,77,73,134,40,205,135,133,0,142,122,101,198,247,135,225,29,190,43,156,237,66,48,155,106,234,208,55,68,131,204,209,157,199,137,248,140,199,100,30,146,10,197,188,66,115,4,61,107,93,140,165,158,216,121,1,67,64,217,137,164,198,80,45,232,28,46,104,77,125,218,102,105,162,18,202,96,176,1,105,159,6,108,77,70,237,158,65,126,152,147,172,72,146,113,73,62,224,32,11,158,117,59,147,162,123,52,127,203,27,16,121,193,209,151,209,123,20,67,97,255,231,21,88,131,63,115,254,73,167,197,160,114,196,50,236,80,18,117,132,47,228,183,60,162,9,251,135,174,18,60,169,96,24,89,89,19,210,232,108,19,123,163,193,176,118,82,168,188,218,44,44,248,131,38,5,12,199,86,171,158,112,104,52,30,59,172,126,70,37,37,59,197,218,4,74,145,177,207,248,204,98,192,68,188,102,192,143,154,254,41,99,94,20,44,214,252,180,166,54,37,145,7,130,70,63,33,93,58,84,99,232,152,196,74,92,84,94,125,129,109,209,177,216,225,5,85,100,232,180,111,243,150,41,1,160,182,12,193,47,52,139,19,224,179,186,85,244,246,123,190,17,33,113,151,143,196,228,37,200,251,60,126,102,50,51,38,238,155,160,12,181,113,150,208,198,180,177,47,203,214,57,79,105,45,77,105,22,198,159,68,104,202,86,41,115,54,45,215,125,11,184,181,207,234,105,94,70,238,142,86,194,178,210,207,58,171,169,144,241,206,219,8,95,102,49,124,197,144,114,232,109,52,232,29,27,53,183,58,66,43,100,250,87,123,250,73,111,60,73,12,66,178,204,192,209,19,91,21,19,114,111,170,227,48,212,173,202,158,8,253,90,71,180,237,160,185,83,229,248,1,240,14,46,175,105,90,239,250,125,204,124,118,160,247,44,238,172,143,22,206,53,137,123,103,107,60,119,223,234,95,71,6,251,167,103,251,144,171,92,233,78,226,87,216,163,159,92,128,92,10,108,79,148,85,207,152,216,38,116,111,93,213,83,176,65,145,113,233,114,101,55,132,220,92,170,0,151,44,137,57,96,251,168,58,167,64,237,120,164,250,42,237,244,21,34,123,244,80,209,205,189,106,119,63,16,140,154,112,117,81,60,26,45,231,44,139,155,98,229,121,101,162,230,195,14,167,39,31,246,93,177,197,123,63,54,139,109,115,93,93,140,212,29,140,12,91,141,70,109,78,227,168,160,29,204,85,169,206,101,220,5,28,26,166,17,183,24,214,180,72,164,106,176,172,145,94,146,118,190,91,246,56,237,117,163,54,115,236,24,151,5,77,200,25,211,69,26,175,58,51,45,227,132,228,171,191,145,38,60,230,208,175,155,65,12,55,149,70,58,52,42,91,207,193,67,211,220,53,169,247,58,182,247,236,140,171,51,144,192,83,150,169,41,101,109,149,247,205,72,152,64,72,117,194,34,177,201,88,207,236,1,190,67,157,42,205,62,139,66,28,217,96,54,141,194,201,11,46,216,230,63,171,60,79,58,82,121,123,225,33,189,60,166,28,51,118,148,163,114,77,34,48,227,174,105,34,108,91,109,199,157,109,3,97,67,82,215,25,228,186,133,86,39,19,59,15,181,241,11,150,226,42,151,87,56,15,253,206,23,233,86,238,71,227,167,193,168,85,221,86,102,139,207,24,137,77,21,66,151,41,171,142,113,101,59,101,52,203,208,132,93,125,253,45,118,193,194,182,211,120,61,236,240,119,24,60,42,27,152,180,35,244,136,215,183,175,133,36,121,250,64,49,12,59,221,216,78,173,62,149,147,140,114,172,13,74,57,183,115,31,89,155,122,114,38,229,96,107,57,186,126,2,229,4,96,199,192,142,25,225,41,147,156,186,204,85,19,235,9,179,68,135,233,210,74,53,6,49,118,113,249,255,28,44,179,93,254,9,70,242,158,9,236,96,74,113,227,255,216,50,110,97,121,14,226,71,178,180,1,173,118,234,167,225,67,203,136,240,232,109,220,228,95,204,234,112,210,254,93,194,131,234,248,212,230,12,139,47,77,238,17,205,200,10,202,207,44,16,191,118,19,208,59,51,91,13,148,119,171,124,156,227,35,126,135,168,102,96,51,18,151,229,91,167,225,83,90,34,57,234,153,92,203,122,91,45,152,29,169,200,35,85,157,118,103,207,229,227,222,208,124,189,20,245,23,183,171,223,130,118,21,229,94,77,171,137,22,221,246,154,251,151,77,201,188,161,13,118,79,158,184,153,222,59,90,154,167,106,182,227,249,229,101,159,46,254,71,227,117,179,97,219,63,155,124,107,3,99,107,71,175,140,234,105,97,99,101,238,171,227,158,50,254,209,195,7,43,76,220,15,3,199,70,237,178,244,213,229,90,56,29,102,34,120,31,31,245,224,142,180,110,86,253,69,92,251,23,239,69,219,72,30,27,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateColumnProcessErrorMessageLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateColumnProcessErrorMessageLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("f5c3f411-8079-4921-aed5-e94df64178aa"),
				Name = "ColumnProcessErrorMessage",
				CreatedInPackageId = new Guid("79cdeed7-eef0-4dd8-9765-07d140cf1035"),
				CreatedInSchemaUId = new Guid("9a78ff61-e56b-4033-9d63-6f39b2e2a039"),
				ModifiedInSchemaUId = new Guid("9a78ff61-e56b-4033-9d63-6f39b2e2a039")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9a78ff61-e56b-4033-9d63-6f39b2e2a039"));
		}

		#endregion

	}

	#endregion

}

