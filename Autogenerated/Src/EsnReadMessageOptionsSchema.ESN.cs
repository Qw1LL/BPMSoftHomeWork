namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EsnReadMessageOptionsSchema

	/// <exclude/>
	public class EsnReadMessageOptionsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EsnReadMessageOptionsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EsnReadMessageOptionsSchema(EsnReadMessageOptionsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("672d0a48-9259-47c8-a7b7-f0e3ba2e0df3");
			Name = "EsnReadMessageOptions";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b66b5ae8-46e0-4931-ad78-c2c1ba5fd6ea");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,77,111,211,64,16,61,27,137,255,48,148,75,42,85,14,28,184,148,166,168,164,69,10,34,73,69,90,14,160,10,109,236,113,178,176,222,141,118,215,129,128,250,223,153,245,218,241,71,156,16,184,36,241,236,124,188,121,158,55,27,201,82,52,43,22,33,188,189,29,207,84,98,195,161,146,9,95,100,154,89,174,100,120,51,155,60,125,242,251,233,147,32,51,92,46,96,182,49,22,211,215,173,231,240,99,38,45,79,49,156,161,230,76,240,95,121,108,229,53,193,31,86,73,227,178,191,55,245,131,170,102,154,238,183,239,13,210,184,107,157,100,220,193,88,243,8,199,42,70,17,94,51,203,168,39,171,89,100,201,157,2,158,107,92,16,62,128,27,153,165,231,48,83,218,98,60,70,99,216,2,135,74,100,169,204,221,86,217,92,240,8,144,156,186,125,2,199,75,48,212,200,232,108,42,97,0,47,206,156,229,3,51,246,42,114,20,228,198,151,100,123,244,133,81,198,190,118,19,199,80,48,99,206,225,198,200,143,200,202,42,211,149,203,96,114,207,126,191,15,23,38,75,83,166,55,151,197,179,115,117,141,167,222,221,128,242,1,97,233,223,175,5,124,169,179,240,80,53,23,185,202,251,10,251,254,74,148,20,109,172,206,34,171,52,97,189,205,227,115,112,101,174,206,44,189,83,200,179,4,181,163,161,162,113,113,196,188,114,175,47,8,60,185,111,55,100,234,224,57,220,18,236,189,167,58,70,125,205,53,230,12,83,76,211,16,94,163,137,136,103,162,38,247,247,204,183,169,223,118,117,171,213,10,181,229,216,234,169,205,120,110,240,192,85,82,113,110,21,204,17,52,90,205,113,141,177,227,126,151,124,207,254,24,211,57,234,222,132,4,71,160,79,218,124,156,156,62,212,184,228,84,103,135,177,223,176,64,251,26,140,251,120,60,0,115,68,221,71,68,153,129,31,75,180,75,212,192,132,0,137,36,213,24,34,146,20,74,107,192,44,85,38,98,7,95,40,22,255,19,246,145,140,68,22,19,42,159,170,9,125,174,148,128,150,199,209,208,103,223,249,170,100,215,161,215,8,38,31,9,194,237,134,1,214,76,100,132,152,60,192,46,153,220,7,122,180,144,180,29,42,232,117,128,100,197,59,218,86,48,77,18,2,228,30,187,240,117,53,94,69,148,61,107,190,118,241,164,12,167,197,175,170,158,50,31,87,202,91,254,12,104,78,50,45,183,0,92,129,79,174,159,187,205,170,218,157,216,171,170,156,129,243,251,172,36,142,100,162,194,123,27,157,122,17,16,70,250,36,175,66,93,193,154,105,136,49,162,141,231,148,229,22,166,19,194,54,101,78,91,17,27,212,250,30,56,48,204,213,191,183,92,112,167,131,48,135,116,101,156,241,162,132,122,217,43,146,215,235,31,124,145,254,173,149,175,114,190,33,23,68,136,52,38,131,147,14,149,159,64,255,242,31,38,176,92,25,205,209,235,200,11,219,229,114,236,8,230,235,4,226,237,130,169,225,110,110,154,67,144,15,205,95,107,129,181,30,143,157,196,38,148,230,52,210,246,120,67,179,248,215,196,157,253,95,197,49,205,129,146,76,64,194,133,69,109,254,167,201,119,62,116,251,125,100,91,133,251,30,117,21,120,138,153,207,149,213,16,150,27,123,186,166,214,180,208,43,57,77,231,223,136,129,94,145,121,159,126,120,2,189,103,190,78,56,50,147,76,136,169,190,73,87,118,83,72,167,188,198,130,160,236,104,208,40,87,19,155,47,120,81,248,93,54,181,247,184,35,159,125,55,211,152,86,183,138,221,181,228,89,40,72,155,202,90,169,184,65,211,90,241,24,154,231,189,153,165,219,51,165,174,220,229,143,63,45,68,101,39,59,247,104,123,96,6,3,144,196,3,188,217,127,195,194,57,244,154,135,167,173,44,7,238,224,174,255,68,100,251,3,204,174,178,40,146,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("672d0a48-9259-47c8-a7b7-f0e3ba2e0df3"));
		}

		#endregion

	}

	#endregion

}

