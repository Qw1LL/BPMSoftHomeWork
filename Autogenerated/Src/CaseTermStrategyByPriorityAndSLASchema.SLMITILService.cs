namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CaseTermStrategyByPriorityAndSLASchema

	/// <exclude/>
	public class CaseTermStrategyByPriorityAndSLASchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseTermStrategyByPriorityAndSLASchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseTermStrategyByPriorityAndSLASchema(CaseTermStrategyByPriorityAndSLASchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("99e2e60e-c28a-44b3-b5a6-f027322df2c4");
			Name = "CaseTermStrategyByPriorityAndSLA";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("914c52f8-7161-4b32-82f6-d4cef8b3a889");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,85,77,143,218,48,16,61,103,165,253,15,211,244,18,36,20,122,222,5,36,150,253,16,210,238,150,10,218,30,170,30,76,50,128,171,196,206,218,14,85,186,218,255,222,113,28,54,33,208,165,85,191,46,40,30,143,223,155,121,111,108,4,75,81,103,44,66,184,152,222,205,228,210,132,99,41,150,124,149,43,102,184,20,167,39,143,167,39,94,174,185,88,193,172,208,6,211,243,214,154,242,147,4,35,155,172,195,27,20,168,120,84,231,212,160,105,42,197,161,184,194,195,209,240,74,24,110,56,106,218,166,132,215,10,87,68,1,227,132,105,13,103,48,102,26,231,168,210,153,161,66,113,85,92,20,83,197,165,226,166,24,137,120,118,59,42,15,245,122,61,232,235,60,77,153,42,134,213,122,4,186,58,2,102,205,12,196,104,8,134,11,212,96,120,138,96,87,26,22,5,100,21,30,48,17,3,33,134,91,192,94,3,49,203,23,9,143,32,42,171,58,86,211,139,101,19,216,163,87,86,93,247,74,146,26,149,71,70,42,219,242,180,228,114,41,237,206,202,192,68,144,96,44,225,223,168,23,6,2,191,2,39,0,38,200,92,185,164,110,145,142,32,66,164,112,57,240,143,21,235,247,134,174,45,219,247,126,227,46,146,49,197,82,16,52,67,3,159,169,149,246,135,115,98,161,175,60,69,97,116,216,239,149,25,229,129,74,170,99,188,193,123,141,138,58,23,110,166,32,223,89,118,225,146,151,31,84,70,159,196,161,169,233,130,92,124,161,221,161,229,213,29,75,229,157,193,130,104,130,246,217,50,1,236,68,123,79,149,212,40,98,167,246,174,244,119,104,214,50,46,85,87,124,67,133,186,237,204,45,96,33,101,2,115,85,204,208,140,89,66,24,76,93,43,153,206,80,109,120,132,19,81,125,76,89,100,2,82,27,110,114,30,67,84,101,78,226,170,6,111,195,20,160,126,128,65,105,86,57,240,197,44,90,99,202,222,229,168,138,150,20,97,51,225,142,9,182,66,213,5,255,16,169,223,57,127,38,168,105,233,166,230,169,184,39,183,136,145,120,195,81,92,197,2,26,7,151,21,78,98,191,19,218,28,135,96,211,174,121,66,183,66,135,183,114,197,9,237,109,134,238,113,32,148,118,136,92,37,127,66,178,114,255,56,177,5,118,61,86,72,26,186,232,71,110,214,83,59,34,246,22,234,192,5,233,177,160,177,225,90,138,121,145,209,67,240,144,179,164,209,40,61,58,126,23,182,243,115,201,12,179,161,176,177,77,10,119,254,26,127,169,239,143,249,237,118,205,239,44,171,159,72,136,234,79,231,193,13,154,118,82,203,247,10,138,47,33,168,79,135,19,125,47,205,85,154,153,34,232,108,231,201,171,189,38,244,58,249,211,155,207,150,199,118,83,25,254,129,37,57,246,237,88,14,131,67,3,82,113,210,45,161,95,133,38,87,84,122,13,254,106,64,239,230,146,229,137,9,44,134,203,126,58,122,71,254,195,181,248,179,183,193,81,129,174,177,219,46,182,138,59,58,39,181,183,77,80,210,87,228,73,114,216,215,70,226,191,115,245,103,30,74,105,168,105,140,183,99,80,45,65,110,80,41,30,163,179,155,42,222,170,59,137,131,166,229,59,77,238,23,226,89,145,126,225,205,109,204,213,179,142,123,61,55,5,217,199,255,109,200,106,211,254,25,89,171,154,141,191,32,174,139,238,6,159,190,3,254,153,224,100,169,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("99e2e60e-c28a-44b3-b5a6-f027322df2c4"));
		}

		#endregion

	}

	#endregion

}

