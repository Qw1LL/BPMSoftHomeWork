namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ITestMessageProviderSchema

	/// <exclude/>
	public class ITestMessageProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ITestMessageProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ITestMessageProviderSchema(ITestMessageProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("bff25474-28b1-4347-ac89-5067a0c9bd19");
			Name = "ITestMessageProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b07b1682-f254-48a2-90d7-644c52f4c69e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,85,77,111,26,49,16,61,39,82,254,195,40,185,180,82,5,247,36,229,16,146,70,72,69,66,161,183,170,7,227,157,101,173,120,237,173,199,46,66,81,254,123,199,54,27,8,5,186,136,28,64,172,215,239,195,227,55,131,17,53,82,35,36,194,221,100,60,181,165,239,13,173,41,213,60,56,225,149,53,23,231,47,23,231,103,129,148,153,195,116,73,30,235,155,173,103,222,175,53,202,184,153,122,143,104,208,41,201,123,120,215,149,195,57,175,194,200,120,116,37,75,92,195,232,7,146,31,35,145,152,227,196,217,63,170,64,151,246,246,251,125,184,165,80,215,194,45,7,171,231,213,6,130,50,152,196,47,180,242,75,40,173,3,207,52,80,103,30,32,52,5,251,233,181,52,253,13,158,38,204,180,146,160,90,11,123,28,156,241,41,249,251,205,242,24,125,101,11,186,134,73,194,231,151,219,30,211,194,148,197,41,251,153,5,253,12,88,11,165,223,172,45,148,175,160,88,26,81,179,9,105,217,133,241,189,21,70,104,13,14,27,166,23,4,170,132,181,4,34,72,135,229,215,203,184,113,195,239,189,240,162,247,148,33,99,65,207,116,217,31,64,227,108,131,142,235,98,75,240,21,66,35,28,95,41,31,23,110,211,79,38,2,214,199,175,151,5,195,25,209,234,40,2,19,216,3,151,19,235,198,47,191,196,95,178,178,92,206,13,95,6,132,177,204,203,175,4,97,172,241,191,69,206,43,73,109,83,106,16,253,50,213,239,160,28,22,251,239,237,182,159,160,107,38,135,62,56,67,131,39,164,160,61,197,147,81,144,146,97,101,208,45,44,241,161,144,85,107,150,121,90,96,100,218,170,93,230,74,165,191,31,110,172,127,218,81,99,136,246,63,231,16,159,93,241,251,156,138,244,252,154,163,253,126,177,141,205,80,11,226,208,236,160,220,27,242,4,73,103,89,56,209,52,241,96,89,191,67,225,14,4,94,38,218,157,70,182,179,62,201,1,82,216,37,238,163,130,19,172,74,197,121,88,229,109,35,245,14,165,117,197,158,140,172,140,61,6,85,192,29,99,30,34,100,84,192,11,204,209,223,240,153,248,235,245,40,229,216,79,66,250,238,178,195,12,56,73,84,43,243,204,119,18,151,185,231,58,75,127,79,176,135,132,58,66,63,21,9,68,193,97,35,226,73,184,50,193,178,170,81,236,129,39,79,37,60,8,151,170,33,5,207,23,254,20,121,238,112,142,80,171,90,241,44,56,236,144,188,139,185,75,98,79,107,234,174,38,211,40,138,214,222,166,70,50,69,149,13,186,128,89,202,171,63,236,128,231,243,207,95,176,57,218,118,169,159,222,138,121,10,28,215,140,46,79,142,212,147,177,254,31,209,137,173,143,211,122,145,181,227,149,19,44,42,254,191,226,140,198,108,180,227,113,193,247,176,158,154,135,203,63,179,86,195,52,111,62,245,218,223,235,234,101,231,219,231,18,249,255,37,224,88,35,37,39,154,219,193,219,84,150,46,46,190,37,196,7,36,145,29,255,5,131,243,178,86,92,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("bff25474-28b1-4347-ac89-5067a0c9bd19"));
		}

		#endregion

	}

	#endregion

}

