namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MailBoxLanguageRuleSchema

	/// <exclude/>
	public class MailBoxLanguageRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MailBoxLanguageRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MailBoxLanguageRuleSchema(MailBoxLanguageRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("fc4d8990-f2e2-4576-b335-ed3319c70f9f");
			Name = "MailBoxLanguageRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("33bac096-c819-4c57-86af-fe71bbb0cb56");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,75,111,227,54,16,62,103,129,253,15,83,247,34,3,134,220,115,54,118,145,120,147,192,69,92,100,227,108,123,88,228,64,75,180,205,66,34,21,146,114,87,88,228,191,119,248,208,91,182,179,135,158,108,13,231,61,243,13,135,156,164,84,101,36,162,112,243,184,90,139,173,14,23,130,111,217,46,151,68,51,193,63,126,248,241,241,195,69,174,24,223,193,186,80,154,166,159,58,223,200,159,36,52,50,204,42,188,167,156,74,22,245,120,30,24,127,173,137,181,37,73,135,169,225,45,215,76,51,170,240,24,25,126,149,116,135,250,97,145,16,165,46,97,69,88,114,35,190,63,16,190,203,201,142,62,229,9,181,108,211,233,20,174,84,158,166,68,22,115,255,253,40,197,129,197,84,65,226,185,97,43,69,10,42,207,50,33,53,164,168,106,35,190,83,53,1,189,39,26,136,164,192,120,148,228,49,141,241,143,22,16,17,69,65,210,136,101,140,114,173,194,210,206,180,97,40,203,55,9,139,32,50,238,13,121,7,151,112,131,106,218,14,95,152,204,214,161,97,250,52,65,3,151,232,50,59,16,237,66,186,200,220,7,68,230,28,148,150,38,85,11,84,182,142,246,52,37,127,98,249,96,6,35,67,25,125,58,42,112,141,245,57,48,93,180,133,74,234,9,193,71,76,8,215,37,35,150,58,79,121,41,222,62,11,151,241,9,61,79,101,2,219,42,144,76,45,249,132,232,66,100,197,17,113,127,116,86,133,47,201,157,144,75,30,97,55,112,253,132,89,199,67,219,227,237,164,172,92,71,28,225,61,111,164,44,114,219,83,175,117,93,240,104,77,181,70,126,21,174,168,82,200,88,10,156,78,224,154,242,152,202,91,211,175,215,113,44,81,244,188,129,190,140,49,96,187,14,79,92,227,249,111,223,133,136,150,140,74,3,60,211,134,66,35,174,105,92,54,162,255,132,207,204,162,29,123,255,202,57,55,241,78,206,225,58,73,24,241,158,173,72,6,182,197,47,118,84,219,192,222,78,27,183,16,144,121,164,133,52,230,45,166,28,71,23,216,150,176,144,20,179,164,16,165,6,56,56,192,196,22,153,40,230,77,210,237,108,52,0,195,209,116,110,224,219,199,175,163,100,68,146,20,56,38,116,54,202,21,149,232,15,119,131,109,52,255,138,223,166,32,158,16,94,77,45,183,21,246,232,31,48,24,124,109,169,129,182,214,177,77,206,229,6,161,27,116,78,124,226,186,233,156,1,167,255,158,200,127,48,126,79,158,87,84,239,69,124,108,208,28,4,139,1,219,197,89,85,129,157,196,126,112,124,201,169,44,128,170,215,9,44,111,121,158,82,73,54,9,245,94,204,49,63,86,164,244,126,139,131,156,68,123,8,124,11,187,99,172,87,151,177,27,231,55,119,254,130,241,162,173,176,114,38,112,244,113,104,154,222,70,106,66,173,226,45,35,112,230,190,189,192,61,173,166,83,53,64,84,112,159,99,128,102,170,187,200,240,68,200,120,25,151,206,216,227,172,53,218,150,49,122,130,202,218,3,111,25,7,3,90,156,91,108,11,65,95,7,42,65,229,225,109,154,233,162,138,93,82,157,75,14,60,79,146,70,72,86,195,179,44,26,33,56,67,61,181,19,16,185,134,3,145,64,90,140,227,202,130,79,127,117,135,97,48,109,86,188,182,245,115,145,81,159,230,191,72,146,87,69,13,6,70,175,15,178,84,28,53,167,240,207,41,63,50,219,219,6,176,146,245,253,139,250,29,53,252,67,48,30,140,62,141,38,245,233,164,237,203,56,196,138,97,133,26,3,48,24,135,207,226,90,74,82,120,172,84,5,168,77,52,203,208,173,78,167,213,108,179,12,117,198,153,38,27,4,149,135,119,239,172,51,69,194,38,195,138,112,156,53,114,210,89,9,124,108,6,61,40,124,29,167,140,63,177,221,222,166,111,75,18,229,209,211,128,185,5,53,154,199,100,255,56,126,235,191,121,197,206,133,14,76,60,92,49,29,190,85,219,126,99,113,142,193,229,24,230,218,164,193,78,50,162,243,160,59,64,142,5,240,226,13,250,178,118,77,14,149,120,35,68,2,131,72,180,94,147,14,16,125,102,58,88,28,40,123,197,226,63,103,112,190,204,225,29,227,241,210,223,119,55,133,137,40,232,175,118,62,198,182,11,13,92,58,206,208,221,159,131,165,26,212,112,178,147,124,66,59,18,119,84,71,251,59,220,183,63,223,4,117,162,198,67,105,118,18,245,91,194,160,106,104,1,179,96,86,193,192,100,248,223,176,229,198,196,123,119,200,241,105,104,29,223,18,75,108,25,12,221,177,68,83,169,204,213,103,196,125,173,28,245,111,166,247,216,223,40,98,88,2,71,92,136,20,155,153,41,193,13,66,194,219,215,156,36,147,147,75,163,15,171,241,178,193,17,162,175,196,230,31,76,5,110,18,227,54,84,90,200,174,203,52,216,56,239,222,63,206,173,120,253,199,155,77,60,219,50,220,198,236,59,174,122,191,1,110,27,230,229,102,25,176,43,234,210,188,119,229,235,79,167,209,220,76,85,160,14,64,181,233,214,246,103,245,48,190,199,119,175,142,69,4,211,230,78,40,14,84,74,20,172,46,138,178,238,231,175,136,225,187,111,120,165,57,185,135,212,242,191,135,15,148,239,244,30,230,240,91,181,29,152,205,193,103,177,129,190,217,25,252,53,96,231,175,209,106,219,243,243,38,117,141,110,214,189,158,250,202,120,211,122,157,26,152,129,63,190,240,90,126,98,244,31,5,88,57,251,93,86,250,70,127,25,92,207,42,0,244,4,74,109,110,81,240,63,173,173,161,86,119,2,22,142,218,38,190,253,7,109,194,104,157,150,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("fc4d8990-f2e2-4576-b335-ed3319c70f9f"));
		}

		#endregion

	}

	#endregion

}

