namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseBrakeMailingStateSchema

	/// <exclude/>
	public class BaseBrakeMailingStateSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseBrakeMailingStateSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseBrakeMailingStateSchema(BaseBrakeMailingStateSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5db3ffbb-42cb-49e9-93bf-aaabc11728ef");
			Name = "BaseBrakeMailingState";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b39fd9cb-6840-4142-8022-7c9d0489d323");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,84,75,79,227,48,16,62,7,137,255,96,149,139,35,85,22,151,189,128,88,137,134,130,42,81,212,37,237,114,54,241,52,181,72,237,172,237,148,151,246,191,239,56,175,54,52,101,17,135,62,236,153,249,230,155,111,102,172,248,26,108,206,19,32,163,217,52,214,75,199,34,173,150,50,45,12,119,82,171,227,163,247,227,163,160,176,82,165,36,126,181,14,214,231,237,121,27,96,128,93,141,208,128,166,19,3,41,198,145,40,227,214,158,145,17,183,48,50,252,9,166,92,102,24,20,59,238,160,116,204,139,199,76,38,132,63,90,103,120,226,72,226,3,250,253,201,25,233,134,7,72,10,191,183,201,180,178,142,43,135,9,103,70,110,154,20,65,94,29,72,226,237,68,42,135,248,46,89,197,242,13,200,5,249,113,122,90,113,14,78,64,137,10,170,139,59,51,58,7,227,36,148,192,218,65,226,64,52,208,245,113,91,193,77,33,5,185,150,138,103,247,144,200,92,130,114,247,168,45,230,6,242,78,82,112,231,228,239,193,96,252,41,53,246,5,54,81,145,46,148,139,116,86,172,213,29,182,233,203,32,227,13,166,70,190,169,1,107,35,158,251,70,222,38,111,113,105,141,180,248,38,210,20,63,60,133,207,144,14,9,57,5,183,210,162,79,197,170,65,27,141,210,61,24,233,224,86,167,180,20,242,177,200,158,198,107,108,251,68,12,203,214,153,70,212,82,150,144,248,193,12,2,185,36,180,107,33,63,201,105,99,13,70,13,74,89,9,130,167,96,24,254,76,212,82,211,78,138,43,228,49,151,107,96,11,151,220,233,231,97,21,31,220,128,107,11,254,205,179,2,232,127,213,13,191,24,219,167,103,56,244,195,236,224,197,177,133,5,131,255,21,202,133,25,88,84,24,131,193,254,214,175,168,195,46,33,237,58,211,7,109,252,142,6,1,246,164,252,234,182,184,148,58,6,119,89,8,12,72,218,97,163,173,84,91,233,27,25,55,220,144,34,23,168,144,168,36,190,32,126,117,208,34,116,163,244,175,2,204,107,237,133,118,5,207,100,81,30,104,127,65,67,50,104,51,206,185,193,41,26,132,117,53,12,233,209,173,181,97,56,17,3,175,142,95,7,54,227,6,55,194,129,161,253,11,23,134,236,97,5,6,232,0,163,66,54,81,180,198,14,60,177,24,50,36,113,128,88,200,230,58,167,237,67,17,178,42,37,29,88,76,95,193,93,27,189,166,7,233,99,1,151,214,187,183,28,202,200,214,189,98,100,199,127,10,158,209,189,122,90,241,217,68,132,187,144,74,244,107,178,227,115,16,180,126,62,203,119,210,178,61,148,123,224,226,117,174,99,220,94,159,180,158,159,224,67,203,171,35,27,191,64,82,96,91,27,175,170,241,45,237,197,183,38,160,219,251,207,94,193,102,228,171,188,213,253,248,37,247,11,229,215,228,82,8,234,51,247,90,63,5,14,91,228,96,79,191,93,37,80,159,238,108,125,173,147,181,90,31,116,218,83,179,125,4,119,163,135,157,237,107,214,155,60,175,100,6,164,67,174,124,252,74,123,255,139,92,221,118,47,241,238,31,50,149,51,162,6,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5db3ffbb-42cb-49e9-93bf-aaabc11728ef"));
		}

		#endregion

	}

	#endregion

}

