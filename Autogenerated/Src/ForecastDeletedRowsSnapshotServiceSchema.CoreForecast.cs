namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastDeletedRowsSnapshotServiceSchema

	/// <exclude/>
	public class ForecastDeletedRowsSnapshotServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastDeletedRowsSnapshotServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastDeletedRowsSnapshotServiceSchema(ForecastDeletedRowsSnapshotServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4238574c-472d-49bd-88ef-f6d8d2fb761e");
			Name = "ForecastDeletedRowsSnapshotService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,87,223,111,218,72,16,126,118,165,254,15,35,247,197,72,200,72,125,108,2,213,17,46,45,82,147,139,66,219,151,234,84,109,236,49,172,106,239,114,187,107,34,20,245,127,239,172,119,215,198,144,0,185,23,192,243,107,103,191,249,102,198,8,86,161,94,179,12,97,122,119,179,144,133,73,175,164,40,248,178,86,204,112,41,210,107,169,48,99,218,124,127,255,246,205,211,219,55,81,173,185,88,194,98,171,13,86,23,123,207,228,90,150,152,89,63,157,126,66,129,138,103,7,54,51,102,216,129,240,11,23,255,117,194,46,147,170,146,226,57,185,194,231,165,233,108,250,130,226,111,97,184,225,168,95,80,95,179,204,72,229,244,100,241,78,225,146,110,1,87,37,211,250,3,4,16,102,88,162,193,252,94,62,234,133,96,107,189,146,102,129,106,195,51,108,188,70,163,17,92,234,186,170,152,218,78,252,179,215,67,33,21,104,182,177,7,107,239,218,200,10,31,26,20,5,77,67,144,209,78,148,31,51,44,88,93,154,41,23,57,185,39,102,187,70,89,36,243,144,84,115,179,237,94,62,131,33,220,82,101,97,12,177,79,250,167,205,58,30,252,75,17,215,245,67,201,51,200,236,229,206,184,27,124,128,41,211,24,12,201,98,207,96,8,199,147,161,35,137,58,244,217,226,122,205,177,204,9,216,59,197,55,204,56,244,162,181,123,232,130,125,230,218,22,37,99,229,103,142,138,169,108,181,165,195,45,129,238,113,45,53,39,229,22,126,22,71,173,59,75,87,217,232,29,138,220,101,209,79,137,104,175,141,170,45,13,108,98,13,68,62,47,7,215,105,160,146,111,26,21,197,17,174,7,160,238,61,14,8,199,7,194,49,217,23,63,253,62,158,217,157,146,107,84,150,188,22,48,105,200,15,115,103,210,99,28,124,66,163,193,172,176,35,213,170,197,132,126,122,80,44,211,64,181,176,164,125,182,185,144,27,86,214,56,129,175,255,35,150,115,117,245,244,185,190,178,162,199,141,119,12,237,60,138,162,37,26,255,43,82,104,106,37,206,167,4,124,252,232,28,163,228,124,159,177,119,137,154,225,224,6,199,150,198,157,185,124,213,53,39,73,236,27,59,30,134,136,2,31,119,121,248,151,90,214,21,10,147,196,125,202,196,67,232,51,109,48,24,216,185,22,69,196,36,250,212,132,200,120,242,10,24,198,208,84,173,137,225,201,216,21,111,177,66,138,231,62,159,128,208,190,0,58,224,2,78,176,246,6,205,74,230,135,148,237,2,203,13,42,197,115,132,141,228,185,53,203,80,235,25,47,10,219,90,201,23,74,250,178,15,104,0,113,98,105,247,221,102,172,169,123,154,43,159,203,153,212,117,111,115,130,69,251,208,207,170,156,209,29,83,172,210,129,91,13,0,243,156,176,106,126,165,243,220,151,205,58,204,115,77,138,54,171,116,65,1,50,147,216,238,160,66,208,87,74,86,243,124,224,93,252,8,249,71,216,104,126,134,216,197,104,39,37,85,192,21,243,108,124,119,70,213,254,6,114,43,136,109,80,119,125,108,175,109,151,77,183,135,100,1,57,193,142,10,5,77,251,7,52,143,136,2,136,216,53,245,58,19,57,16,209,77,103,30,54,213,225,170,114,146,181,197,13,4,173,159,113,28,156,226,73,184,39,84,104,88,78,85,76,47,71,141,229,243,142,5,47,13,170,120,114,221,124,67,214,123,41,217,245,244,211,185,225,144,189,105,56,39,9,165,13,2,203,156,246,18,67,112,129,221,203,14,184,211,2,153,130,81,122,181,194,236,87,232,194,219,186,44,19,155,28,45,223,96,17,250,174,245,112,220,56,233,231,236,130,183,59,253,101,47,159,93,223,250,30,51,169,114,34,222,41,191,206,50,68,104,75,49,110,241,240,138,166,201,59,169,75,211,233,252,102,207,86,88,49,122,207,171,43,65,131,223,115,198,63,135,214,160,89,232,172,239,251,6,123,251,113,112,24,184,101,233,21,150,165,23,249,121,219,247,77,119,189,110,152,96,75,186,40,157,59,167,225,201,232,192,233,246,219,60,79,92,58,253,119,147,185,176,177,73,235,143,159,83,72,213,35,78,199,17,7,160,111,218,221,113,17,96,168,136,135,92,75,225,105,228,71,69,228,212,254,5,236,112,134,53,35,158,9,163,237,84,232,108,195,26,112,121,58,200,110,79,199,216,55,119,81,126,191,58,235,94,210,135,117,72,173,198,7,125,38,195,61,46,216,191,2,244,213,140,195,54,169,163,131,205,73,251,66,146,253,1,7,112,77,136,160,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4238574c-472d-49bd-88ef-f6d8d2fb761e"));
		}

		#endregion

	}

	#endregion

}

