namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: NotificationFactorySchema

	/// <exclude/>
	public class NotificationFactorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public NotificationFactorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public NotificationFactorySchema(NotificationFactorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("a9587f5f-b07f-4d96-b18e-df6bed9079ad");
			Name = "NotificationFactory";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("edbaf284-b37c-4101-84cb-76a44645334f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,223,107,219,48,16,126,78,161,255,195,205,133,98,67,176,97,143,105,26,200,66,50,2,75,219,209,109,47,99,20,217,57,187,222,100,201,72,242,86,179,246,127,223,201,191,29,188,142,229,65,177,164,187,239,190,251,238,78,130,101,168,115,22,33,188,187,59,220,203,216,248,27,41,226,52,41,20,51,169,20,231,103,191,207,207,102,133,78,69,2,247,165,54,152,93,117,251,222,33,203,164,152,58,87,56,125,234,239,88,100,164,74,81,247,247,9,151,33,227,139,69,141,230,127,144,73,66,199,116,79,22,23,10,19,34,3,27,206,180,94,192,141,52,105,156,70,21,193,26,169,172,204,242,34,228,105,4,145,181,154,50,130,5,236,39,125,103,54,201,46,202,46,69,126,164,48,119,42,253,201,12,86,208,179,188,222,128,66,118,148,130,151,240,89,163,34,169,4,70,22,10,30,138,209,254,106,232,163,13,133,139,122,215,61,37,7,15,156,150,107,160,207,3,19,44,65,229,191,71,99,179,70,229,58,67,150,218,241,106,21,102,23,40,142,53,199,102,223,202,66,70,70,21,154,146,177,180,43,21,26,214,181,34,19,73,187,39,252,199,244,61,168,20,153,157,100,69,124,39,210,124,121,157,221,1,205,163,252,171,158,161,148,28,40,243,189,174,138,123,96,234,7,30,215,250,54,212,146,163,65,247,83,153,99,93,81,251,213,242,146,225,119,34,240,245,27,48,99,84,26,22,6,53,113,235,204,172,148,27,171,71,182,238,238,93,67,23,50,118,91,228,238,198,155,3,137,135,86,100,66,86,104,10,37,224,77,15,236,239,245,77,193,249,173,218,102,185,41,93,239,255,114,30,20,35,8,2,88,234,34,203,152,42,87,237,193,134,186,194,178,79,169,132,76,208,24,134,37,44,115,166,88,166,48,6,65,211,73,137,57,85,102,55,180,113,130,149,223,97,5,167,96,181,99,229,117,61,240,89,217,21,100,92,11,228,47,131,202,172,247,170,115,214,171,125,203,129,76,255,193,97,25,180,78,131,54,27,13,87,147,89,139,233,82,135,218,49,239,80,218,82,142,11,76,129,218,2,218,127,183,55,175,203,147,198,224,14,140,175,65,80,105,224,249,25,170,91,160,159,123,210,179,22,106,175,119,196,165,80,184,21,44,228,120,28,15,216,151,183,142,7,151,151,175,117,97,223,128,94,203,187,237,20,75,160,230,70,61,65,107,147,39,217,99,22,242,242,99,193,56,69,194,99,85,131,97,143,174,167,44,106,36,67,111,213,56,202,198,186,53,163,235,239,164,138,144,216,46,71,130,175,220,201,152,243,26,103,38,240,87,251,80,88,148,181,74,138,12,133,113,157,177,92,206,252,244,41,243,26,233,95,128,226,68,143,224,110,159,34,204,171,18,227,83,167,134,125,206,252,173,82,82,185,248,228,31,80,107,122,211,230,214,98,40,206,169,102,19,99,212,156,13,143,94,254,0,241,29,87,109,165,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("a9587f5f-b07f-4d96-b18e-df6bed9079ad"));
		}

		#endregion

	}

	#endregion

}

