namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ExternalAccessListenerSchema

	/// <exclude/>
	public class ExternalAccessListenerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ExternalAccessListenerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ExternalAccessListenerSchema(ExternalAccessListenerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572");
			Name = "ExternalAccessListener";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("386ac9f6-07c1-4d11-8d16-e4e9424ba4e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,90,75,111,227,56,18,62,103,128,249,15,108,109,3,35,3,94,5,115,77,39,110,228,213,61,158,77,58,65,156,236,28,26,141,133,34,209,54,55,178,232,38,165,36,222,70,254,251,86,177,72,73,148,228,71,102,118,167,247,176,23,39,226,163,222,245,177,138,82,30,47,184,94,198,9,103,39,215,151,19,57,45,162,83,153,79,197,172,84,113,33,100,30,157,63,23,92,229,113,118,156,36,92,235,235,56,121,136,103,252,199,31,190,253,248,195,94,169,69,62,99,147,149,46,248,226,93,235,25,168,100,25,79,144,132,142,62,242,156,43,145,116,214,92,136,252,107,103,240,166,204,11,177,224,209,4,182,196,153,248,151,17,163,179,106,194,147,82,137,98,85,79,204,50,121,31,103,7,7,167,114,177,0,185,47,228,108,6,195,245,124,173,30,206,247,141,43,222,63,26,157,157,172,153,56,7,81,11,193,245,150,233,232,252,145,231,197,186,85,31,226,164,144,170,151,202,37,152,60,70,53,58,82,227,78,114,20,59,50,15,190,219,96,33,44,253,139,226,51,120,96,167,89,172,245,1,243,93,121,33,192,144,224,23,179,114,127,127,159,29,234,114,177,136,213,106,100,159,221,2,54,149,138,253,228,111,254,137,129,66,96,126,198,141,102,145,35,177,223,162,113,168,57,143,51,45,89,162,248,244,40,216,100,157,232,36,214,220,140,173,204,128,99,31,176,125,164,246,185,103,42,156,36,115,190,136,63,65,8,131,21,2,95,196,96,240,5,182,45,203,251,76,36,44,65,11,172,49,0,59,96,107,88,195,126,136,115,248,173,45,9,225,92,196,32,237,1,187,86,226,49,46,56,205,47,233,129,37,56,207,116,161,208,71,227,148,140,116,156,166,10,248,77,120,81,192,176,118,226,186,105,8,244,71,174,238,84,22,188,91,75,234,52,19,176,120,156,110,166,225,86,109,37,4,217,163,120,177,11,49,90,137,4,141,25,120,158,146,37,124,179,124,16,60,75,215,217,4,12,86,128,11,20,143,83,153,103,43,54,134,212,100,255,200,224,231,136,193,191,151,113,14,136,162,0,36,10,204,89,240,106,199,145,91,184,95,242,98,46,183,177,127,148,34,101,167,115,158,60,16,130,92,45,57,165,202,13,71,211,36,5,79,47,101,202,67,121,255,79,128,45,166,129,23,87,3,134,56,183,183,247,24,43,23,240,71,44,164,72,25,208,146,119,213,130,82,131,209,100,158,19,234,193,66,218,17,221,121,227,180,94,76,89,232,175,143,198,186,37,152,174,37,115,114,236,21,115,37,159,88,206,159,216,90,45,206,159,19,190,196,161,16,237,6,123,94,240,247,101,189,81,62,201,66,76,87,228,238,227,123,89,22,53,5,95,244,150,134,67,86,45,100,177,241,212,71,5,169,81,13,58,161,81,215,55,151,122,118,58,143,97,107,230,252,61,214,128,244,57,196,95,165,28,4,90,169,242,134,208,198,172,9,109,3,123,246,208,48,217,152,0,134,138,60,29,131,61,78,86,119,227,180,109,217,211,82,41,208,13,149,137,198,169,181,10,74,85,145,62,98,121,153,101,91,4,209,98,177,204,56,65,50,230,139,241,130,55,102,183,159,200,20,227,164,207,38,239,65,100,0,150,218,112,239,223,247,174,27,18,165,113,10,116,62,150,34,141,62,241,39,252,27,14,72,40,146,205,147,40,250,5,18,12,52,68,238,183,171,37,119,89,109,8,131,153,91,73,181,129,194,196,4,54,106,8,36,228,52,236,135,77,107,71,107,195,232,90,234,194,210,9,61,170,180,174,21,127,103,16,170,160,38,156,20,135,4,76,67,11,80,35,202,209,227,60,189,144,113,122,195,191,150,66,241,20,130,221,129,213,150,152,36,187,17,173,207,95,32,141,105,87,51,145,31,227,172,228,26,212,115,147,209,173,172,229,9,137,66,2,88,192,142,70,0,158,41,31,250,67,245,209,27,53,228,66,252,250,59,82,110,69,223,144,72,176,32,32,215,89,179,161,21,173,234,35,198,23,75,68,93,34,4,130,145,132,209,111,115,174,120,248,192,87,134,46,178,118,255,71,244,59,214,159,32,108,175,212,111,115,81,240,9,22,113,225,128,184,236,129,19,177,252,234,223,253,55,190,26,128,210,40,67,216,72,7,79,12,36,46,139,115,28,2,162,46,180,13,16,42,37,213,45,44,206,208,147,148,7,23,50,49,181,218,125,198,39,70,169,118,14,2,62,201,82,37,48,43,21,4,5,216,163,63,170,2,107,236,189,160,67,18,10,133,166,128,46,104,141,74,1,234,99,57,91,141,106,89,235,148,37,131,71,31,164,90,196,69,232,41,226,2,48,250,85,138,60,12,64,192,161,239,151,129,163,91,99,48,176,22,41,236,173,1,179,201,175,9,191,22,82,172,103,251,50,98,140,130,216,34,91,201,231,21,131,120,106,13,133,27,178,70,185,76,233,9,120,109,206,115,91,133,28,43,60,119,81,122,83,203,168,18,139,79,24,44,23,0,145,97,160,171,98,100,216,161,249,121,67,65,243,197,106,107,16,219,150,33,91,88,185,101,125,156,250,234,157,46,11,42,78,118,98,99,235,152,181,172,186,21,81,147,93,209,242,13,148,220,88,80,82,229,190,194,212,63,108,251,111,20,182,205,62,108,26,102,216,86,193,114,179,113,210,98,216,23,48,33,158,7,80,99,14,217,189,148,25,59,134,208,120,228,3,200,196,56,69,136,28,231,83,185,237,252,54,20,160,60,44,64,15,56,24,189,144,65,244,192,98,135,112,100,96,14,59,130,20,159,138,195,155,15,74,46,194,0,0,241,56,93,136,252,46,23,133,5,188,61,108,5,117,8,213,37,38,21,137,89,77,17,196,5,167,78,6,200,227,177,62,255,90,198,89,8,187,202,69,30,93,199,10,156,1,80,17,86,130,2,25,148,60,112,25,73,194,66,167,10,61,33,224,32,56,48,227,55,60,145,42,13,177,232,196,163,108,196,44,174,211,0,122,140,232,27,244,56,68,114,35,35,226,96,184,105,29,90,26,214,121,74,12,134,12,106,38,200,108,5,177,165,203,172,240,61,73,99,125,14,172,43,82,115,68,75,181,147,187,112,176,114,186,208,206,237,117,169,69,11,216,155,35,182,185,12,114,144,222,90,117,118,226,90,235,243,28,58,79,232,43,81,194,211,56,183,230,173,42,78,240,90,156,159,129,233,103,6,1,59,21,123,5,125,166,254,107,75,218,135,206,127,222,65,66,9,18,27,137,206,27,66,172,63,76,26,133,183,51,207,86,208,127,217,181,109,49,61,42,77,182,27,113,51,240,75,156,167,25,148,44,182,5,153,196,143,60,165,206,27,27,239,110,231,77,35,75,204,28,83,195,29,1,172,99,73,23,140,76,123,107,155,155,232,112,223,44,233,223,193,131,209,237,156,155,6,222,54,239,183,7,107,218,119,58,19,166,224,5,67,30,192,76,99,211,206,132,173,206,9,98,4,214,250,172,152,115,199,206,40,192,224,252,140,61,73,108,199,46,1,59,149,72,109,154,92,229,80,234,115,133,224,236,119,104,208,132,24,246,39,28,110,41,120,197,159,85,129,118,15,173,125,212,220,238,246,57,87,253,199,123,187,87,156,210,120,144,108,41,119,219,32,128,33,88,149,183,54,151,54,156,203,54,11,250,206,83,111,170,123,254,81,28,55,140,164,108,230,217,198,194,90,0,122,110,12,187,6,74,118,146,199,88,248,121,41,8,55,206,168,106,180,219,177,202,129,102,37,109,162,44,174,184,133,43,64,64,218,179,146,227,83,224,249,42,189,154,158,123,228,206,98,244,157,207,34,50,63,96,17,152,212,225,207,3,252,247,86,36,15,58,252,235,207,13,106,214,188,116,176,108,22,203,30,18,22,172,241,172,32,50,225,38,92,62,242,15,228,182,55,61,246,150,158,119,36,244,109,64,54,21,7,218,67,97,75,215,97,36,51,155,17,5,251,84,105,70,107,76,195,220,92,126,178,186,142,139,121,165,93,176,158,46,181,171,20,53,175,36,238,35,53,145,112,156,44,5,180,214,133,148,15,229,242,76,104,40,204,169,99,209,33,134,125,87,24,76,1,95,209,97,159,124,46,138,237,29,152,217,192,185,203,9,207,235,180,163,201,59,236,18,108,197,143,159,16,253,68,60,33,189,164,138,117,19,80,250,2,207,162,7,214,29,40,201,141,217,18,116,136,212,7,233,91,114,35,28,18,247,171,3,246,205,201,248,50,180,43,97,140,254,121,177,215,0,157,230,163,91,240,246,180,35,157,158,195,179,114,251,112,135,78,213,198,212,198,91,35,111,105,161,86,213,205,151,207,60,50,187,104,32,108,34,147,211,209,114,30,174,193,139,42,147,108,149,0,241,85,7,83,35,54,92,232,236,225,133,101,100,114,248,109,48,41,145,239,20,196,92,217,13,169,213,5,12,110,9,147,217,171,220,126,97,79,162,152,119,237,239,234,5,150,196,69,50,103,225,213,113,89,204,199,64,113,86,189,127,177,134,137,142,151,130,110,102,107,91,241,231,170,158,250,110,181,20,45,181,146,237,84,75,173,113,59,127,254,29,182,112,218,60,54,43,178,166,93,190,239,141,133,39,222,78,198,121,205,141,197,239,105,208,119,182,126,167,206,221,16,109,252,217,190,170,226,175,100,178,11,241,183,193,93,14,103,59,152,17,171,94,156,99,105,89,3,249,214,204,11,118,148,169,106,86,122,23,190,105,221,17,227,237,27,52,64,9,52,64,120,130,192,181,3,111,34,133,113,54,64,197,249,235,229,5,116,232,147,160,194,138,189,13,23,246,237,114,161,247,94,190,211,210,216,249,102,116,239,220,221,236,216,176,152,19,225,127,171,99,105,181,12,127,160,101,49,162,240,42,84,136,249,246,23,52,193,200,182,228,38,16,64,71,173,113,187,208,72,1,18,28,139,74,99,55,235,25,235,205,134,5,43,158,155,58,39,178,254,43,219,166,29,222,148,217,87,100,239,154,109,150,229,213,234,177,94,17,42,120,161,128,152,245,255,96,249,62,193,226,236,255,231,132,75,197,173,63,96,90,55,39,52,218,26,108,125,227,176,9,202,214,126,233,80,163,188,193,196,156,61,205,69,198,9,174,215,216,180,131,96,159,171,239,85,224,248,239,124,121,176,73,44,248,254,160,33,98,239,23,7,116,167,221,119,85,36,114,184,65,21,69,42,19,243,149,132,227,186,17,209,173,211,94,254,32,25,91,231,47,236,209,0,106,160,87,195,234,249,191,192,164,249,202,89,120,47,82,219,236,135,157,249,111,59,92,201,181,140,173,100,97,170,142,77,58,184,53,155,213,240,62,102,194,46,2,196,155,202,33,131,226,143,199,112,95,62,195,227,31,194,204,156,59,240,215,222,143,91,157,104,173,155,218,164,73,95,138,192,216,191,1,139,248,220,218,229,37,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateEmptySettingsMessageLocalizableString());
			LocalizableStrings.Add(CreateAccessServerErrorMessageLocalizableString());
			LocalizableStrings.Add(CreateConnectivityErrorMessageLocalizableString());
			LocalizableStrings.Add(CreateUserInactiveErrorMessageLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateEmptySettingsMessageLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("b5e8b8a9-4df3-43b5-8815-10027c29ed4d"),
				Name = "EmptySettingsMessage",
				CreatedInPackageId = new Guid("386ac9f6-07c1-4d11-8d16-e4e9424ba4e8"),
				CreatedInSchemaUId = new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572"),
				ModifiedInSchemaUId = new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572")
			};
			return localizableString;
		}

		protected virtual SchemaLocalizableString CreateAccessServerErrorMessageLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("b11e7c82-dec9-419c-91da-8f4e52414613"),
				Name = "AccessServerErrorMessage",
				CreatedInPackageId = new Guid("386ac9f6-07c1-4d11-8d16-e4e9424ba4e8"),
				CreatedInSchemaUId = new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572"),
				ModifiedInSchemaUId = new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572")
			};
			return localizableString;
		}

		protected virtual SchemaLocalizableString CreateConnectivityErrorMessageLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("d3417878-4a5f-40ab-a5be-f8ccbd353cfa"),
				Name = "ConnectivityErrorMessage",
				CreatedInPackageId = new Guid("386ac9f6-07c1-4d11-8d16-e4e9424ba4e8"),
				CreatedInSchemaUId = new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572"),
				ModifiedInSchemaUId = new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572")
			};
			return localizableString;
		}

		protected virtual SchemaLocalizableString CreateUserInactiveErrorMessageLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("566eced3-2ed3-2e4d-a05b-7f9f94dc0a97"),
				Name = "UserInactiveErrorMessage",
				CreatedInPackageId = new Guid("651868d2-0b85-4a6b-bc3a-32549eab2f65"),
				CreatedInSchemaUId = new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572"),
				ModifiedInSchemaUId = new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f9058b68-1667-44ce-a5ca-8ff753a9c572"));
		}

		#endregion

	}

	#endregion

}

