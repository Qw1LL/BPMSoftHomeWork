namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MacroValueReplacerSchema

	/// <exclude/>
	public class MacroValueReplacerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MacroValueReplacerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MacroValueReplacerSchema(MacroValueReplacerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("851484e2-ed65-4894-b6c6-cbe7205c1410");
			Name = "MacroValueReplacer";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6c038aa0-46cd-4697-bc93-5c682e364aef");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,109,83,93,111,219,48,12,124,118,129,254,7,54,3,10,7,24,228,247,174,201,208,101,27,22,96,89,131,164,91,159,53,155,142,5,216,82,70,201,249,192,208,255,62,90,82,18,39,203,139,12,157,73,222,241,72,105,217,160,93,203,28,225,211,124,182,52,165,19,19,163,75,181,106,73,58,101,180,152,200,102,45,213,74,219,219,155,191,183,55,73,107,149,94,193,114,111,29,54,31,46,238,226,187,210,127,24,100,248,29,225,138,179,97,82,75,107,31,96,38,115,50,191,100,221,226,2,215,53,147,145,143,202,178,12,30,109,219,52,146,246,227,120,255,82,99,131,218,65,105,136,255,33,66,78,88,142,6,19,83,183,141,246,37,236,212,33,139,51,52,200,198,176,173,84,94,1,133,170,22,154,142,8,54,62,76,28,24,178,30,197,186,253,93,171,28,242,78,215,21,89,240,0,215,152,162,40,206,103,15,248,60,246,55,67,87,153,130,59,156,251,186,225,231,101,91,30,88,156,75,220,42,87,5,157,160,52,228,158,211,43,254,95,114,64,214,146,100,3,154,167,53,26,228,70,59,220,185,193,248,49,243,176,143,138,157,153,13,18,169,2,97,99,84,1,115,50,204,105,211,107,77,77,66,21,38,247,223,33,116,243,77,18,85,66,122,23,49,225,29,178,33,79,60,233,125,58,60,132,37,132,174,37,221,237,64,146,188,249,115,35,41,118,18,18,96,116,168,205,59,117,130,197,107,133,132,105,14,163,49,228,226,155,180,61,18,184,191,135,187,92,76,237,11,103,133,164,97,160,224,125,64,201,163,78,47,88,78,246,133,234,71,125,93,28,161,109,107,199,58,52,110,251,131,93,120,60,237,229,69,133,63,167,69,228,11,62,88,71,188,223,172,231,71,91,215,207,244,90,41,135,203,238,181,156,229,250,243,163,120,49,75,31,206,38,29,85,120,25,205,113,207,122,150,244,173,141,177,137,248,170,200,186,103,250,140,165,236,4,238,58,143,118,226,169,86,146,221,236,114,47,72,251,156,1,137,234,121,60,93,139,1,99,214,147,132,24,16,70,150,28,212,4,71,120,198,69,113,221,150,247,209,204,104,143,79,231,195,63,6,212,69,120,15,254,30,208,115,240,237,31,239,20,241,172,103,4,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("851484e2-ed65-4894-b6c6-cbe7205c1410"));
		}

		#endregion

	}

	#endregion

}

