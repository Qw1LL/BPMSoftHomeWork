namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TermCalculatorITILServiceSchema

	/// <exclude/>
	public class TermCalculatorITILServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TermCalculatorITILServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TermCalculatorITILServiceSchema(TermCalculatorITILServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b39bbd0b-1c65-4417-bf62-1ca79d96bd6f");
			Name = "TermCalculatorITILService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e9cdff4a-a92d-4d26-906f-df90167f5485");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,86,221,110,218,48,20,190,166,82,223,193,163,82,21,164,42,15,80,214,85,45,45,21,82,217,216,96,219,229,228,38,7,176,148,56,212,113,152,208,196,187,239,56,118,130,109,146,148,106,218,85,226,227,243,251,125,199,199,46,114,198,87,100,190,203,37,164,195,243,179,194,90,134,207,140,191,214,178,251,217,116,158,45,101,56,202,4,52,10,195,71,46,153,100,144,227,238,249,25,167,41,228,27,26,129,165,195,151,108,85,8,42,89,198,207,207,254,40,173,222,133,128,21,46,201,40,161,121,126,77,22,32,210,17,77,162,34,161,50,19,147,197,228,121,14,98,203,34,40,149,55,197,75,194,34,18,41,221,118,85,226,187,65,75,29,172,142,54,102,144,196,24,110,38,216,150,74,237,188,183,209,11,98,220,204,104,36,201,175,252,176,24,54,170,77,120,147,190,35,53,134,23,192,99,29,223,77,6,113,201,165,40,34,204,84,165,84,214,104,66,233,122,91,43,13,190,99,56,52,231,16,41,76,73,225,44,175,200,83,193,98,98,85,48,137,93,217,4,73,174,101,88,87,38,152,220,77,226,1,81,193,123,215,228,133,230,16,248,78,61,91,219,236,79,105,103,85,62,137,201,141,155,192,208,86,113,80,42,117,159,64,54,239,5,94,25,78,22,131,210,235,190,27,230,153,200,54,32,84,127,42,222,51,137,245,64,92,81,106,150,26,9,55,41,93,212,10,20,141,248,147,155,159,125,151,169,95,216,169,62,236,86,178,255,107,123,243,215,99,75,18,216,189,73,62,220,16,94,36,73,197,65,175,39,64,22,130,251,13,172,118,76,84,237,196,35,224,166,44,35,124,76,55,114,119,228,75,5,240,125,108,169,168,184,184,19,43,128,20,184,68,30,57,252,182,11,240,26,85,243,165,19,240,141,195,49,200,104,61,22,89,250,112,239,102,55,56,36,228,148,94,119,88,237,227,144,100,39,18,251,46,14,220,115,221,40,236,100,197,85,125,139,30,127,94,180,241,116,116,98,254,133,48,55,69,135,52,103,235,109,246,28,245,38,6,189,188,27,168,244,147,233,6,230,52,8,43,130,123,189,174,193,48,5,185,206,90,111,131,242,88,183,143,165,211,70,108,85,174,2,31,242,87,131,117,121,95,238,230,209,26,82,250,181,0,177,243,128,14,109,133,41,229,116,5,226,138,244,155,50,233,27,82,240,34,81,215,50,139,71,89,82,164,252,51,94,194,24,12,67,134,119,177,145,5,253,73,220,31,132,106,75,219,168,221,49,75,36,136,92,105,5,106,61,18,128,197,107,233,79,38,215,51,42,80,95,169,4,90,56,202,210,13,21,44,207,248,98,183,193,171,255,181,160,137,149,27,86,221,247,135,244,224,191,133,43,17,168,195,85,45,166,195,105,12,9,78,5,245,209,88,32,157,90,140,136,36,26,107,191,199,49,69,145,203,47,226,1,150,180,72,100,96,188,153,158,51,222,204,169,38,183,70,160,28,171,252,12,210,63,104,82,192,71,213,13,159,2,155,145,1,190,80,14,167,118,248,222,38,173,175,46,109,113,152,92,217,22,132,96,241,161,103,241,209,128,238,168,192,62,173,58,176,109,150,212,181,92,94,54,206,128,240,224,75,169,54,12,29,3,205,27,198,214,193,244,44,90,178,232,12,174,35,223,182,232,234,93,253,140,9,61,56,218,94,12,134,133,35,212,143,95,101,53,218,223,240,157,139,79,56,88,48,60,108,24,102,202,184,45,10,236,133,110,130,92,63,133,137,40,119,226,163,141,10,83,199,179,233,238,74,134,173,92,213,229,7,108,117,59,60,169,5,106,70,155,194,63,128,164,44,177,146,104,228,27,147,122,79,70,85,39,52,198,104,232,152,227,154,239,119,56,188,203,119,104,117,37,85,187,87,237,40,183,246,128,150,217,162,253,95,208,31,125,120,39,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b39bbd0b-1c65-4417-bf62-1ca79d96bd6f"));
		}

		#endregion

	}

	#endregion

}

