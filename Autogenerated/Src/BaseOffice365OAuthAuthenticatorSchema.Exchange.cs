namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseOffice365OAuthAuthenticatorSchema

	/// <exclude/>
	public class BaseOffice365OAuthAuthenticatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseOffice365OAuthAuthenticatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseOffice365OAuthAuthenticatorSchema(BaseOffice365OAuthAuthenticatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0b5bb331-5b7d-4b5c-acc9-77bc0de507a5");
			Name = "BaseOffice365OAuthAuthenticator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("2137d3bc-8953-4060-9df8-39c52dc22e74");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,89,91,111,219,54,20,126,118,129,254,7,206,195,96,7,141,165,94,210,110,107,19,3,206,165,69,138,230,130,56,217,30,138,162,160,41,218,97,35,145,46,73,217,201,138,252,247,29,222,100,201,150,99,59,40,246,180,151,192,34,121,174,60,151,239,48,28,103,84,141,49,161,104,255,252,164,47,134,58,58,16,124,200,70,185,196,154,9,254,244,201,143,167,79,26,185,98,124,132,250,119,74,211,236,221,220,119,116,73,111,245,108,241,148,78,181,224,202,48,250,168,4,143,62,49,254,125,182,59,147,145,101,130,215,173,75,90,191,26,29,238,47,217,56,226,154,105,70,213,226,118,95,16,134,211,232,172,151,235,107,216,133,253,56,142,209,174,202,179,12,203,187,174,255,190,160,99,73,21,229,90,33,204,209,0,43,138,206,134,67,70,232,171,55,175,145,165,69,24,254,192,1,70,176,22,50,10,124,226,18,163,113,62,72,25,65,36,197,74,161,125,224,81,176,176,28,122,101,6,232,173,59,177,176,1,124,192,219,240,183,241,171,164,35,240,62,130,187,80,90,230,4,54,213,91,116,110,133,184,19,21,75,118,21,165,136,72,58,220,107,46,114,109,95,41,42,129,17,167,196,220,232,86,51,238,86,84,15,186,175,208,122,142,13,202,171,92,193,40,227,186,246,252,178,9,159,198,253,198,58,63,90,203,66,145,170,232,95,41,79,156,79,171,14,62,151,98,76,165,9,31,112,175,20,26,212,166,73,141,182,97,97,22,25,38,38,132,100,255,216,52,65,185,76,77,92,44,6,70,99,28,184,34,49,161,82,178,132,34,184,82,19,166,61,207,129,94,201,212,41,219,24,81,237,127,53,36,213,185,228,168,121,173,245,88,189,141,227,84,140,24,143,50,70,164,48,217,37,120,202,56,141,136,200,98,98,147,41,22,70,163,151,113,208,139,54,77,66,88,7,212,95,192,162,73,90,220,208,199,153,114,105,40,127,170,25,86,151,117,77,56,206,224,18,161,218,184,187,128,223,25,83,10,126,42,52,146,152,27,133,181,64,16,37,37,91,73,202,32,104,16,30,143,33,170,44,221,198,70,247,9,196,206,114,139,15,112,10,65,135,165,138,46,40,78,254,150,76,83,147,207,26,19,93,94,58,193,44,157,125,174,107,241,37,24,211,27,143,209,241,33,186,186,56,70,98,104,205,155,210,1,234,157,31,111,108,201,5,85,34,151,208,3,86,94,159,200,117,42,196,77,36,130,35,205,213,213,40,189,44,223,78,40,68,103,98,147,141,77,176,166,15,152,120,32,41,28,128,162,140,56,157,162,82,185,168,109,84,145,119,109,255,142,147,62,213,26,204,82,80,67,144,164,68,200,36,240,28,66,245,53,142,82,99,74,24,88,176,154,173,185,158,129,184,157,103,11,206,131,146,51,100,84,46,113,182,93,25,99,137,51,196,161,197,238,53,51,199,232,56,105,118,127,130,208,221,216,242,246,247,106,93,137,38,130,37,222,107,208,133,107,252,209,254,144,195,137,66,17,95,33,27,182,129,222,245,201,53,205,48,50,18,138,143,61,84,45,250,174,215,250,221,19,204,241,8,84,249,64,245,49,116,41,204,9,221,191,59,5,91,219,205,186,187,216,114,65,226,56,32,226,78,128,132,178,192,200,105,239,206,204,247,45,71,239,9,35,224,123,72,135,7,34,205,51,254,23,78,115,170,218,139,39,74,219,237,102,141,83,225,50,182,75,254,120,152,254,232,118,44,164,14,25,220,75,83,160,133,222,76,87,144,65,109,90,139,12,79,160,103,189,91,149,247,27,38,69,15,92,55,49,238,253,63,43,92,86,212,57,228,63,75,139,218,219,168,230,5,246,71,54,79,140,64,249,64,102,148,143,60,42,53,150,50,112,65,14,13,73,48,174,51,131,165,23,2,125,5,237,37,86,55,27,16,185,100,244,14,5,244,246,0,229,122,137,117,14,141,26,242,10,0,60,203,16,212,86,141,134,82,100,190,132,67,134,249,42,254,109,170,45,214,49,229,216,66,148,117,203,127,65,232,170,191,205,217,208,84,181,16,169,138,24,213,195,72,200,81,124,173,179,52,150,67,242,251,235,23,127,54,187,31,167,218,73,2,1,148,118,43,149,223,74,113,45,90,117,15,102,170,251,182,14,168,224,1,253,129,83,32,45,119,17,79,11,225,107,25,246,237,231,123,240,133,165,107,251,237,192,39,36,139,95,134,65,42,79,77,85,15,251,81,31,240,149,110,155,98,69,174,177,252,252,5,253,64,173,168,133,238,183,62,191,248,226,110,10,34,6,101,34,217,1,42,71,30,125,162,124,4,83,215,111,104,199,159,24,162,182,61,209,69,207,183,102,200,196,138,122,182,103,43,161,147,223,110,237,181,182,209,14,234,88,134,91,37,88,18,142,23,50,96,234,75,97,234,109,183,58,64,209,122,214,218,154,173,124,109,109,183,226,150,167,246,0,232,136,19,145,128,132,232,234,242,253,31,38,183,157,95,218,144,134,128,165,116,100,28,100,70,147,55,59,126,195,137,217,170,4,222,26,160,104,245,4,2,176,50,5,8,135,181,5,50,192,49,128,191,234,64,2,96,143,80,165,162,249,198,161,1,16,43,147,28,112,198,160,161,169,5,161,30,30,31,238,131,51,105,2,236,205,24,135,18,172,241,186,241,109,8,62,25,108,223,236,250,153,121,134,172,29,55,135,252,23,194,183,204,196,198,121,31,198,56,168,160,6,40,57,165,19,63,152,40,183,177,28,6,45,192,91,139,136,206,133,210,222,27,165,81,17,212,10,177,92,168,190,141,108,39,168,106,17,2,206,61,45,180,15,247,143,110,41,201,205,24,159,12,138,159,53,29,65,229,146,30,238,207,150,218,91,69,232,206,8,163,190,134,124,189,156,221,73,40,213,13,45,239,194,241,70,181,63,129,176,2,228,213,20,238,118,201,156,57,75,60,235,198,60,70,52,175,49,57,247,94,41,49,88,74,80,145,55,223,36,74,199,107,187,237,226,249,146,63,140,42,172,214,33,247,8,244,35,215,133,83,74,68,23,34,77,7,152,220,212,145,53,244,181,20,211,192,99,189,225,202,246,2,23,180,38,46,125,39,88,40,219,3,136,104,21,101,42,41,205,179,118,146,165,183,80,235,248,8,18,105,18,191,124,254,98,39,126,254,42,126,249,58,182,17,212,113,243,109,71,139,14,38,38,38,59,196,207,137,29,15,5,59,152,39,29,227,164,14,30,179,14,227,29,55,107,117,96,216,234,4,206,29,55,55,199,205,46,75,190,150,187,67,49,17,251,101,83,7,204,3,135,71,220,12,70,226,34,181,125,179,75,168,34,146,13,32,111,24,71,27,54,39,131,111,64,117,61,39,253,138,179,239,57,253,106,157,231,132,64,182,166,182,170,64,229,242,42,0,172,129,201,119,205,242,34,241,244,204,56,206,247,80,87,106,253,235,28,148,218,49,196,109,104,93,203,59,228,85,33,22,65,75,9,158,67,19,156,178,100,27,237,146,174,103,112,148,141,245,221,110,76,186,72,64,189,144,83,166,232,66,179,12,181,102,194,164,206,113,90,106,155,70,138,193,123,11,61,179,98,67,40,6,31,207,6,223,128,83,97,196,161,185,152,61,228,151,35,27,138,237,42,229,172,41,150,137,62,55,131,65,205,47,232,23,232,138,121,154,22,21,103,174,107,187,54,88,75,26,89,128,181,235,8,186,69,26,205,76,112,48,99,111,41,64,40,144,193,59,228,72,131,133,46,16,106,76,179,108,130,32,223,111,237,225,207,205,124,22,72,203,84,11,237,221,146,149,47,112,37,228,123,240,5,210,244,120,187,106,11,187,132,92,134,29,156,154,57,124,237,215,149,58,122,227,183,186,245,34,72,252,189,132,171,171,229,81,128,25,243,210,185,76,211,34,58,188,163,74,221,206,132,167,187,194,197,96,157,163,50,97,22,72,162,99,117,42,244,41,4,214,153,180,46,46,245,52,15,171,174,66,239,0,246,129,172,230,158,220,233,205,176,209,178,199,239,176,80,109,238,190,200,128,34,149,247,158,5,108,242,8,124,115,85,160,153,128,155,202,252,30,4,56,166,246,244,169,132,0,49,240,198,116,111,164,236,39,114,145,190,20,219,228,246,241,123,174,216,148,44,166,70,169,101,128,166,44,53,92,24,0,15,77,163,94,146,184,233,175,80,202,13,125,225,51,186,20,30,207,122,36,219,232,37,48,111,193,75,107,10,175,189,144,193,56,83,142,9,132,63,68,4,144,55,161,209,152,255,166,132,193,214,223,184,141,212,5,133,231,160,70,125,44,192,234,253,191,102,240,16,197,167,26,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0b5bb331-5b7d-4b5c-acc9-77bc0de507a5"));
		}

		#endregion

	}

	#endregion

}

