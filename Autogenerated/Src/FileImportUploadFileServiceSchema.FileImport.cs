namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: FileImportUploadFileServiceSchema

	/// <exclude/>
	public class FileImportUploadFileServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FileImportUploadFileServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FileImportUploadFileServiceSchema(FileImportUploadFileServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("421f00b4-85f9-4bc6-b7e6-83b75a202824");
			Name = "FileImportUploadFileService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,87,77,111,227,54,16,61,187,64,255,3,235,189,40,128,43,47,122,76,98,47,28,103,179,117,1,39,70,228,109,14,65,177,160,165,113,66,68,18,85,146,114,227,46,242,223,59,36,69,139,146,109,37,192,2,109,129,246,100,115,56,95,124,124,51,28,229,52,3,89,208,24,200,197,98,30,241,181,10,167,60,95,179,135,82,80,197,120,30,94,177,20,102,89,193,133,34,95,191,255,174,87,74,150,63,144,104,43,21,100,103,173,117,56,187,217,19,69,32,54,44,134,57,79,32,237,220,12,39,177,98,27,19,179,91,239,14,86,123,10,40,67,37,41,209,56,82,84,1,42,188,99,107,114,253,113,25,45,39,215,151,147,219,203,159,190,188,223,25,45,35,50,218,157,86,155,254,172,84,17,78,86,82,9,138,73,240,92,106,123,72,37,236,76,230,218,164,14,102,246,243,132,173,119,10,199,193,251,92,164,156,38,103,7,52,133,206,243,128,52,188,194,52,184,96,32,247,247,117,186,83,158,101,62,74,251,123,14,177,91,94,42,212,168,85,151,81,35,65,15,7,19,184,177,137,86,104,247,78,192,131,214,156,166,84,202,83,82,211,193,158,75,175,171,96,70,125,56,28,146,115,89,102,25,21,219,113,181,190,133,66,128,132,92,73,130,160,253,88,112,150,43,178,230,130,148,198,5,89,163,15,179,102,198,113,232,220,12,61,63,247,151,176,166,101,170,188,131,193,111,90,94,9,48,115,115,123,70,54,145,197,53,40,132,162,192,131,172,88,202,212,246,22,126,47,153,128,76,103,17,248,11,77,42,132,225,21,19,173,21,86,130,228,68,7,41,202,85,202,98,18,107,88,186,80,33,167,228,130,74,183,26,144,217,45,208,228,38,79,183,62,95,117,105,161,207,29,216,87,12,210,4,209,94,8,93,18,22,217,94,97,23,68,160,3,142,14,200,172,166,215,44,95,115,242,101,221,88,159,249,70,181,42,8,95,17,68,67,109,182,0,33,25,210,60,87,245,153,156,133,91,89,98,244,116,5,216,124,155,201,227,85,96,37,149,154,194,250,8,6,167,234,4,22,179,14,180,130,19,242,149,188,188,89,251,179,4,129,225,114,48,101,75,202,198,114,208,60,180,127,230,129,246,223,107,227,215,132,239,196,232,156,146,21,222,94,208,244,140,73,154,205,6,142,72,162,61,88,125,13,19,194,215,217,221,209,75,55,158,11,193,11,16,10,219,129,71,136,94,207,191,54,15,242,137,120,40,53,101,73,19,27,20,147,209,152,228,240,199,33,229,160,223,60,96,127,208,50,63,169,238,252,32,157,26,139,209,248,0,52,31,62,144,160,13,150,105,40,182,211,109,195,79,160,206,125,55,227,214,213,98,162,39,237,28,142,113,245,136,24,79,95,103,182,147,238,50,171,245,200,126,106,71,66,29,203,210,94,206,177,251,156,131,122,228,71,171,187,77,74,12,223,148,4,145,194,14,144,25,34,233,174,135,57,57,62,226,147,231,195,108,236,127,24,145,188,76,83,167,210,19,160,74,145,31,236,21,142,136,78,167,227,134,180,205,56,176,30,143,114,202,203,16,9,229,231,59,56,242,62,119,121,19,216,125,65,106,79,203,200,188,216,198,217,51,190,92,165,16,168,97,218,51,42,24,231,213,227,253,38,127,86,207,40,206,173,231,202,211,157,160,5,86,94,48,239,142,103,3,86,211,64,87,68,137,43,250,0,123,197,21,222,113,241,100,102,48,244,41,121,41,98,136,172,106,197,166,151,38,69,18,136,89,70,83,77,141,57,125,54,253,144,253,9,87,130,103,56,161,68,160,244,147,47,131,29,41,176,23,108,104,90,234,87,174,245,252,135,158,190,190,224,95,181,90,139,211,3,210,175,41,239,133,195,83,188,183,217,57,186,184,29,180,221,96,191,2,17,206,87,75,126,177,85,32,3,147,64,227,48,175,87,135,247,112,180,167,10,35,136,232,6,199,6,12,58,52,3,68,65,5,14,24,138,147,100,165,39,136,253,17,194,74,80,13,139,39,199,169,119,212,32,232,88,167,79,98,187,194,96,128,11,1,235,81,223,150,91,127,56,62,31,26,219,218,149,61,183,196,13,247,79,111,221,223,32,103,12,188,254,76,210,187,199,233,108,150,111,248,19,4,246,136,120,29,253,197,77,180,68,32,43,38,93,113,145,81,133,114,84,157,227,116,128,4,176,162,240,23,169,47,226,130,39,219,72,109,49,77,95,101,39,13,45,95,19,75,104,100,82,129,36,132,110,167,102,148,113,47,109,131,27,110,208,170,220,24,180,53,68,29,237,167,251,61,197,20,246,123,153,239,197,146,201,145,59,171,169,102,45,187,168,110,77,55,212,141,148,110,7,45,117,53,214,65,237,17,131,214,75,239,122,35,154,77,75,172,210,108,202,211,50,203,165,142,99,45,244,195,77,177,167,84,205,194,203,5,119,188,84,109,27,173,211,17,14,62,155,72,23,194,238,20,74,108,93,62,254,139,24,214,211,79,208,60,100,101,247,66,98,170,226,71,18,120,201,125,124,142,1,18,72,244,111,97,70,36,120,246,94,2,27,56,172,119,71,184,127,214,218,141,202,56,70,222,56,4,118,47,69,93,248,78,213,47,239,131,21,123,9,41,96,255,178,243,62,98,91,13,252,186,116,177,30,177,99,200,183,86,174,53,172,70,232,89,210,31,87,159,168,210,74,8,75,194,255,118,185,90,168,13,91,62,149,44,33,45,192,28,9,190,157,163,135,39,163,208,139,223,14,221,162,235,12,191,169,175,57,162,89,230,255,22,158,226,59,200,18,253,210,218,66,3,251,137,26,154,249,241,127,114,126,59,57,167,143,16,63,205,164,102,135,129,250,159,161,232,180,157,197,43,68,253,123,201,185,55,33,89,194,54,133,40,251,11,55,65,238,173,192,19,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("421f00b4-85f9-4bc6-b7e6-83b75a202824"));
		}

		#endregion

	}

	#endregion

}

