namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: QueuesUpdateServiceSchema

	/// <exclude/>
	public class QueuesUpdateServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public QueuesUpdateServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public QueuesUpdateServiceSchema(QueuesUpdateServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("80fa838c-1c21-420d-a9cd-0e248d1c1ada");
			Name = "QueuesUpdateService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("64ebcdcc-1a9c-4eb3-9403-16c8221d18f7");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,77,111,26,49,16,61,59,82,254,195,148,94,64,66,203,61,164,145,18,164,86,68,34,80,54,85,14,81,15,102,119,32,86,118,109,199,31,84,168,234,127,239,216,222,37,155,132,144,246,2,248,205,204,27,251,205,99,36,175,209,106,94,32,92,45,102,185,90,187,108,162,228,90,108,188,225,78,40,121,122,242,251,244,132,121,43,228,6,242,157,117,88,103,57,154,173,40,112,166,74,172,198,199,130,217,101,225,196,54,210,28,207,187,195,213,155,4,194,40,201,90,42,206,29,119,248,156,240,124,79,243,14,154,229,197,3,150,190,66,243,28,15,124,19,85,215,241,46,132,126,54,184,33,110,128,73,197,173,61,131,239,30,61,218,31,186,164,94,205,229,98,222,104,52,130,115,235,235,154,155,221,69,115,94,24,181,21,37,90,168,209,61,168,210,194,90,25,120,10,4,224,3,1,245,203,218,210,81,167,246,190,33,38,133,157,225,133,251,25,176,75,171,111,208,209,213,52,21,174,68,37,220,110,137,79,94,24,172,81,58,219,239,30,130,92,240,5,62,40,9,89,89,3,148,131,208,68,251,85,37,10,40,194,83,15,189,20,206,224,138,219,246,52,132,233,18,121,57,151,213,174,59,1,226,33,47,208,231,94,59,122,135,117,156,58,158,145,36,97,210,73,50,166,211,1,138,16,7,235,76,24,64,106,152,154,95,171,213,13,249,142,158,210,155,214,53,150,130,34,175,226,189,241,191,50,125,51,202,235,143,232,98,210,17,206,174,40,52,222,130,222,221,82,30,8,5,162,40,4,202,50,105,241,82,152,89,242,5,201,18,133,79,193,215,78,138,64,235,212,151,99,105,218,128,78,223,193,76,111,221,148,16,131,206,27,105,47,114,177,145,224,30,184,107,139,224,23,183,96,27,250,50,59,31,181,153,161,244,126,174,49,253,193,187,94,100,247,244,47,153,202,173,122,196,126,122,66,120,255,98,158,223,246,134,112,165,202,93,238,118,85,208,132,210,102,212,130,111,112,143,102,119,134,107,141,101,240,29,90,55,12,116,140,53,167,175,202,212,116,179,110,97,130,178,107,171,228,16,150,180,130,104,26,120,60,47,90,185,245,242,74,169,106,175,222,1,237,250,3,8,155,139,49,177,134,254,167,75,173,247,59,33,155,6,67,44,189,148,52,248,254,1,91,14,223,117,216,160,37,101,47,8,243,230,215,222,124,205,29,168,244,255,248,27,213,216,59,110,164,66,139,134,38,38,145,54,171,146,217,157,50,143,113,121,103,7,195,19,111,12,45,132,128,198,132,65,244,63,99,201,9,224,140,143,11,148,177,63,241,179,129,215,188,178,56,134,0,17,254,218,230,13,214,133,8,249,11,118,118,90,180,70,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("80fa838c-1c21-420d-a9cd-0e248d1c1ada"));
		}

		#endregion

	}

	#endregion

}

