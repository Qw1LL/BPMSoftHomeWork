namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: AsyncReportGenerationBinderSchema

	/// <exclude/>
	public class AsyncReportGenerationBinderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public AsyncReportGenerationBinderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public AsyncReportGenerationBinderSchema(AsyncReportGenerationBinderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7e9b579b-4224-407d-ac46-c9544808f4a9");
			Name = "AsyncReportGenerationBinder";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f8ef1a6f-6619-48e3-9227-afa9b7782f83");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,85,75,111,26,49,16,62,19,41,255,193,34,23,35,33,171,82,111,164,73,85,80,72,35,229,37,182,180,135,170,7,179,59,80,75,187,246,202,158,165,69,21,255,61,227,245,194,226,240,234,137,245,60,191,249,230,129,150,5,184,82,166,192,134,175,79,137,153,163,24,25,61,87,139,202,74,84,70,95,94,252,187,188,232,84,78,233,5,75,86,14,161,184,222,190,23,185,153,201,124,48,24,153,162,48,90,60,154,197,130,196,173,126,172,114,160,96,75,176,8,86,140,114,5,26,79,107,197,87,196,178,53,105,17,89,56,44,21,99,153,162,177,10,220,190,254,7,204,68,128,70,58,210,94,89,88,80,69,108,148,75,231,6,236,139,91,233,116,2,165,177,120,15,26,66,185,67,165,51,176,181,121,89,205,114,149,178,212,91,159,50,102,20,170,44,239,150,4,255,81,17,65,164,29,74,7,20,193,51,215,102,53,218,161,212,72,153,95,173,90,74,36,11,175,47,195,131,165,94,207,28,218,61,110,136,246,4,16,73,62,50,25,176,27,214,109,84,9,216,165,74,97,106,243,110,168,176,115,5,58,11,249,154,119,147,252,9,240,183,201,142,165,94,26,149,177,9,89,18,122,27,165,230,83,7,150,94,26,82,95,48,171,162,103,143,213,21,118,150,210,178,121,132,120,11,140,208,214,109,138,102,74,180,21,57,113,15,248,93,230,21,240,56,118,255,20,7,253,134,39,113,87,148,184,234,249,214,119,58,106,206,120,35,126,112,207,85,158,191,216,90,205,143,64,235,109,224,119,44,96,101,253,144,208,247,250,112,69,97,60,55,160,169,42,13,127,98,132,126,114,91,248,91,203,38,133,159,136,64,135,119,156,90,117,20,85,63,56,124,83,5,152,10,201,193,127,37,165,212,98,108,77,145,0,205,73,230,248,199,15,189,0,247,250,20,222,163,56,107,45,63,81,97,195,105,189,42,97,197,86,194,143,251,167,135,241,190,211,45,231,61,118,115,123,8,65,136,179,62,49,111,239,151,138,54,182,204,33,112,232,215,139,211,114,237,76,160,220,125,237,14,160,133,162,94,199,224,213,84,126,60,248,36,50,231,113,216,150,84,109,80,205,85,90,59,255,103,228,231,61,23,222,4,220,15,38,136,239,164,74,83,112,206,88,30,151,112,180,5,231,24,219,180,99,63,93,212,141,243,183,162,62,128,77,235,194,49,52,212,91,171,178,166,133,47,154,122,147,160,180,200,55,23,144,72,68,248,139,254,154,249,223,77,131,102,52,254,98,199,124,163,110,137,142,26,64,28,55,22,130,92,40,113,93,195,207,110,52,10,221,95,76,210,97,222,21,181,225,226,99,66,241,162,248,159,253,5,162,191,178,248,186,5,239,195,119,240,221,225,139,77,207,142,240,129,233,58,220,132,32,141,133,235,55,191,218,113,171,162,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7e9b579b-4224-407d-ac46-c9544808f4a9"));
		}

		#endregion

	}

	#endregion

}

