namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DCStrategyResolverRuleSchema

	/// <exclude/>
	public class DCStrategyResolverRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DCStrategyResolverRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DCStrategyResolverRuleSchema(DCStrategyResolverRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cdad65ac-937a-4402-a670-9783b348787f");
			Name = "DCStrategyResolverRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("41c9b305-ccaa-4408-abc9-8158dd3fa84a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,86,75,79,219,64,16,62,7,169,255,97,20,46,65,170,156,123,33,65,16,80,213,3,20,1,85,143,213,198,30,39,171,218,187,214,238,26,72,17,255,189,179,235,221,216,113,156,96,104,15,237,37,143,217,121,126,243,20,44,71,93,176,24,225,252,230,234,78,166,38,154,73,145,242,69,169,152,225,82,68,23,43,193,114,30,19,209,160,48,31,14,158,63,28,12,74,205,197,162,193,159,231,82,28,119,208,119,235,137,174,100,130,153,38,33,18,59,84,184,32,22,152,101,76,235,79,112,49,187,51,36,132,139,213,45,106,153,61,160,186,45,51,116,156,227,241,24,78,116,153,231,76,173,166,254,255,57,211,8,177,21,133,84,42,96,16,47,25,23,32,83,80,36,166,35,248,162,161,114,204,72,208,5,198,60,93,1,19,192,133,54,76,80,220,196,73,66,82,196,10,13,130,198,69,78,14,58,167,65,123,71,162,96,123,220,48,94,148,243,140,199,192,230,150,43,54,222,135,93,222,15,8,56,250,172,131,149,100,95,149,177,145,138,98,190,113,186,42,142,118,144,142,208,96,183,113,20,10,11,166,16,200,164,241,1,11,66,20,30,185,89,202,210,80,64,2,159,140,67,0,230,244,223,210,33,193,148,149,153,169,109,32,1,167,48,157,12,201,233,70,216,33,0,139,236,112,60,93,35,101,81,216,134,161,162,144,55,44,7,74,49,78,134,132,165,33,235,195,233,217,38,202,59,13,206,188,0,217,114,32,70,39,99,167,175,91,189,15,35,120,57,156,126,231,89,6,115,4,202,95,169,4,38,192,83,66,99,157,60,159,116,142,201,150,94,167,27,159,98,44,92,186,43,223,206,212,162,180,174,93,151,89,246,85,93,230,133,89,93,6,150,225,244,126,169,228,163,128,199,37,10,239,22,9,181,2,183,152,105,16,36,79,22,215,234,157,85,95,52,221,85,50,234,132,197,214,166,253,254,8,187,211,20,114,27,104,71,96,251,116,48,240,162,209,108,137,241,207,102,96,35,235,177,76,71,158,225,232,200,246,239,96,16,76,78,130,209,138,124,177,169,157,158,91,246,28,219,203,219,235,55,199,132,151,121,187,130,193,44,177,46,224,127,164,236,172,63,54,73,117,189,21,74,198,168,245,91,10,238,255,42,182,14,41,151,22,251,227,47,87,216,181,87,75,244,96,161,89,83,135,40,146,106,112,110,78,209,27,37,11,84,134,163,157,161,74,26,140,13,38,123,202,240,221,165,209,93,131,69,48,217,106,205,16,100,248,126,134,5,154,99,120,121,175,103,29,137,176,174,153,37,179,163,189,119,53,246,8,162,43,229,235,220,244,8,99,86,42,69,40,180,182,171,159,22,27,251,244,13,112,110,76,186,246,44,218,116,170,87,161,188,182,108,207,104,175,254,90,237,206,199,61,230,69,70,214,111,177,144,154,211,72,91,61,223,191,188,94,43,252,129,100,160,75,252,164,38,186,195,104,10,63,204,22,211,241,70,75,247,81,178,205,227,155,150,16,131,73,167,17,56,61,117,28,131,81,215,163,109,206,199,126,198,71,190,246,163,111,26,21,253,22,148,88,74,68,24,3,122,183,7,19,120,96,89,217,171,253,175,144,206,157,164,231,253,84,221,119,156,236,97,125,225,185,242,116,103,82,117,60,174,187,70,185,14,160,179,113,223,250,169,46,14,221,123,227,180,47,43,50,217,224,181,51,156,168,52,198,131,222,70,198,215,103,230,158,214,248,140,235,182,56,43,10,146,98,243,12,239,165,155,246,22,247,157,232,80,79,113,129,186,251,248,5,22,199,82,37,254,130,102,97,158,196,175,46,231,63,68,167,27,135,61,225,223,85,199,125,215,251,40,172,171,7,166,234,192,38,175,34,70,18,52,77,71,181,4,117,0,101,41,104,115,143,245,234,106,61,14,42,247,219,19,171,82,107,75,187,193,19,148,68,123,131,168,68,43,73,47,24,92,219,211,46,21,117,147,72,180,223,188,48,151,39,250,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cdad65ac-937a-4402-a670-9783b348787f"));
		}

		#endregion

	}

	#endregion

}

