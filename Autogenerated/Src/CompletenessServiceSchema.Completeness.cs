namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CompletenessServiceSchema

	/// <exclude/>
	public class CompletenessServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CompletenessServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CompletenessServiceSchema(CompletenessServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ecd25da0-3ca8-4035-8f47-b02bcfc50e97");
			Name = "CompletenessService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("723df037-0016-403c-a198-8225dd0ceb1a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,84,203,110,218,64,20,93,59,82,254,97,68,54,182,132,252,1,105,169,4,180,137,168,68,64,56,109,22,168,139,97,124,1,171,246,140,59,15,90,171,226,223,123,175,109,130,9,198,221,36,82,36,36,152,115,207,220,215,57,131,228,25,152,156,11,96,163,249,52,82,107,27,142,149,92,39,27,167,185,77,148,188,190,250,123,125,229,57,147,200,13,139,10,99,33,251,240,226,28,70,160,119,137,128,169,138,33,237,12,134,79,176,234,38,12,133,77,118,101,221,51,30,222,69,174,49,24,139,44,183,112,36,28,251,214,16,222,113,97,149,78,192,156,199,41,195,88,101,89,51,249,121,236,208,208,66,57,139,12,164,34,121,89,131,184,26,171,177,194,15,194,62,195,154,187,212,54,248,80,226,145,201,207,176,161,201,31,192,98,133,28,167,91,37,105,98,139,5,252,114,137,134,12,164,53,126,243,64,171,96,3,246,159,43,196,10,107,32,14,168,72,238,86,105,34,152,72,185,49,140,238,165,96,65,226,202,234,110,216,45,27,113,3,245,169,207,38,11,224,241,76,166,69,115,173,152,135,4,247,110,52,108,16,99,83,176,91,21,155,91,54,215,164,12,198,41,154,87,135,50,95,91,165,177,6,12,183,68,252,128,149,233,61,13,214,105,201,198,212,108,165,89,17,222,131,253,120,33,227,39,95,194,111,28,74,26,171,29,177,135,122,227,104,15,126,207,25,208,24,144,128,222,81,178,215,103,223,78,128,32,32,181,189,125,213,248,13,200,184,154,172,62,159,141,89,46,177,10,46,103,57,84,175,160,169,187,183,68,179,76,228,78,253,4,191,186,134,98,245,230,179,232,145,106,235,228,17,176,123,90,14,162,56,209,2,132,210,113,115,36,164,141,84,92,68,182,72,137,132,217,166,136,242,13,60,163,225,147,230,121,14,113,191,92,21,137,12,198,222,41,157,113,123,114,161,130,194,175,70,201,62,91,224,51,198,253,64,55,175,116,202,193,42,45,139,62,100,97,173,173,251,247,46,137,153,46,241,73,220,103,168,6,189,34,35,182,144,241,7,252,39,233,179,146,97,139,28,190,243,212,209,124,36,28,129,126,112,208,254,146,107,80,183,242,123,208,229,159,82,77,175,171,115,93,255,168,152,86,23,117,89,244,92,205,24,28,74,133,237,83,54,6,108,76,246,60,84,221,195,158,9,110,197,150,249,95,254,8,200,201,38,12,130,150,90,149,115,47,247,91,223,240,142,105,6,140,222,33,149,168,43,53,159,204,201,120,251,215,114,42,110,129,167,194,209,113,152,166,163,226,125,26,118,167,208,92,93,173,86,6,21,13,100,18,191,162,237,14,182,233,108,225,69,245,183,212,233,93,43,227,191,249,226,235,104,251,127,59,162,248,249,7,122,48,245,196,223,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ecd25da0-3ca8-4035-8f47-b02bcfc50e97"));
		}

		#endregion

	}

	#endregion

}

