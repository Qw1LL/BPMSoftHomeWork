namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: InvokeMethodMacrosWorkerSchema

	/// <exclude/>
	public class InvokeMethodMacrosWorkerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public InvokeMethodMacrosWorkerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public InvokeMethodMacrosWorkerSchema(InvokeMethodMacrosWorkerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c01dca9b-e67d-4d52-b93d-ef033eda14d8");
			Name = "InvokeMethodMacrosWorker";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("33bac096-c819-4c57-86af-fe71bbb0cb56");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,85,91,143,211,58,16,126,14,18,255,193,148,151,32,117,211,133,5,246,192,182,69,101,161,176,15,69,203,217,3,60,32,132,220,100,210,26,18,187,178,157,66,133,250,223,25,95,114,237,69,58,32,68,31,154,216,249,60,243,205,204,55,99,78,115,80,43,26,3,121,126,61,187,17,169,142,46,5,79,217,162,144,84,51,193,111,223,250,113,251,86,80,40,198,23,228,102,163,52,228,23,157,53,226,179,12,98,3,86,209,43,224,32,89,92,99,246,26,141,222,105,150,169,125,32,9,251,119,163,41,141,181,144,12,246,156,250,0,243,232,181,214,171,104,50,87,90,82,199,4,97,8,188,43,97,129,43,114,153,81,165,158,146,43,190,22,95,97,6,122,41,146,25,141,165,80,31,132,252,10,210,98,63,54,119,194,222,143,251,143,207,206,158,76,255,121,112,242,120,58,61,61,121,120,121,254,232,228,249,131,211,23,39,247,207,166,167,231,147,115,252,244,232,225,182,119,239,19,30,93,21,243,140,197,36,54,94,14,58,33,232,191,237,52,48,169,173,56,78,25,100,9,146,188,150,108,77,53,88,78,193,96,48,32,67,85,228,57,149,155,113,185,241,78,161,181,88,112,238,178,30,85,192,65,19,185,114,118,44,250,178,2,147,207,69,107,237,242,20,220,5,158,56,30,126,237,73,93,75,177,2,169,49,239,72,204,70,249,251,188,92,178,58,180,58,75,155,153,96,1,218,191,5,44,37,97,135,58,25,141,8,47,178,236,94,137,9,118,0,196,232,2,55,52,124,71,29,21,82,2,215,209,13,40,133,95,63,246,218,62,123,159,8,85,29,30,70,108,248,219,186,135,4,93,200,125,25,172,32,170,38,188,203,101,77,179,2,26,232,237,241,212,59,5,89,65,8,141,70,32,57,146,122,7,38,122,73,53,113,52,21,97,92,105,202,177,177,69,74,114,43,60,178,164,60,201,76,145,140,82,15,212,199,238,172,168,164,57,225,56,27,70,61,11,126,131,175,189,177,249,55,230,156,105,205,80,95,137,55,54,28,216,51,181,9,79,99,124,131,61,169,97,177,241,237,81,178,194,3,37,194,169,213,7,73,214,76,234,130,102,101,179,216,118,162,243,12,200,43,208,182,143,175,188,133,16,187,221,204,129,138,95,41,132,255,54,43,112,187,246,109,68,204,3,71,147,54,207,176,134,187,90,24,101,53,192,29,77,249,154,155,189,86,161,157,107,60,5,249,60,219,216,188,140,106,159,209,196,127,120,139,145,176,148,65,98,16,206,192,154,74,95,142,58,180,145,155,80,110,200,109,162,169,144,49,32,223,97,55,7,227,176,233,209,7,224,41,118,108,94,252,47,137,53,90,219,247,231,11,102,117,139,170,24,186,96,251,196,61,199,70,144,49,64,18,94,189,228,69,14,210,120,27,150,68,83,49,174,152,164,162,190,26,202,132,122,178,165,137,125,208,190,171,64,51,128,63,195,169,79,196,252,11,190,18,42,23,120,136,107,85,178,172,107,244,222,52,173,194,2,113,248,118,196,127,232,107,145,226,93,69,227,37,9,107,223,13,215,40,254,163,201,41,101,85,73,20,253,214,120,115,209,22,57,191,166,122,121,209,130,219,198,3,13,114,247,200,36,99,212,94,153,248,219,105,168,93,21,214,142,239,184,62,32,207,118,219,174,209,111,79,27,141,97,27,105,199,100,119,68,183,196,234,146,219,30,178,90,110,42,112,199,90,212,185,36,70,251,167,117,208,52,30,77,146,36,108,37,168,223,141,219,76,134,89,125,36,172,213,224,139,26,108,73,76,181,169,234,203,239,49,172,172,239,106,216,32,227,165,20,223,172,62,222,96,168,255,66,10,120,205,196,80,97,67,136,102,120,229,208,69,217,176,62,84,247,127,40,33,7,149,239,52,219,63,34,70,215,13,166,29,106,137,133,94,3,191,222,178,188,172,244,223,103,214,183,71,14,53,239,1,190,205,33,232,247,218,115,113,251,19,95,208,119,8,11,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c01dca9b-e67d-4d52-b93d-ef033eda14d8"));
		}

		#endregion

	}

	#endregion

}

