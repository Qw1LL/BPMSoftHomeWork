namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CalendarOperationProviderSchema

	/// <exclude/>
	public class CalendarOperationProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CalendarOperationProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CalendarOperationProviderSchema(CalendarOperationProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c1cfad1f-fd4b-4c49-8ad2-e4e9a4356b9d");
			Name = "CalendarOperationProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d2179f89-6a33-4745-96ee-fd30f06a5c1f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,88,223,111,219,54,16,126,86,129,254,15,156,251,162,52,158,188,231,198,17,144,218,205,16,160,93,2,196,219,30,134,33,80,228,83,202,76,162,60,146,74,235,13,249,223,119,252,45,91,146,173,173,195,128,97,123,137,76,242,238,120,247,221,119,167,83,88,86,129,216,100,57,144,183,55,31,110,235,66,38,139,154,21,244,161,225,153,164,53,75,22,89,9,108,157,113,241,242,197,239,47,95,68,141,160,236,129,188,251,44,129,9,60,22,103,126,239,118,43,36,84,251,107,180,86,150,144,43,83,34,249,22,24,112,154,119,100,222,83,246,107,216,236,245,163,239,152,67,114,153,229,178,230,20,90,126,56,135,87,180,130,239,25,149,228,252,88,100,137,19,69,35,104,230,21,135,7,60,39,139,50,19,130,188,241,6,175,55,96,52,111,120,253,68,215,192,181,244,108,54,35,115,209,84,85,198,183,169,93,95,48,82,59,97,178,177,210,164,168,57,201,173,173,196,105,206,90,170,155,230,190,164,57,201,245,189,131,183,162,71,87,7,92,138,48,75,248,215,71,113,73,161,92,171,48,110,56,125,202,36,152,211,141,89,16,14,217,186,102,229,54,152,156,251,95,203,108,155,146,59,231,241,89,175,218,219,76,192,162,110,152,92,1,175,80,216,253,52,72,70,175,80,213,248,177,235,20,38,66,72,222,168,220,105,215,116,224,70,100,31,79,189,113,133,201,161,89,73,127,3,65,50,194,224,19,161,104,32,99,200,218,186,32,242,35,160,10,0,201,57,20,231,147,65,112,38,179,212,128,171,208,239,194,111,118,54,25,207,42,194,176,42,206,39,46,246,73,186,194,43,124,238,230,51,45,164,117,126,186,190,23,117,9,18,126,214,248,152,12,14,122,16,15,193,236,108,159,16,85,100,81,228,97,71,246,238,100,224,249,95,137,82,71,71,218,138,51,58,106,69,26,92,238,40,125,49,152,211,110,47,112,247,30,197,57,122,194,189,66,119,151,45,158,233,94,96,154,205,22,219,152,156,59,203,158,252,246,48,141,79,140,126,168,5,84,47,130,166,87,136,189,47,255,181,196,118,148,202,250,225,22,241,129,73,170,31,58,40,5,28,94,153,55,165,105,163,40,35,90,81,42,4,23,225,248,189,179,48,75,255,41,10,77,201,128,15,202,85,253,227,228,13,230,134,10,18,7,107,93,254,57,58,36,67,214,206,189,189,54,79,134,58,235,7,144,31,107,219,239,107,137,47,94,88,31,32,22,242,81,104,254,180,223,75,163,168,225,220,182,220,80,75,157,179,195,137,94,227,203,67,1,105,180,220,234,176,206,83,86,54,86,65,255,236,74,115,144,13,103,34,189,200,101,163,171,100,77,74,42,164,162,81,139,180,78,170,167,107,59,164,200,213,59,214,84,200,145,251,18,246,8,129,72,225,83,196,187,47,60,15,195,148,44,109,48,62,170,41,22,169,52,46,187,108,171,141,79,0,191,8,109,65,181,28,159,125,180,255,163,63,137,125,91,74,212,230,10,170,13,146,2,45,26,107,166,193,12,251,186,70,71,209,184,158,182,80,77,219,141,131,91,193,3,107,41,120,225,17,212,177,98,161,105,91,83,31,147,85,112,113,172,106,119,7,14,99,28,33,188,168,142,4,102,204,181,195,160,5,137,15,217,74,219,254,90,28,35,15,118,94,51,73,89,3,171,90,109,225,197,158,83,23,235,181,14,162,133,247,107,210,143,107,210,6,35,122,143,212,217,3,20,62,75,158,45,251,80,221,189,223,96,59,20,201,215,93,228,35,155,42,245,72,176,47,212,44,246,119,89,17,172,119,252,107,200,171,229,254,100,23,56,54,90,57,95,125,169,24,250,220,111,195,134,114,27,139,219,130,53,178,67,132,82,111,53,53,178,161,79,245,145,151,65,0,105,146,126,215,84,247,56,241,98,33,235,93,34,107,242,96,253,29,110,3,110,195,165,176,175,185,29,104,6,230,149,209,195,130,221,204,15,212,123,151,172,106,144,176,105,86,111,238,174,97,55,49,40,117,20,116,189,225,16,87,141,130,250,160,136,149,121,138,226,223,156,225,99,222,186,31,215,167,167,190,98,188,236,163,145,125,68,89,119,25,174,90,146,81,219,57,37,99,169,218,42,58,127,222,95,114,143,228,52,4,242,154,80,71,246,142,229,235,162,216,9,116,169,183,132,149,142,146,75,202,133,188,230,75,40,178,166,196,230,65,206,177,185,249,239,54,231,79,98,252,8,3,156,90,235,77,127,177,106,50,246,190,175,48,13,77,89,134,112,85,13,162,23,97,20,64,47,78,140,112,178,40,107,6,46,63,88,117,4,74,1,65,211,166,246,186,80,25,26,76,153,147,30,138,103,25,44,116,98,176,39,222,131,97,103,149,216,190,191,74,186,3,87,107,210,85,91,62,54,251,212,173,8,51,169,240,114,134,158,143,119,162,222,222,130,102,112,94,213,221,94,207,116,110,26,212,133,236,104,179,211,106,40,67,162,86,230,251,252,175,52,26,99,69,93,52,122,76,29,55,162,218,41,228,135,195,19,200,190,7,71,219,140,79,138,66,188,167,165,28,152,62,187,211,5,146,220,96,61,199,18,247,4,247,9,51,54,219,111,149,47,253,198,25,24,134,198,125,240,140,25,96,204,204,213,154,178,2,50,237,25,194,134,24,134,14,247,202,129,238,192,241,63,95,71,242,117,36,67,255,6,26,30,37,66,232,171,142,18,119,99,57,113,55,150,20,81,116,252,43,41,52,176,177,205,105,131,255,239,196,65,204,124,190,216,197,112,251,240,189,72,24,46,247,103,68,33,142,46,185,150,32,226,54,126,46,67,87,12,191,198,48,194,212,221,234,18,209,197,101,199,150,135,122,234,21,15,12,156,102,119,119,243,249,15,61,61,253,235,82,22,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c1cfad1f-fd4b-4c49-8ad2-e4e9a4356b9d"));
		}

		#endregion

	}

	#endregion

}

