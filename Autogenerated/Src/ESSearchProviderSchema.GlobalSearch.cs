namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ESSearchProviderSchema

	/// <exclude/>
	public class ESSearchProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ESSearchProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ESSearchProviderSchema(ESSearchProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5019f84c-cec1-49c6-8fbb-ec46480caa39");
			Name = "ESSearchProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("3c3a921b-299a-4f38-a040-5c0154a25bee");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,87,91,111,219,54,20,126,118,128,252,7,54,219,131,2,24,202,158,115,3,146,212,201,140,37,109,22,183,125,41,10,131,145,143,109,14,50,229,145,84,50,161,200,127,223,225,69,18,41,81,174,187,189,216,18,201,243,241,227,249,206,133,226,116,3,114,75,51,32,215,143,15,179,98,169,210,155,130,47,217,170,20,84,177,130,167,119,121,241,76,243,25,80,145,173,15,15,190,31,30,28,30,140,74,201,248,138,204,42,169,96,115,214,121,71,243,60,135,76,219,202,244,14,56,8,150,181,107,86,6,237,244,244,166,216,108,16,252,190,88,173,112,184,157,255,49,7,132,47,55,252,179,98,185,140,153,9,136,143,166,19,174,152,98,16,53,210,92,250,227,147,156,74,197,50,187,45,78,227,130,95,4,172,144,16,185,193,41,121,74,38,179,7,202,233,10,132,153,220,150,207,57,203,72,166,231,112,202,218,61,138,226,133,45,64,144,83,50,13,71,208,194,122,179,65,189,101,144,47,16,246,81,176,23,170,192,78,110,237,11,17,64,23,5,207,43,50,13,120,61,193,182,144,76,21,162,34,115,136,79,156,13,192,204,254,44,65,84,215,37,203,53,191,249,223,222,91,220,100,64,6,50,95,13,235,211,71,249,44,65,160,188,220,198,8,153,151,193,123,96,35,21,234,159,121,156,49,94,200,60,199,159,11,130,143,206,249,24,101,74,7,18,136,228,200,167,120,116,28,128,189,103,102,3,42,170,115,169,4,10,61,38,246,255,146,204,101,182,134,13,181,212,175,242,156,81,105,2,197,136,3,124,97,245,9,197,66,202,104,94,102,232,97,45,153,209,222,41,102,227,160,27,1,201,160,112,3,186,141,53,216,104,212,21,202,215,105,220,245,102,232,204,99,130,17,134,16,67,145,129,110,220,21,51,163,32,38,112,113,47,68,70,67,210,227,226,129,104,73,167,232,55,202,51,112,0,33,99,180,139,196,195,219,110,41,30,64,173,139,193,196,217,161,59,6,206,19,22,63,84,18,166,88,186,146,200,210,226,249,47,36,114,73,24,206,215,238,124,161,2,99,178,181,67,210,28,94,119,108,148,216,72,28,45,177,16,209,108,77,18,141,176,212,217,254,1,171,47,97,220,192,167,127,64,37,235,61,70,108,73,146,104,92,234,218,168,40,227,18,151,39,13,200,113,99,104,232,105,60,83,78,102,134,1,50,76,44,151,99,179,19,30,252,11,205,75,248,40,222,195,146,150,185,106,129,106,210,233,100,179,85,149,35,110,233,188,115,51,83,249,161,204,243,143,194,172,72,58,91,121,68,70,190,147,210,171,197,34,126,160,175,205,222,223,198,93,226,205,254,24,2,237,159,253,21,160,74,193,3,37,252,104,169,245,159,78,120,185,1,65,159,115,56,31,150,40,8,134,182,133,37,117,14,238,196,112,65,114,233,30,90,243,218,23,129,240,250,136,90,243,161,197,177,248,234,70,170,9,71,231,27,45,77,224,233,155,162,228,138,92,146,223,90,41,42,237,82,50,228,177,192,175,29,247,153,190,89,205,140,110,100,6,106,22,81,48,177,89,110,202,20,162,99,153,144,202,79,22,240,49,46,186,37,223,182,102,55,237,213,244,186,80,92,87,58,54,18,135,155,218,117,38,230,93,9,137,5,213,127,203,201,204,96,104,113,234,221,44,106,155,150,221,227,216,121,93,72,189,193,218,42,189,101,124,225,232,91,104,95,179,8,204,59,100,141,169,21,230,114,230,29,76,123,111,160,228,106,151,93,233,53,17,224,113,64,47,72,234,254,226,212,20,165,139,206,145,176,182,110,208,141,222,18,47,209,59,20,253,215,244,83,113,95,188,130,152,114,60,11,163,92,37,221,156,142,11,104,234,133,15,52,118,176,181,121,164,20,248,132,255,79,41,184,101,185,210,17,90,103,230,117,21,156,222,148,206,253,42,67,3,153,53,96,99,114,87,178,5,217,246,16,93,191,15,18,46,144,205,203,168,192,218,234,245,35,185,206,134,43,81,75,46,104,63,166,85,248,221,166,183,171,87,236,107,131,175,189,69,223,48,4,108,53,79,142,117,132,247,79,238,45,240,130,42,168,89,26,186,219,11,240,242,34,33,94,226,216,62,165,109,223,170,142,137,229,174,110,94,99,120,196,50,165,45,221,140,173,125,230,130,84,31,97,95,120,232,98,91,226,10,241,220,217,122,43,116,25,24,184,185,233,50,224,209,180,140,44,226,27,201,168,210,218,79,254,201,96,107,112,160,126,66,210,100,120,51,93,74,239,153,84,187,206,209,228,181,190,160,167,19,33,10,145,252,122,244,105,13,2,111,56,146,128,30,32,139,210,92,71,12,43,253,224,54,75,241,14,39,37,122,84,175,252,222,144,74,221,232,219,209,216,99,234,182,81,107,81,188,182,195,103,145,114,16,117,236,222,151,73,239,74,127,114,114,66,206,25,199,179,48,181,40,240,27,79,192,242,226,168,243,65,151,186,207,142,147,75,239,43,224,133,9,85,210,124,239,210,99,49,126,178,161,14,181,229,218,242,172,49,52,142,215,209,227,95,229,83,243,111,54,235,152,232,164,118,38,157,206,52,32,178,190,17,54,189,147,60,21,133,35,102,116,237,119,240,55,247,141,214,72,166,247,240,149,52,135,141,4,100,52,37,253,88,119,119,40,188,218,118,237,34,151,188,222,14,222,241,133,35,221,239,0,233,239,84,154,135,198,41,145,13,247,106,37,93,187,113,227,194,200,174,126,175,24,69,218,122,247,114,28,32,239,200,0,59,26,14,190,253,11,61,242,79,107,30,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5019f84c-cec1-49c6-8fbb-ec46480caa39"));
		}

		#endregion

	}

	#endregion

}

