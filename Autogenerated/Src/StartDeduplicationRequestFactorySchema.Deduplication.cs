namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: StartDeduplicationRequestFactorySchema

	/// <exclude/>
	public class StartDeduplicationRequestFactorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public StartDeduplicationRequestFactorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public StartDeduplicationRequestFactorySchema(StartDeduplicationRequestFactorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("94b338e5-9f87-4e1a-bc99-0f16f404e4a3");
			Name = "StartDeduplicationRequestFactory";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("4c53ad23-c903-414d-89cd-b08703861304");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,77,111,219,56,16,61,187,64,255,3,235,94,100,160,144,247,220,216,6,226,56,89,4,104,118,131,36,139,30,22,139,5,35,141,108,98,37,210,229,71,90,99,155,255,190,195,15,201,164,37,213,219,139,0,146,51,111,102,222,60,14,197,105,3,106,79,11,32,235,251,187,71,81,233,252,74,240,138,109,141,164,154,9,158,111,160,52,251,154,21,110,245,246,205,191,111,223,76,140,98,124,75,30,15,74,67,115,113,178,70,239,186,134,194,26,171,252,87,224,32,89,209,179,249,196,248,151,227,102,18,225,186,166,74,179,34,223,136,134,178,147,232,249,131,169,225,140,223,103,120,190,220,51,91,131,150,180,208,42,127,128,47,6,148,86,71,191,99,157,50,66,139,119,243,27,116,21,146,129,245,66,139,247,18,182,24,131,92,97,16,245,145,60,106,42,117,18,61,4,241,110,7,231,51,159,207,201,66,153,166,161,242,176,10,235,13,84,212,212,154,176,102,95,67,3,92,59,103,34,42,180,4,32,133,132,106,57,189,61,7,63,157,183,120,139,121,20,224,207,128,190,102,188,196,130,50,125,216,131,168,178,179,112,179,217,95,232,189,55,207,120,76,10,91,225,217,2,201,71,114,22,22,49,81,43,248,237,216,187,97,80,151,72,223,189,100,47,84,131,63,220,251,5,145,64,75,193,235,3,2,3,149,197,14,101,100,26,254,27,138,243,94,138,23,86,130,36,127,171,145,147,139,97,160,77,72,13,148,213,205,29,229,116,107,81,202,161,109,223,231,201,123,224,165,207,54,77,29,229,164,180,52,182,48,91,128,227,42,228,239,121,59,199,70,246,135,2,137,40,220,95,13,98,146,229,140,216,107,53,153,188,80,121,114,18,5,190,148,91,99,53,67,150,132,195,87,50,112,146,77,83,231,233,135,211,56,142,169,201,40,145,8,237,36,30,146,198,251,171,23,163,253,88,101,14,108,114,54,225,54,234,32,241,131,33,7,59,247,147,241,94,127,220,209,59,208,59,49,170,198,219,107,142,80,146,62,215,176,72,187,138,249,172,8,38,217,219,85,25,230,97,7,137,242,137,89,170,62,248,140,19,180,164,180,205,211,239,43,210,241,226,96,90,45,84,56,135,104,177,35,153,21,69,98,66,24,31,241,113,2,146,184,179,22,229,1,153,77,172,220,244,180,7,190,29,19,86,145,172,179,125,135,162,50,117,221,1,77,14,246,178,226,101,210,70,242,193,122,179,184,206,46,104,232,181,101,191,253,190,166,212,198,114,178,192,241,250,70,138,230,134,213,26,100,75,166,20,66,63,22,59,104,104,196,103,202,161,119,56,214,26,109,182,229,132,50,236,181,137,195,185,179,80,240,81,223,49,111,17,86,126,180,8,105,28,243,26,115,233,101,254,0,21,72,224,5,36,190,131,69,62,225,248,30,195,181,103,158,224,139,1,134,123,173,26,233,223,152,92,83,122,157,60,210,44,92,163,163,145,85,185,172,84,47,91,107,151,251,148,221,243,235,53,215,89,123,201,145,239,223,91,0,164,216,216,249,182,36,191,116,66,108,91,135,150,30,226,181,11,91,184,134,216,176,182,177,159,152,210,11,95,211,42,11,50,76,238,144,15,98,47,79,8,151,220,154,120,36,34,226,15,132,25,203,222,35,181,162,63,197,9,237,29,29,183,118,216,157,78,87,196,63,110,180,192,161,210,252,178,44,147,115,235,48,139,105,137,132,222,111,120,64,249,201,241,24,189,117,238,151,131,241,29,254,211,233,82,20,255,247,127,37,95,27,86,151,254,175,229,236,123,73,174,176,101,26,70,207,199,101,27,14,240,239,7,190,57,98,34,133,62,155,250,159,84,214,86,54,195,47,146,237,202,186,111,31,55,62,112,222,78,91,139,53,242,36,196,98,25,72,98,230,83,207,63,35,167,224,166,241,114,101,191,239,150,110,26,231,79,194,202,186,149,115,59,177,213,208,69,209,59,41,190,186,206,95,127,43,96,111,195,102,211,39,139,75,152,34,92,16,168,217,150,225,19,228,83,158,142,233,102,148,249,120,90,222,182,36,99,229,29,225,237,88,20,70,22,112,205,53,211,135,96,210,111,86,219,2,151,75,127,148,157,200,210,239,198,155,175,255,1,133,21,228,99,183,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("94b338e5-9f87-4e1a-bc99-0f16f404e4a3"));
		}

		#endregion

	}

	#endregion

}

