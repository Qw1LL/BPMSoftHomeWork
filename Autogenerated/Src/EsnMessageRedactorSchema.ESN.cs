namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EsnMessageRedactorSchema

	/// <exclude/>
	public class EsnMessageRedactorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EsnMessageRedactorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EsnMessageRedactorSchema(EsnMessageRedactorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6629a3bc-6810-4a2f-8b11-7ca823a7ac06");
			Name = "EsnMessageRedactor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b66b5ae8-46e0-4931-ad78-c2c1ba5fd6ea");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,88,203,110,27,55,20,93,43,64,254,129,117,22,149,0,97,180,143,45,21,182,172,24,2,42,87,136,154,102,17,116,65,13,41,137,232,12,103,66,114,28,8,65,254,189,151,175,17,103,134,122,213,205,70,22,201,203,115,238,139,135,148,57,206,169,44,113,74,209,195,114,177,42,54,42,153,22,124,195,182,149,192,138,21,60,153,173,158,223,190,249,254,246,77,175,146,140,111,209,106,47,21,205,111,235,241,97,83,158,23,60,54,47,104,124,54,249,128,83,85,8,70,229,145,245,25,87,76,217,101,48,120,39,232,22,252,65,104,154,97,41,223,163,153,228,11,42,37,222,210,143,148,24,36,99,54,26,141,208,29,227,59,42,152,34,69,138,70,19,152,252,242,72,55,184,202,212,3,227,4,104,250,106,95,210,98,211,159,119,49,6,131,191,193,190,172,214,25,75,81,170,153,34,68,232,61,138,108,133,125,58,77,181,163,144,70,169,48,87,224,235,82,20,138,166,138,18,227,162,245,81,86,121,142,197,126,226,39,76,180,123,36,211,29,205,49,226,80,149,164,182,29,133,198,165,7,67,169,102,64,82,9,157,186,131,67,22,105,101,128,158,1,7,141,209,205,170,72,25,206,156,193,205,237,9,63,150,130,233,49,128,103,85,206,255,155,35,14,99,106,32,188,11,115,114,146,215,197,95,118,233,209,55,168,38,124,178,44,67,107,138,202,2,58,144,160,220,198,114,181,111,150,103,78,154,206,249,217,75,92,116,204,175,202,144,171,68,211,137,75,202,163,207,25,229,234,87,137,74,44,224,203,255,226,205,210,64,181,115,226,103,47,201,73,197,217,215,138,162,57,249,217,133,179,109,253,41,94,191,122,241,164,203,159,36,21,26,157,3,143,86,184,115,142,8,138,73,193,179,189,217,56,173,247,181,134,142,241,29,229,196,10,128,27,135,106,32,42,45,20,90,16,140,192,88,11,39,54,93,65,233,183,248,170,198,112,128,140,218,244,154,179,201,116,71,211,127,238,197,182,210,93,242,92,101,89,95,87,2,196,174,181,123,160,69,183,215,107,81,140,91,36,198,232,199,233,200,22,84,237,10,98,84,142,189,96,69,93,84,118,224,251,99,10,73,84,212,5,216,119,69,117,157,224,35,121,193,194,203,223,184,149,220,36,172,239,2,115,216,37,146,39,170,230,70,98,83,250,176,215,141,208,63,174,129,46,92,77,161,219,16,8,44,83,98,29,179,230,173,132,187,61,218,62,89,81,5,119,136,237,185,191,112,86,81,217,111,45,7,107,129,31,135,46,29,214,225,218,125,130,170,74,112,227,77,152,101,159,183,151,130,17,4,176,224,210,61,201,25,255,200,182,59,37,251,46,157,212,252,241,137,179,163,164,105,10,33,62,101,197,26,103,247,101,9,56,10,18,46,147,15,16,108,37,104,211,114,206,103,249,154,18,66,201,239,197,150,165,49,111,214,69,145,161,57,36,70,184,184,30,105,70,21,141,187,211,245,218,173,55,2,119,78,59,160,193,69,172,43,252,82,115,182,154,167,75,26,77,183,23,31,131,52,184,178,189,207,95,226,208,146,136,211,111,181,40,171,194,20,248,136,196,152,25,144,113,156,27,185,28,223,104,219,71,172,240,205,68,127,162,13,60,53,60,146,129,185,27,25,235,195,102,27,149,156,220,141,252,183,166,116,197,78,159,235,117,232,209,207,240,70,242,179,143,127,254,97,56,52,113,120,32,61,255,184,117,132,189,109,178,104,164,153,109,80,255,151,167,138,145,100,150,151,80,222,217,215,10,103,242,96,61,39,3,143,222,171,107,209,57,60,157,247,195,16,133,8,150,10,234,118,18,164,123,209,7,40,126,209,97,157,67,137,220,58,1,88,189,26,237,181,176,201,78,54,77,106,175,118,221,52,167,239,200,75,250,198,131,121,164,78,235,52,246,155,155,222,85,18,110,207,137,189,250,235,226,207,201,43,91,207,189,90,206,183,222,16,233,230,65,45,135,194,134,244,129,253,132,134,116,208,175,107,200,99,132,173,136,46,33,237,188,202,128,181,5,19,50,187,182,115,128,215,105,91,240,30,137,254,130,242,175,20,35,201,86,179,93,77,189,30,59,218,1,26,79,98,55,133,95,190,189,142,196,87,183,45,250,113,146,64,242,47,35,153,17,166,226,113,12,253,203,211,141,67,93,60,94,178,200,173,31,238,111,200,67,231,98,11,82,212,20,140,179,33,196,179,84,135,224,198,97,8,199,5,239,248,195,229,130,16,26,119,238,37,33,152,211,190,132,163,228,171,96,38,28,204,156,12,81,68,43,34,21,137,9,67,83,115,130,77,117,64,109,193,62,90,17,244,155,71,79,26,74,96,146,6,255,13,56,28,247,235,3,95,248,218,117,3,141,212,237,196,149,236,2,189,190,88,16,157,111,135,43,162,11,53,197,205,133,83,63,254,5,87,128,129,255,88,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6629a3bc-6810-4a2f-8b11-7ca823a7ac06"));
		}

		#endregion

	}

	#endregion

}

