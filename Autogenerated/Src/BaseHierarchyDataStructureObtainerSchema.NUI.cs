namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseHierarchyDataStructureObtainerSchema

	/// <exclude/>
	public class BaseHierarchyDataStructureObtainerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseHierarchyDataStructureObtainerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseHierarchyDataStructureObtainerSchema(BaseHierarchyDataStructureObtainerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b3130ec2-02ff-4342-b0ee-e92d290d62af");
			Name = "BaseHierarchyDataStructureObtainer";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f6d1296c-7e61-436c-80dc-2684cfa4b28a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,203,110,219,48,16,60,43,64,254,97,235,92,20,160,144,238,137,109,160,206,163,53,208,180,1,140,244,78,83,107,155,128,68,10,36,149,66,109,242,239,93,138,212,195,178,155,56,23,27,92,13,103,103,31,67,201,10,52,37,227,8,139,199,135,149,218,216,228,70,201,141,216,86,154,89,161,228,249,217,223,243,179,168,50,66,110,97,85,27,139,5,125,207,115,228,238,163,73,190,162,68,45,248,117,135,233,73,52,82,148,226,23,26,183,132,133,155,156,25,115,5,11,102,240,155,64,205,52,223,213,183,204,178,149,213,21,183,149,198,159,107,203,4,209,53,183,210,52,133,169,169,138,130,233,122,30,206,183,104,184,22,107,52,176,38,18,80,1,15,198,146,86,220,214,176,81,26,182,104,173,19,82,106,149,17,175,251,232,233,147,150,53,29,208,150,213,58,23,28,184,211,118,130,52,184,130,229,123,226,35,106,24,253,118,117,223,11,204,51,42,252,81,43,75,109,195,204,127,46,219,35,60,25,212,212,115,233,123,58,58,250,30,70,23,40,51,207,183,79,78,64,95,160,210,46,69,83,77,224,247,149,189,95,83,124,9,110,196,209,235,219,153,30,208,238,212,145,58,198,131,106,2,158,187,239,125,51,25,148,86,216,26,12,223,97,193,220,52,14,199,225,35,37,211,172,0,73,139,57,155,248,75,171,230,206,15,138,76,230,119,67,154,6,53,77,155,27,61,129,70,74,42,205,188,171,117,154,182,161,253,214,31,239,76,144,223,157,239,149,190,27,200,136,169,44,183,97,99,105,161,143,209,51,107,86,50,112,205,64,226,239,255,37,242,23,162,158,131,224,99,218,207,30,67,174,171,10,105,2,223,119,97,236,212,235,152,199,151,13,226,245,186,203,62,164,160,11,251,27,149,12,107,121,96,146,109,81,147,143,237,146,54,137,73,142,139,218,101,141,15,170,243,244,52,72,100,124,7,177,203,195,27,77,64,147,30,162,147,32,181,237,71,36,54,16,123,104,178,52,191,132,182,21,203,225,229,5,186,152,127,88,92,232,83,143,99,121,133,55,185,146,200,214,121,215,219,40,226,138,82,201,202,61,46,238,72,91,235,254,122,151,135,228,201,151,44,107,147,14,228,123,184,95,134,126,72,215,31,218,255,67,147,61,43,145,193,82,10,203,114,241,7,227,145,161,171,189,99,91,201,8,52,27,193,134,146,78,179,24,43,203,188,118,123,217,60,142,221,155,184,174,97,23,150,79,112,234,123,70,11,8,70,85,154,94,124,103,158,183,140,168,131,105,166,6,17,184,198,205,108,114,124,145,39,105,239,53,80,155,195,140,201,200,129,161,111,97,23,78,179,97,251,80,125,192,96,113,24,187,207,253,254,192,67,108,24,122,253,7,59,255,130,169,33,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b3130ec2-02ff-4342-b0ee-e92d290d62af"));
		}

		#endregion

	}

	#endregion

}

