namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: NotificationStoreSchema

	/// <exclude/>
	public class NotificationStoreSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public NotificationStoreSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public NotificationStoreSchema(NotificationStoreSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8148e860-c8e3-4993-8ab3-6f0553b21565");
			Name = "NotificationStore";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("edbaf284-b37c-4101-84cb-76a44645334f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,223,111,218,48,16,126,78,165,254,15,94,247,2,82,21,222,91,138,212,86,116,66,107,187,170,176,85,83,85,33,19,46,224,45,216,153,237,176,69,19,255,251,206,118,126,24,72,160,227,129,132,187,243,119,223,125,119,182,225,116,5,42,165,17,144,155,167,135,177,136,117,120,43,120,204,22,153,164,154,9,126,122,242,247,244,36,200,20,227,11,50,206,149,134,21,250,147,4,34,227,84,225,39,224,32,89,116,185,19,179,251,59,188,103,252,215,158,241,25,226,2,168,118,213,36,36,52,91,195,177,118,62,244,126,148,176,192,229,228,54,161,74,93,144,71,161,89,204,34,75,220,70,217,160,52,155,37,44,34,145,137,217,15,33,23,100,212,176,46,192,178,241,187,206,128,213,106,202,53,102,121,146,108,77,181,195,14,82,247,131,68,198,79,148,150,182,190,201,151,231,225,244,243,240,59,185,34,103,62,120,45,221,153,43,32,248,8,124,238,82,108,231,187,99,144,204,219,146,185,52,175,111,100,202,61,240,39,41,214,108,14,82,61,98,75,47,253,120,9,116,46,120,146,19,49,251,129,233,201,52,17,209,79,144,200,142,195,239,194,216,233,54,47,25,221,210,104,9,78,170,169,170,165,111,101,110,149,146,89,132,161,134,191,21,191,160,239,26,177,167,118,167,75,204,144,5,129,195,71,90,214,28,218,204,175,246,251,30,214,144,132,215,105,154,20,11,223,44,219,160,93,0,68,113,112,56,163,250,27,77,50,232,151,178,13,58,85,131,92,209,155,195,21,33,110,10,82,51,56,218,143,199,86,54,174,192,5,232,226,45,96,49,233,28,98,143,189,201,146,164,84,230,72,165,88,98,107,234,155,252,90,41,88,205,146,188,104,49,126,198,116,13,19,81,119,182,242,160,18,230,33,65,103,146,31,27,47,23,125,68,188,7,208,75,209,58,201,107,193,230,100,159,205,214,60,188,86,221,122,51,77,61,204,105,211,210,153,247,42,84,100,158,228,41,184,19,195,190,93,17,141,15,17,119,182,142,138,66,180,209,144,103,43,144,116,150,64,223,68,15,108,176,114,78,45,243,178,133,107,42,9,45,18,33,98,153,211,204,103,149,191,74,89,54,196,66,97,52,245,162,141,95,149,45,219,16,36,19,45,73,167,62,77,141,255,94,208,249,240,79,4,169,49,16,168,230,168,196,131,208,162,132,47,75,64,193,53,185,66,214,228,67,49,116,94,119,219,170,187,201,71,92,131,140,205,197,97,231,111,178,99,237,216,176,243,90,196,195,106,189,48,189,244,78,14,15,115,199,227,112,189,68,13,184,174,235,3,151,27,202,77,210,148,39,28,131,17,205,130,90,13,240,25,222,161,6,102,77,129,92,108,6,15,44,156,136,107,41,105,185,161,118,102,110,191,194,38,121,90,116,56,39,219,163,87,54,174,32,97,99,92,39,203,214,249,204,49,81,149,1,39,196,92,229,154,50,174,188,185,250,79,202,187,234,183,208,110,162,217,66,208,71,195,235,7,247,166,55,154,184,197,190,42,144,24,195,221,44,119,221,40,118,183,103,243,221,103,142,119,251,244,122,61,210,87,217,106,69,101,62,40,13,207,150,175,34,220,252,11,34,34,38,254,233,66,210,242,148,8,43,128,222,46,66,223,149,172,6,247,12,255,0,24,4,3,21,246,123,165,221,187,249,154,102,244,208,193,84,29,71,230,190,198,235,194,93,219,213,94,46,196,110,93,126,244,144,118,86,223,184,249,7,117,17,169,43,15,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8148e860-c8e3-4993-8ab3-6f0553b21565"));
		}

		#endregion

	}

	#endregion

}

