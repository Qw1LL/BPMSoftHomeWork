namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseAsyncReportGeneratorSchema

	/// <exclude/>
	public class BaseAsyncReportGeneratorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseAsyncReportGeneratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseAsyncReportGeneratorSchema(BaseAsyncReportGeneratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("52bb6fa5-1309-457e-afd9-b2f8dcb16569");
			Name = "BaseAsyncReportGenerator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f8ef1a6f-6619-48e3-9227-afa9b7782f83");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,85,77,111,226,48,16,61,83,169,255,193,162,123,160,18,10,247,22,144,90,118,91,33,109,87,85,161,63,192,36,3,181,26,156,172,237,208,69,21,255,125,199,31,33,118,72,128,238,97,47,180,25,143,223,188,153,55,51,230,116,13,50,167,49,144,251,231,167,89,182,84,209,36,227,75,182,42,4,85,44,227,151,23,159,151,23,157,66,50,190,34,179,173,84,176,190,221,127,63,176,20,208,121,3,66,129,136,38,41,3,174,90,78,245,199,143,63,10,184,68,76,50,106,188,26,105,99,117,191,162,35,26,173,30,201,232,5,242,76,168,25,136,13,139,91,32,162,7,26,171,76,48,144,199,19,136,230,84,190,163,11,58,93,9,88,105,186,147,148,74,121,67,238,169,132,59,185,229,177,141,246,8,28,48,124,38,140,239,96,48,32,67,89,172,215,84,108,199,238,27,253,4,72,196,148,132,146,5,222,38,116,33,149,64,30,26,53,91,162,85,24,40,178,178,88,218,188,44,184,57,167,41,83,91,98,121,198,150,35,145,54,193,168,140,55,240,2,230,197,34,101,241,62,2,137,53,233,86,206,228,134,76,27,237,136,132,130,227,239,62,251,103,145,229,24,28,11,119,163,255,87,16,43,72,172,75,61,105,99,120,4,204,87,189,1,145,89,33,176,173,92,138,75,172,53,129,178,5,116,10,135,57,116,242,18,191,202,163,189,141,162,176,169,102,38,92,104,251,196,202,170,91,178,59,135,174,162,2,157,255,27,221,185,9,247,239,116,25,151,138,114,172,175,233,35,141,67,246,113,81,124,211,202,167,88,111,152,80,5,77,201,52,96,109,231,32,204,196,217,70,99,59,12,118,150,182,17,178,25,54,93,30,247,174,237,8,117,174,128,39,182,145,194,174,122,2,245,150,37,103,183,148,105,79,144,165,58,11,88,226,72,227,60,240,68,207,135,202,154,70,164,33,117,99,201,169,160,107,194,113,239,141,186,5,250,35,119,142,12,144,85,119,60,148,0,36,22,176,28,117,95,195,163,193,56,26,14,204,213,102,164,216,95,72,221,241,75,48,216,56,88,193,249,33,148,0,85,8,46,241,158,249,91,94,68,145,92,202,9,85,52,34,30,63,27,225,59,154,45,183,18,161,165,49,43,119,44,57,96,116,176,150,94,152,39,110,28,255,179,79,106,11,34,216,187,97,82,95,144,156,109,48,53,123,154,219,15,130,52,181,148,216,81,54,226,47,172,106,207,35,109,203,112,77,244,115,212,233,108,168,112,22,221,125,218,23,31,21,107,136,38,52,215,116,110,27,28,253,39,168,97,0,163,121,54,51,52,122,215,248,239,207,236,3,132,105,100,196,177,213,37,223,186,159,97,216,93,228,25,246,64,187,174,185,181,11,83,124,44,88,66,102,184,103,92,138,118,104,180,191,126,115,14,147,237,151,69,137,105,154,46,104,252,254,42,82,191,0,184,0,234,32,47,240,187,0,137,131,74,56,124,216,88,213,120,214,156,122,6,168,227,129,247,173,197,213,81,51,113,150,134,221,234,78,26,170,232,42,166,25,198,65,220,250,187,239,61,184,81,11,85,243,70,245,218,19,109,141,53,77,48,90,104,210,219,234,238,131,50,140,140,250,154,70,147,69,170,106,10,215,97,124,33,79,119,182,121,132,189,77,198,248,27,8,166,146,44,118,83,219,248,234,90,50,158,9,65,45,57,28,109,211,65,246,113,47,247,117,179,111,53,59,245,147,94,221,108,212,80,248,227,183,147,211,17,235,140,66,170,35,130,105,155,166,92,105,239,238,220,111,43,205,52,186,145,118,154,120,34,217,214,114,238,8,127,24,243,60,149,116,119,183,228,106,2,87,59,164,31,198,180,48,187,175,75,228,205,109,88,199,243,36,50,229,108,197,56,181,132,155,24,29,219,196,7,91,18,75,29,110,253,122,132,131,77,222,241,175,187,5,27,46,103,183,145,143,78,96,251,182,43,87,92,248,46,78,188,77,119,82,112,131,83,15,90,234,173,41,6,98,215,134,215,90,67,35,218,254,2,50,21,220,225,15,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("52bb6fa5-1309-457e-afd9-b2f8dcb16569"));
		}

		#endregion

	}

	#endregion

}

