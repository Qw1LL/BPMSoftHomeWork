namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TouchQueueMessageProcessorLoaderSchema

	/// <exclude/>
	public class TouchQueueMessageProcessorLoaderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TouchQueueMessageProcessorLoaderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TouchQueueMessageProcessorLoaderSchema(TouchQueueMessageProcessorLoaderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4d82fe34-a6a1-4613-a17e-ba392938c2ae");
			Name = "TouchQueueMessageProcessorLoader";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,97,111,211,60,16,254,28,36,254,195,177,87,66,169,132,210,239,208,22,149,106,64,165,141,13,54,196,199,201,77,47,173,153,19,23,219,233,75,65,251,239,156,237,56,105,146,45,133,47,85,124,246,61,190,123,238,241,93,11,150,163,222,177,20,225,221,245,229,141,204,76,178,144,69,198,55,165,98,134,203,226,249,179,223,207,159,69,165,230,197,6,110,14,218,96,254,166,179,166,243,66,96,106,15,235,228,3,22,168,120,218,59,115,193,139,31,61,227,23,204,42,199,102,171,9,34,207,31,183,43,36,43,217,255,83,184,33,87,88,8,166,245,107,184,149,101,186,253,92,98,137,151,168,53,219,224,181,146,41,125,73,117,33,217,26,149,243,25,143,199,48,209,101,158,51,117,152,85,107,231,15,70,130,160,115,26,152,16,192,246,140,11,182,18,72,102,66,133,31,22,22,114,143,11,187,0,172,147,0,57,62,194,220,149,43,193,83,72,29,236,233,168,34,226,151,126,155,116,136,70,163,202,212,16,254,107,184,118,96,254,68,55,120,103,88,22,220,112,38,248,47,212,80,224,255,192,201,155,21,84,77,153,129,217,162,15,195,198,217,15,212,91,118,76,177,28,10,82,193,244,172,212,168,232,254,194,23,229,108,246,149,214,144,214,134,26,60,153,140,157,155,67,169,242,61,149,105,252,181,5,14,237,187,70,96,101,22,69,119,109,51,76,59,231,172,32,162,200,38,93,195,223,30,118,168,227,145,219,121,168,184,196,98,237,233,108,115,251,158,163,88,91,86,21,223,51,131,126,115,231,23,64,169,25,202,67,33,91,203,66,28,64,174,190,211,157,112,39,100,122,127,229,191,167,142,98,191,225,110,124,196,127,121,94,148,57,42,171,158,137,13,109,6,119,187,86,168,29,183,14,45,29,2,222,12,39,116,137,102,43,159,204,168,31,202,7,52,115,173,49,95,137,131,167,45,172,128,85,31,161,16,97,157,44,182,152,222,207,213,134,144,10,243,169,20,34,182,90,145,89,92,123,120,234,163,254,109,166,74,151,54,141,58,84,192,145,179,18,149,193,255,45,53,13,115,92,196,232,1,82,102,232,217,197,77,131,176,251,86,71,231,63,83,220,57,162,112,212,5,196,196,161,36,223,182,168,48,166,106,81,4,240,130,106,70,65,7,100,247,171,208,148,170,56,10,239,161,205,219,74,74,1,31,153,118,146,174,117,54,55,70,241,85,105,48,182,215,56,239,16,194,17,160,77,102,81,106,35,243,250,188,142,237,6,49,214,60,145,62,232,232,21,208,171,199,145,79,41,185,202,236,37,147,33,143,89,60,74,230,197,161,173,252,193,210,119,159,12,252,6,119,221,158,169,186,26,183,21,153,61,165,116,132,153,124,147,234,222,205,141,183,205,103,240,168,216,174,104,105,65,135,234,88,10,167,179,166,128,201,82,223,148,43,215,173,174,178,64,216,59,166,241,233,190,50,170,200,138,94,190,28,170,150,43,212,163,36,237,37,95,187,6,218,39,198,33,243,12,226,206,227,173,245,20,196,231,115,60,86,151,237,23,228,215,180,141,250,236,223,224,181,0,43,68,87,160,142,159,171,208,163,61,144,154,104,239,108,219,144,220,202,11,174,125,7,11,151,116,168,25,102,30,22,212,37,77,179,94,86,115,225,201,151,49,39,205,16,174,84,137,247,172,29,236,217,87,221,166,55,34,201,156,136,224,111,186,125,211,28,79,13,209,47,46,202,127,155,253,144,17,15,105,169,20,181,197,90,226,67,131,214,83,161,103,150,122,59,157,39,26,105,60,43,204,166,103,195,185,158,141,103,245,228,213,52,122,3,208,209,240,221,115,101,74,38,90,207,126,24,180,221,16,26,205,183,164,166,171,137,103,67,62,133,23,212,212,17,95,242,94,170,115,150,110,195,139,15,58,183,247,212,255,85,166,79,10,202,105,169,146,245,209,255,174,249,122,189,204,62,73,115,254,147,34,211,113,0,10,130,110,247,159,198,111,64,53,222,218,54,146,237,15,92,251,145,118,30,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4d82fe34-a6a1-4613-a17e-ba392938c2ae"));
		}

		#endregion

	}

	#endregion

}

