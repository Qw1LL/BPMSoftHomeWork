namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SendingLimitValidationRuleSchema

	/// <exclude/>
	public class SendingLimitValidationRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SendingLimitValidationRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SendingLimitValidationRuleSchema(SendingLimitValidationRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("99b5f416-c59e-435b-8afa-329e08b76089");
			Name = "SendingLimitValidationRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b39fd9cb-6840-4142-8022-7c9d0489d323");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,84,223,111,218,48,16,126,78,165,254,15,30,123,9,210,100,246,204,10,210,96,84,67,130,181,130,117,47,85,31,220,228,66,173,57,118,230,31,12,84,241,191,247,108,39,36,5,38,77,66,33,254,238,238,187,251,238,206,33,146,149,96,42,150,1,153,220,47,215,170,176,116,170,100,193,55,78,51,203,149,188,190,122,189,190,74,156,225,114,67,214,123,99,161,164,11,46,255,124,57,130,109,84,89,42,137,56,90,6,131,1,185,49,174,44,153,222,143,235,243,10,42,13,6,164,53,196,190,0,193,183,220,135,11,94,114,132,182,76,240,60,36,36,218,9,160,13,201,160,195,82,185,103,193,51,146,9,102,12,89,199,248,133,15,255,117,12,94,97,44,25,146,249,146,113,129,214,181,101,22,222,91,145,7,5,225,51,249,168,97,227,243,45,193,190,168,220,12,201,125,224,143,198,83,5,30,72,102,59,200,156,133,110,177,133,210,167,82,184,12,2,51,161,92,142,54,189,229,89,208,115,46,40,34,21,211,172,36,126,12,163,158,241,5,247,198,63,125,131,252,107,224,111,211,209,155,65,240,110,131,53,88,167,165,25,207,37,250,75,28,162,42,176,110,192,244,26,138,81,175,163,29,135,172,164,129,222,96,76,116,59,138,110,223,193,56,97,13,230,104,72,125,150,186,233,231,68,13,4,105,183,217,177,236,62,241,75,147,36,181,5,23,202,194,206,146,172,254,31,69,47,191,104,254,236,119,41,73,182,236,168,20,53,143,136,132,191,100,86,34,193,133,73,43,157,246,219,168,103,39,126,7,79,140,74,39,205,161,95,103,163,71,100,38,45,183,251,11,113,77,125,49,233,228,20,142,90,146,7,156,37,66,18,178,208,174,81,35,135,190,55,124,138,222,235,56,248,175,21,239,120,182,96,237,181,4,99,216,6,230,185,137,201,31,159,200,107,91,23,189,215,220,239,202,84,9,87,74,212,238,128,28,234,200,21,100,188,226,56,195,169,114,210,151,254,57,224,135,179,102,98,73,117,22,116,58,54,152,126,103,50,23,157,187,145,158,118,163,79,111,185,54,246,78,127,131,130,225,98,52,29,231,5,73,63,156,113,211,185,249,225,132,184,211,179,178,178,251,180,223,108,64,179,2,15,22,255,44,7,67,23,106,67,103,90,43,125,171,116,201,108,218,123,252,247,85,166,205,142,61,13,155,11,31,111,25,129,93,6,144,67,78,123,117,89,73,92,218,48,193,11,203,90,87,147,172,93,150,97,197,216,138,130,9,227,191,6,109,211,14,225,249,95,60,45,141,213,46,178,68,18,228,8,223,22,44,54,126,94,194,25,81,252,189,1,174,106,161,83,107,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("99b5f416-c59e-435b-8afa-329e08b76089"));
		}

		#endregion

	}

	#endregion

}

