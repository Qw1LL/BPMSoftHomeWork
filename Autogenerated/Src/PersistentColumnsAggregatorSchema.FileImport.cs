namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: PersistentColumnsAggregatorSchema

	/// <exclude/>
	public class PersistentColumnsAggregatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public PersistentColumnsAggregatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public PersistentColumnsAggregatorSchema(PersistentColumnsAggregatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c55e791f-dd73-438a-b5c8-f24b079193bd");
			Name = "PersistentColumnsAggregator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,229,87,75,79,227,48,16,62,7,105,255,131,85,46,137,22,165,119,104,139,10,162,108,37,88,85,11,156,87,38,153,182,150,18,59,107,59,93,85,168,255,125,199,113,250,200,203,45,236,238,137,11,144,241,248,155,247,55,134,211,20,84,70,35,32,55,179,199,39,49,215,225,173,224,115,182,200,37,213,76,240,112,194,18,152,166,153,144,250,203,217,219,151,51,47,87,140,47,200,211,90,105,72,81,53,73,32,50,122,42,188,7,14,146,69,87,117,157,7,198,127,237,133,123,35,105,42,120,155,92,66,187,52,156,208,72,11,201,64,225,57,106,156,75,88,160,97,114,155,80,165,46,201,12,164,98,104,144,107,116,42,79,185,26,47,22,168,65,241,74,161,222,239,247,201,64,229,105,74,229,122,84,126,143,57,97,92,105,202,49,122,49,39,122,201,20,137,12,28,193,63,36,166,5,227,98,175,9,144,185,144,36,147,34,2,85,184,21,89,11,100,69,147,28,84,184,69,239,31,192,103,249,107,194,162,18,205,225,27,185,36,55,84,65,67,62,152,238,197,51,107,89,200,209,5,153,58,227,244,176,66,248,115,151,155,9,131,36,54,201,145,108,69,53,216,195,204,126,144,233,29,207,83,144,20,3,28,76,191,11,94,71,46,205,142,200,79,222,121,40,100,89,141,118,212,206,91,8,154,29,67,60,7,30,219,56,170,65,149,193,152,168,4,130,104,236,136,143,185,208,29,19,25,58,29,36,215,215,198,158,231,249,46,165,33,185,7,221,40,215,94,193,15,130,171,15,86,164,251,108,235,188,179,100,7,254,187,245,138,16,90,140,181,70,209,85,47,228,19,165,101,110,134,215,180,98,49,24,86,163,152,26,198,151,200,27,58,22,56,45,18,230,195,94,235,60,188,61,111,122,125,51,88,141,65,46,4,183,18,48,129,170,58,206,235,12,80,19,160,196,117,76,14,66,155,41,110,142,177,149,100,84,210,148,112,100,202,97,47,87,32,49,34,110,105,175,55,122,193,111,36,132,173,32,28,244,11,237,226,114,73,2,14,195,254,75,5,142,84,209,3,100,135,87,204,134,95,23,191,145,205,231,200,96,227,178,179,95,123,163,253,66,50,254,163,50,217,15,168,97,240,21,139,241,155,56,77,100,39,227,183,97,255,203,250,95,20,83,122,50,43,56,115,211,130,229,160,198,238,28,4,5,206,101,177,44,155,125,89,28,30,37,149,99,251,196,96,56,137,213,185,59,60,111,227,38,164,71,208,75,113,218,90,116,164,232,24,185,151,201,88,81,211,220,141,8,138,87,139,125,209,172,241,233,164,199,73,226,178,230,115,248,125,72,164,99,185,64,39,185,246,235,211,100,203,236,121,213,190,10,130,240,89,60,32,180,111,200,26,143,235,30,133,19,33,239,104,180,244,107,7,102,151,140,227,248,27,229,113,2,178,20,223,73,137,157,91,211,12,74,100,9,58,151,188,17,242,97,93,90,51,221,150,223,99,155,231,3,41,254,20,137,93,9,22,119,161,183,189,43,235,160,219,196,214,196,225,33,16,249,58,36,22,255,80,250,206,241,19,26,211,8,241,95,236,178,108,139,65,196,10,164,68,10,38,166,28,237,207,103,211,83,117,194,168,116,81,181,230,216,11,5,91,157,218,33,164,214,27,87,59,220,108,95,246,2,174,219,197,109,31,237,110,132,88,199,31,148,47,192,119,62,250,194,39,48,139,169,173,205,90,75,30,116,116,89,139,221,255,111,180,108,237,157,237,247,117,209,209,7,229,212,253,110,57,216,212,197,224,148,238,249,246,191,222,153,217,230,160,205,171,129,213,4,219,206,113,36,200,49,253,246,110,215,140,249,13,99,54,85,27,251,187,61,57,86,90,21,162,236,15,65,57,57,27,227,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c55e791f-dd73-438a-b5c8-f24b079193bd"));
		}

		#endregion

	}

	#endregion

}

