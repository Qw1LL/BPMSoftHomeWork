namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SyncJobServiceSchema

	/// <exclude/>
	public class SyncJobServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SyncJobServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SyncJobServiceSchema(SyncJobServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c6e894ef-d7a0-4a14-8c3a-ec0f33a90d38");
			Name = "SyncJobService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("a2fc2e06-4c85-4afa-ac7e-48c4edb4a538");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,84,77,111,219,48,12,61,187,64,255,3,145,92,82,204,80,118,238,71,128,54,195,134,22,72,27,196,27,122,40,118,80,108,54,213,106,75,158,36,7,240,138,254,247,234,43,177,227,186,77,183,249,160,68,228,163,244,248,40,146,211,2,85,73,83,132,139,249,44,17,247,154,76,5,191,103,171,74,82,205,4,39,73,205,211,43,177,76,80,174,89,138,135,7,79,135,7,81,165,24,95,65,82,43,141,5,89,84,92,179,2,137,65,48,154,179,63,46,236,164,139,10,241,51,145,97,254,174,147,156,167,154,173,247,31,66,110,113,217,0,26,238,18,251,173,36,73,31,48,171,114,148,175,253,230,40,131,41,10,119,165,241,14,37,174,204,253,48,205,169,82,199,208,149,32,26,143,199,112,170,170,162,160,178,158,132,253,208,126,126,117,191,225,47,108,109,254,219,68,143,91,225,119,225,100,35,188,150,52,213,63,173,237,92,149,215,168,13,171,210,104,177,100,57,211,245,2,127,87,76,98,129,92,171,81,123,99,5,129,51,216,19,98,81,36,24,178,35,123,73,89,45,115,150,66,106,211,236,100,9,199,112,65,21,54,57,219,186,111,133,153,161,126,16,153,145,102,238,78,176,174,174,38,141,40,141,44,29,137,122,20,34,219,163,218,2,121,75,73,37,45,128,155,247,122,54,144,38,13,84,122,48,9,97,167,99,231,117,224,187,155,18,253,227,109,11,26,221,153,42,95,242,181,120,196,145,167,111,20,27,204,111,146,239,131,24,46,68,86,39,186,206,173,138,6,54,67,165,232,10,183,86,114,43,105,89,98,22,195,194,223,251,85,200,130,234,29,176,55,145,43,37,120,108,175,139,22,166,173,4,87,248,62,214,213,97,83,136,181,96,25,76,37,82,141,161,26,163,240,27,238,133,144,247,17,184,114,68,107,42,225,151,88,94,27,77,204,5,193,73,174,188,229,164,13,249,38,69,85,246,227,224,19,12,156,123,208,68,148,82,164,134,107,39,96,222,88,91,80,211,247,34,187,228,51,198,43,141,170,13,223,245,248,16,118,15,163,110,200,4,62,111,50,138,206,203,114,219,169,219,158,245,192,188,14,4,172,48,33,237,120,39,185,184,77,220,151,33,138,126,40,148,230,37,112,76,221,64,187,21,242,209,13,60,226,35,58,238,105,37,165,233,22,107,13,128,14,219,24,120,149,231,49,104,89,225,145,207,233,217,173,152,43,236,205,98,129,133,88,227,155,164,219,135,184,101,136,60,243,141,102,118,214,178,99,120,115,62,133,55,242,193,249,212,110,192,190,73,213,59,168,190,80,77,219,77,213,55,64,26,26,59,35,195,148,206,8,169,25,126,120,106,52,196,134,123,7,132,99,54,195,98,137,178,221,80,74,75,59,231,55,15,253,9,86,168,79,64,217,197,41,253,81,10,61,155,102,71,254,133,82,171,149,254,131,86,207,16,253,59,54,140,107,232,180,233,107,58,239,190,199,231,23,152,15,55,78,65,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c6e894ef-d7a0-4a14-8c3a-ec0f33a90d38"));
		}

		#endregion

	}

	#endregion

}

