namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CommunicationTypeConstsSchema

	/// <exclude/>
	public class CommunicationTypeConstsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CommunicationTypeConstsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CommunicationTypeConstsSchema(CommunicationTypeConstsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f8abe0c2-cd18-47c3-9d3d-1824091009b2");
			Name = "CommunicationTypeConsts";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("467e8661-453f-46e6-ab9a-2749b5699bb7");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,149,91,107,220,48,16,133,159,55,144,255,32,242,212,66,149,72,150,111,162,23,104,67,218,6,18,26,216,64,159,71,210,40,49,241,101,177,189,36,75,201,127,143,100,239,82,47,141,88,26,63,45,222,51,62,223,156,65,30,213,80,97,183,2,141,228,219,205,245,178,177,253,233,121,83,219,226,110,221,66,95,52,245,241,209,159,227,163,197,186,43,234,59,178,220,116,61,86,78,47,75,212,94,236,78,127,96,141,109,161,63,30,31,185,170,213,90,149,133,38,93,239,222,212,68,151,208,117,228,188,169,170,117,93,232,193,236,118,179,66,231,222,245,157,171,246,190,139,179,179,253,10,210,187,18,66,201,85,81,63,160,185,116,248,197,206,86,251,23,157,121,235,91,217,233,151,134,124,38,39,8,204,10,197,128,42,208,150,34,227,156,202,72,11,202,24,79,18,195,98,205,184,57,25,123,12,18,111,31,139,190,199,54,4,220,202,91,94,198,133,140,243,204,241,140,120,35,239,187,27,185,106,154,135,16,112,167,143,196,40,147,137,49,76,204,73,120,65,43,40,202,16,239,194,139,219,120,200,117,158,56,119,109,181,162,198,122,152,138,192,195,76,202,80,138,92,167,135,96,203,7,247,27,98,13,226,200,98,18,99,101,32,157,195,250,217,84,72,66,44,47,222,220,55,245,142,231,88,16,165,14,149,41,61,242,20,99,246,191,120,215,141,42,202,96,184,81,157,32,77,12,145,209,57,163,130,105,120,99,196,223,77,27,60,41,94,155,224,132,49,70,9,173,105,34,16,105,44,117,76,33,227,238,208,72,140,146,204,38,110,224,242,32,14,85,144,134,106,228,164,144,43,144,81,70,211,204,193,222,22,235,26,138,224,39,238,181,73,172,20,132,85,156,233,57,184,175,198,20,254,25,130,95,193,223,138,9,58,82,34,207,34,198,231,160,127,245,247,216,146,149,55,13,177,135,146,41,150,107,102,82,41,168,132,36,162,177,176,110,191,101,150,83,157,154,92,37,66,102,137,137,15,111,153,167,240,130,121,26,57,18,50,80,49,87,115,226,93,60,245,88,119,195,125,17,88,47,187,130,237,138,145,70,114,140,19,154,27,233,178,161,200,169,76,128,81,180,57,64,148,107,137,25,28,98,14,163,34,239,246,53,172,251,162,223,188,15,181,177,87,60,153,53,50,145,217,40,129,57,107,97,89,117,115,186,113,175,143,189,0,147,9,231,42,166,92,88,55,17,191,235,33,119,27,43,176,235,175,10,103,216,88,226,78,143,115,159,210,135,211,214,141,237,29,108,108,123,107,183,8,166,169,203,205,96,251,105,236,243,203,43,99,243,87,249,165,233,92,191,53,62,238,23,15,23,251,226,181,73,127,248,87,25,82,251,191,159,93,162,197,179,79,245,252,2,176,221,12,197,147,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f8abe0c2-cd18-47c3-9d3d-1824091009b2"));
		}

		#endregion

	}

	#endregion

}

