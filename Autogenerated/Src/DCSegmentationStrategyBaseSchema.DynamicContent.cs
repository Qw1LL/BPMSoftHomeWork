namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DCSegmentationStrategyBaseSchema

	/// <exclude/>
	public class DCSegmentationStrategyBaseSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DCSegmentationStrategyBaseSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DCSegmentationStrategyBaseSchema(DCSegmentationStrategyBaseSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1a5fefef-c426-40f0-a77a-e097708df1d9");
			Name = "DCSegmentationStrategyBase";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("41c9b305-ccaa-4408-abc9-8158dd3fa84a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,83,77,111,155,64,16,61,99,201,255,97,228,94,18,169,50,247,250,67,74,112,212,83,84,43,168,63,96,13,3,172,4,187,116,119,112,130,162,254,247,206,46,224,98,7,167,62,245,130,196,236,204,155,121,239,205,40,81,161,173,69,130,240,184,127,142,117,70,203,72,171,76,230,141,17,36,181,90,238,90,37,42,153,112,144,80,209,124,246,62,159,5,141,149,42,135,184,181,132,213,106,62,227,200,23,131,57,103,67,84,10,107,191,193,46,138,49,175,56,223,99,196,196,88,152,183,143,194,162,207,14,195,16,214,182,169,42,97,218,109,255,255,130,181,65,203,37,22,108,151,47,209,2,21,130,64,24,4,219,225,185,190,66,129,104,82,137,42,193,229,0,22,142,208,234,230,80,202,4,196,193,225,36,4,137,155,233,211,145,2,38,197,223,191,44,180,226,218,38,33,109,152,204,222,227,117,25,151,147,251,64,100,144,193,44,240,252,186,60,162,25,8,180,32,25,71,240,156,240,42,169,0,1,76,49,197,76,42,76,33,113,130,190,145,99,240,145,66,23,169,133,17,21,176,252,184,89,216,209,240,222,139,55,90,108,31,88,22,2,157,141,113,125,17,18,26,251,21,94,11,153,20,94,190,206,177,67,59,210,118,185,14,125,174,239,215,107,118,93,164,187,243,167,126,132,193,150,113,236,30,220,138,4,193,84,250,102,170,128,55,40,8,126,247,14,160,74,59,19,206,29,217,27,93,163,33,30,251,6,63,70,171,68,5,14,74,67,166,205,201,16,235,84,91,91,228,87,131,217,102,113,157,248,34,220,94,241,104,82,179,129,233,84,236,29,114,164,21,252,131,234,51,82,161,211,91,120,238,188,229,182,183,217,96,205,233,2,108,161,155,50,133,131,187,25,69,64,154,95,18,89,243,189,92,91,182,203,131,145,234,52,255,67,127,104,119,247,171,255,48,136,143,24,164,198,40,187,253,169,228,175,6,65,166,238,236,51,201,103,117,105,217,75,215,136,29,2,182,118,244,244,189,145,233,242,169,170,169,117,238,173,195,1,114,138,172,203,29,216,198,124,36,37,62,113,63,106,63,103,28,119,220,12,86,250,136,32,202,18,220,126,122,183,69,9,169,32,113,163,214,71,205,237,163,18,133,249,81,239,184,236,212,246,98,61,186,165,57,15,114,236,15,47,115,160,30,190,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1a5fefef-c426-40f0-a77a-e097708df1d9"));
		}

		#endregion

	}

	#endregion

}

