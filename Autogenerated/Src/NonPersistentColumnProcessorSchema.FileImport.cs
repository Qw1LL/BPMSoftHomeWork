namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: NonPersistentColumnProcessorSchema

	/// <exclude/>
	public class NonPersistentColumnProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public NonPersistentColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public NonPersistentColumnProcessorSchema(NonPersistentColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0a6c31aa-e931-47f7-9a2a-e8f05e85d51f");
			Name = "NonPersistentColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,85,93,107,219,48,20,125,118,161,255,225,46,125,152,3,33,126,239,146,148,245,35,165,140,142,176,164,123,29,138,125,211,106,216,146,145,100,143,80,242,223,119,109,201,142,237,36,110,24,236,197,232,227,250,220,123,207,57,146,4,75,80,167,44,68,184,93,60,47,229,198,140,239,164,216,240,215,76,49,195,165,24,207,121,140,79,73,42,149,185,188,120,191,188,240,50,205,197,43,44,183,218,96,66,161,113,140,97,17,167,199,143,40,80,241,240,75,29,179,199,83,72,171,180,158,102,235,152,135,192,214,218,40,22,26,8,99,166,53,124,151,98,129,74,115,66,20,134,16,179,68,44,148,12,81,107,169,38,171,31,168,179,216,204,224,26,110,153,198,206,246,8,158,142,175,158,198,164,50,168,13,250,122,87,10,95,169,114,152,115,140,35,125,13,11,197,115,102,208,110,166,118,2,247,188,108,143,169,237,132,138,166,182,70,80,151,244,75,149,3,109,155,243,174,80,68,22,178,141,79,124,210,175,89,104,164,42,179,72,67,148,97,100,131,130,32,128,9,23,111,68,157,137,100,8,161,194,205,116,112,164,169,65,48,171,227,117,150,36,84,81,189,112,167,144,106,213,192,41,17,19,36,165,220,128,217,166,72,145,136,14,178,143,229,119,215,210,142,146,140,235,44,65,55,205,36,101,138,37,32,200,49,211,65,166,81,81,103,194,202,63,152,189,208,28,194,122,97,60,9,202,232,242,231,180,234,185,87,107,255,165,5,9,237,12,67,114,192,154,104,241,187,203,239,176,235,231,159,18,164,168,12,199,19,236,119,219,180,92,232,19,68,236,123,233,179,134,195,128,233,222,37,112,115,3,126,61,153,130,192,63,125,16,254,112,248,129,175,158,209,188,201,232,204,166,190,70,81,161,78,78,68,80,233,57,139,51,4,35,161,42,39,172,15,242,153,242,135,165,118,63,11,156,193,172,97,51,123,85,220,53,118,131,89,211,10,7,64,101,41,115,169,150,44,39,36,185,254,77,101,20,149,105,154,31,247,80,206,149,201,88,12,185,228,81,209,215,74,58,182,253,131,228,69,95,213,184,166,22,154,41,201,63,5,186,151,51,229,88,153,54,127,26,151,223,226,78,243,60,190,1,255,83,101,14,114,160,97,116,222,190,225,214,47,255,27,86,72,94,21,66,165,249,7,80,163,118,118,139,188,171,241,155,155,48,37,147,100,113,92,3,47,201,8,238,180,60,40,69,7,166,129,222,68,114,231,225,248,85,97,61,224,122,236,26,225,179,46,239,141,127,242,64,87,100,133,38,83,66,211,70,53,58,46,99,165,138,171,172,132,235,87,178,34,196,226,66,132,27,70,0,190,3,178,76,124,116,39,216,151,168,239,14,126,114,84,99,84,38,213,52,205,121,132,213,69,236,222,50,103,216,57,23,54,204,105,215,106,224,30,181,225,162,124,78,169,216,122,76,207,212,57,93,22,182,168,44,181,82,219,71,116,20,29,177,150,204,76,77,103,113,126,108,73,123,103,22,80,251,245,3,127,157,99,48,231,213,138,251,61,90,211,201,85,13,245,133,227,242,181,53,62,4,111,29,230,214,209,109,35,185,112,87,67,123,175,169,254,9,97,79,63,66,109,109,187,23,141,111,245,122,16,134,155,45,240,198,164,45,165,83,241,3,125,71,101,15,103,248,196,233,243,31,122,114,17,254,137,71,212,166,220,253,5,16,74,129,244,34,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0a6c31aa-e931-47f7-9a2a-e8f05e85d51f"));
		}

		#endregion

	}

	#endregion

}

