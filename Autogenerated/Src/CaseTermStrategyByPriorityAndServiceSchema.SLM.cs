namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CaseTermStrategyByPriorityAndServiceSchema

	/// <exclude/>
	public class CaseTermStrategyByPriorityAndServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseTermStrategyByPriorityAndServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseTermStrategyByPriorityAndServiceSchema(CaseTermStrategyByPriorityAndServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("35e93330-0462-4abd-af9b-c14ef962a73d");
			Name = "CaseTermStrategyByPriorityAndService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b11d550e-0087-4f53-ae17-fb00d41102cf");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,84,77,111,219,48,12,61,187,64,255,3,231,93,92,32,176,239,93,26,160,77,183,34,135,14,29,146,238,174,88,116,170,193,150,50,125,100,240,134,254,247,81,31,94,156,52,232,114,113,44,250,145,143,239,145,138,100,29,154,45,171,17,238,158,30,151,170,177,229,92,201,70,108,156,102,86,40,121,121,241,231,242,34,115,70,200,13,44,123,99,177,251,116,116,38,124,219,98,237,193,166,124,64,137,90,212,123,204,190,168,198,211,209,242,179,180,194,10,52,244,153,0,31,53,110,168,20,204,91,102,12,92,195,156,25,92,161,238,150,150,26,194,77,127,215,63,105,161,180,176,253,173,228,75,212,59,81,99,72,172,170,10,166,198,117,29,211,253,44,157,111,193,164,52,176,47,204,2,71,75,165,132,68,3,86,116,8,254,100,96,221,195,54,213,4,38,57,152,88,181,28,138,86,163,170,91,183,110,69,13,117,232,238,156,222,222,149,64,5,201,94,122,238,101,147,139,86,187,218,42,237,213,63,5,186,8,57,22,24,2,11,73,222,177,86,252,38,73,12,36,254,2,65,5,152,36,98,213,144,104,164,20,68,168,53,54,55,249,57,253,230,213,44,170,243,242,223,234,143,145,45,211,172,3,73,171,115,147,51,189,49,249,108,69,76,244,230,58,148,214,148,211,42,32,66,66,114,236,28,238,226,153,172,39,7,100,92,39,112,7,199,9,220,139,240,66,173,76,201,36,90,164,9,168,245,15,250,58,243,220,230,202,211,101,215,176,38,170,226,56,55,0,192,47,115,246,154,44,71,201,163,235,135,35,120,68,251,162,120,112,95,139,29,53,27,63,111,227,1,214,74,181,176,210,253,18,237,156,181,84,131,233,47,90,117,73,194,130,110,68,65,102,195,131,19,28,234,4,88,240,68,157,237,152,6,52,63,225,38,204,42,172,126,191,172,95,176,99,223,28,234,254,200,129,114,12,120,100,146,109,80,79,32,31,113,229,87,254,86,101,89,244,99,68,72,183,210,117,242,43,141,136,184,136,177,188,229,41,86,208,30,68,84,185,224,249,85,233,49,177,72,100,3,26,161,255,137,105,15,104,99,248,168,181,9,12,147,188,103,150,249,86,202,81,91,36,56,150,20,13,20,169,222,7,210,236,218,118,112,34,219,247,234,169,2,198,179,173,250,45,166,78,191,179,214,225,212,59,57,43,78,41,75,28,52,79,122,106,180,78,203,145,3,158,144,99,195,92,107,11,95,35,162,3,248,220,241,43,75,98,145,191,115,255,168,97,250,47,161,229,31,120,65,112,175,165,17,168,223,187,65,177,91,51,155,159,72,155,86,195,215,184,119,169,11,80,59,212,154,112,113,183,136,121,72,94,240,98,188,95,7,198,190,117,32,204,228,255,11,60,218,221,127,35,123,227,241,137,1,248,219,231,231,56,110,110,112,254,132,239,49,122,24,124,253,11,16,186,64,221,149,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("35e93330-0462-4abd-af9b-c14ef962a73d"));
		}

		#endregion

	}

	#endregion

}

