namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MLModelQueryBuilderSchema

	/// <exclude/>
	public class MLModelQueryBuilderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLModelQueryBuilderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLModelQueryBuilderSchema(MLModelQueryBuilderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("aa4cc4a7-e78e-455d-ad42-ad79b8a745ed");
			Name = "MLModelQueryBuilder";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("73704ec6-562c-4400-8a4a-17477a18625f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,90,89,111,219,70,16,126,86,128,254,135,45,211,7,10,16,232,62,251,80,224,51,16,106,37,105,228,180,15,134,17,208,212,72,218,134,92,42,187,75,59,108,226,255,222,217,131,228,242,146,228,92,64,131,188,196,228,114,119,102,246,155,123,20,22,38,32,214,97,4,228,228,213,116,150,46,100,112,154,178,5,93,102,60,148,52,101,193,244,242,151,39,31,127,121,50,200,4,101,75,50,203,133,132,228,160,241,142,71,226,24,34,181,95,4,207,129,1,167,81,107,207,37,101,239,171,197,101,156,222,134,241,254,254,105,154,36,200,229,50,93,46,113,185,250,94,9,163,190,119,173,115,232,94,13,206,78,122,62,92,132,145,76,57,5,209,254,254,34,163,193,12,248,29,141,96,154,206,33,14,206,66,25,34,16,146,227,153,106,251,57,147,84,230,179,104,5,73,72,142,234,212,245,55,36,30,184,155,186,143,34,92,89,194,118,34,96,182,34,25,36,244,148,195,18,33,38,19,38,129,47,80,101,251,100,50,189,212,242,254,153,1,207,79,50,26,207,129,235,189,123,123,123,228,80,100,73,18,242,124,108,223,103,160,148,68,110,205,54,178,72,57,73,194,104,69,25,144,24,66,206,148,152,239,145,144,146,161,32,177,231,208,88,103,183,49,141,8,45,216,247,112,31,160,185,224,191,165,184,83,144,171,116,46,246,201,43,125,222,124,108,202,167,23,52,9,65,132,145,83,201,39,87,64,150,244,14,24,137,52,16,130,132,108,78,22,52,70,17,4,49,200,82,134,176,133,177,22,61,39,167,79,9,124,88,115,16,66,89,111,201,202,189,135,89,89,135,60,76,8,67,243,63,242,120,154,74,131,247,155,201,220,27,191,198,87,2,90,11,68,24,101,167,11,45,139,230,17,28,238,233,195,221,180,244,150,243,82,4,111,124,85,156,107,200,182,145,138,185,110,69,70,120,99,107,53,235,80,174,196,230,195,6,31,101,194,222,248,66,63,147,57,190,108,62,116,23,114,26,222,198,128,156,142,231,115,132,52,101,8,106,185,170,213,177,84,190,141,113,193,26,74,7,18,28,100,198,153,24,235,40,16,74,152,91,109,226,206,226,147,218,107,77,81,43,220,60,251,207,51,58,39,53,69,140,136,144,188,228,85,97,49,34,147,115,150,37,72,31,5,59,156,94,26,96,170,239,99,210,66,111,164,152,14,110,115,9,215,55,164,130,7,93,144,101,113,60,34,103,84,71,47,52,144,67,195,115,68,210,219,127,80,172,177,131,128,217,60,60,216,96,193,207,65,10,109,40,73,184,94,43,209,111,65,222,3,154,175,107,196,142,17,24,123,86,30,137,126,153,59,230,78,217,58,67,82,135,2,128,68,28,22,71,158,129,201,35,123,37,51,75,45,140,105,40,140,203,254,104,182,238,0,213,111,106,197,194,212,66,62,47,117,57,34,247,43,224,64,222,65,78,104,15,152,53,20,71,168,237,56,3,181,89,171,161,210,115,121,178,105,108,222,222,216,65,222,149,169,195,166,218,150,138,6,211,92,180,247,232,116,8,109,198,95,205,43,54,154,50,6,1,99,202,152,3,49,196,34,195,52,147,104,148,159,17,94,181,164,142,113,108,54,135,130,223,75,205,238,194,137,101,87,29,210,44,118,141,111,102,191,65,229,88,41,219,208,179,100,92,43,232,55,53,204,118,116,65,183,4,53,4,238,170,118,133,10,113,223,110,209,40,140,136,141,71,125,23,46,227,95,75,244,66,113,79,129,205,77,150,213,239,15,166,76,168,47,22,105,248,52,14,5,38,225,199,20,12,147,100,29,67,130,193,65,151,130,42,46,136,47,44,33,10,103,10,99,145,90,135,234,43,59,131,174,234,194,134,191,235,51,88,132,89,44,79,40,155,43,87,145,249,26,210,133,223,117,98,56,188,169,74,151,72,97,208,5,1,217,223,177,152,65,41,133,196,82,134,211,59,204,110,230,219,218,188,160,13,225,183,66,103,70,153,90,91,32,94,225,77,233,7,76,32,94,250,214,235,214,93,201,225,130,2,22,65,61,44,56,132,243,148,197,57,121,35,128,163,44,204,84,221,228,109,86,123,63,232,60,51,193,42,155,188,141,241,159,35,130,143,211,144,133,75,224,88,176,75,85,126,3,247,189,233,165,215,99,90,117,0,120,166,42,233,93,74,186,137,41,206,232,191,152,63,67,194,224,30,51,155,144,33,195,234,209,166,25,39,182,118,41,92,69,104,165,181,93,99,77,29,8,227,227,106,77,105,199,46,214,252,219,90,70,7,107,191,129,113,157,242,144,28,141,155,176,35,174,45,61,108,194,178,170,140,187,116,61,49,193,162,102,166,37,250,237,111,143,41,160,116,26,25,60,190,138,34,173,10,202,146,218,165,126,26,18,213,71,14,6,184,80,196,145,35,114,138,214,41,193,150,128,13,225,91,9,174,34,117,80,82,122,239,194,131,244,148,173,152,70,47,87,150,125,216,129,226,216,87,118,232,24,242,49,95,34,16,76,250,158,145,203,67,224,244,195,208,50,114,153,152,11,7,24,229,13,98,194,111,231,213,106,143,137,230,194,175,16,179,36,77,226,168,137,175,63,60,212,141,192,38,12,3,147,117,38,183,96,54,149,91,9,90,13,227,162,77,109,88,105,173,191,116,130,192,196,58,230,73,142,132,252,38,225,10,113,157,35,145,172,161,31,188,64,183,187,254,253,38,184,74,103,90,243,190,179,181,84,179,2,220,138,221,144,198,98,53,80,51,4,68,209,183,117,152,37,142,98,161,111,40,111,55,159,21,51,127,56,12,142,133,239,97,245,90,0,125,193,211,196,119,228,209,27,52,165,58,218,70,158,173,56,127,70,71,242,24,7,160,11,226,55,8,4,19,241,2,123,139,151,252,60,89,203,28,111,104,183,22,130,119,233,191,38,153,189,39,222,74,57,182,182,118,61,38,64,6,170,60,210,236,220,133,46,79,105,158,26,59,170,44,91,160,234,249,217,51,173,214,254,155,23,199,213,125,127,45,207,169,68,47,177,224,17,127,64,238,55,195,117,117,241,114,255,117,115,207,77,219,164,221,203,91,77,150,166,215,188,122,80,61,59,161,193,223,26,108,212,45,108,217,55,75,51,30,65,181,153,28,217,214,176,16,94,37,217,224,111,172,135,252,223,60,103,219,199,6,147,7,213,104,80,22,165,156,43,178,164,106,154,85,98,84,224,166,12,2,114,186,130,232,29,105,50,213,153,90,49,107,196,210,93,141,100,171,75,220,165,104,254,88,201,50,129,101,94,226,84,159,32,252,157,122,155,168,187,177,177,41,163,166,39,215,53,122,142,181,64,54,23,112,175,132,114,2,86,163,196,87,177,167,232,192,105,209,118,183,40,186,182,70,146,184,121,1,68,212,210,8,254,210,93,33,70,189,118,154,180,74,80,130,119,145,48,50,147,79,159,58,24,4,26,205,94,215,31,96,197,130,163,150,76,207,57,203,59,186,118,104,19,80,112,204,114,133,154,170,72,240,143,33,171,88,247,177,116,120,152,70,175,152,246,152,214,61,140,85,201,152,147,21,82,177,125,209,61,149,43,103,58,97,218,36,50,145,122,207,138,46,177,205,38,104,55,56,93,149,249,70,233,109,252,228,176,142,195,8,159,172,172,37,210,24,20,236,1,237,150,45,64,205,205,203,1,106,3,136,11,202,133,244,65,1,1,21,12,117,102,117,183,49,39,139,189,189,136,57,86,246,176,107,77,247,229,211,78,51,235,251,57,242,220,56,6,250,127,13,62,109,187,241,101,243,207,175,87,190,23,3,208,221,171,248,98,10,234,20,154,205,18,124,67,143,178,173,194,239,25,220,14,156,134,163,179,11,168,103,123,203,45,208,127,221,122,180,55,181,212,207,109,24,202,89,98,61,105,177,47,227,21,89,110,75,49,250,115,164,252,115,164,188,113,164,108,163,199,55,152,44,215,178,243,87,152,44,127,175,240,224,134,175,226,215,153,70,195,94,15,3,29,125,247,118,127,127,248,62,115,114,59,125,208,51,43,27,209,126,228,121,121,61,23,238,48,54,55,84,182,207,205,107,198,220,30,158,91,219,220,56,222,171,106,203,250,54,39,229,100,183,179,142,241,70,99,186,161,74,83,225,163,189,227,76,66,79,41,60,252,239,16,47,25,188,6,236,250,112,128,209,24,100,29,11,1,9,122,217,183,27,101,9,115,43,211,116,248,229,37,70,100,129,51,121,51,56,233,252,185,161,112,170,82,66,119,186,181,225,23,140,138,65,199,68,124,216,233,155,70,68,215,241,118,248,157,3,119,254,7,86,197,57,245,203,34,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("aa4cc4a7-e78e-455d-ad42-ad79b8a745ed"));
		}

		#endregion

	}

	#endregion

}

