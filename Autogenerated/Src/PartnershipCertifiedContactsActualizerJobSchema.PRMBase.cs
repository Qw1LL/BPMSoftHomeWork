namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: PartnershipCertifiedContactsActualizerJobSchema

	/// <exclude/>
	public class PartnershipCertifiedContactsActualizerJobSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public PartnershipCertifiedContactsActualizerJobSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public PartnershipCertifiedContactsActualizerJobSchema(PartnershipCertifiedContactsActualizerJobSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0318491f-8399-4548-852e-806f5f152a57");
			Name = "PartnershipCertifiedContactsActualizerJob";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("de8ae9a8-a9a7-4323-ba50-b61a787183b3");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,77,143,211,48,16,61,7,137,255,48,10,151,34,85,237,125,63,42,65,183,139,138,40,130,93,193,21,185,206,180,53,36,118,176,157,237,46,104,255,59,99,59,205,71,147,148,194,165,109,102,236,55,51,111,222,76,42,89,134,38,103,28,225,237,167,213,189,218,216,201,92,201,141,216,22,154,89,161,36,188,124,241,251,229,139,168,48,66,110,225,254,201,88,204,46,143,158,233,66,154,34,119,167,205,228,29,74,212,130,119,206,220,48,203,58,198,15,66,254,172,141,219,84,173,89,122,113,49,87,89,166,228,228,131,218,110,201,92,251,63,226,222,82,8,151,226,123,163,100,237,248,92,48,109,127,29,63,79,150,89,158,78,86,204,242,29,106,83,123,235,50,93,152,62,187,198,126,107,155,153,129,51,55,111,7,28,11,105,133,21,104,6,220,183,140,91,165,135,253,247,84,70,82,164,168,187,254,21,26,195,28,87,117,77,116,230,149,198,173,107,224,60,101,198,92,192,39,226,132,90,99,118,34,159,163,182,98,35,48,161,122,44,133,53,111,184,45,88,42,126,161,126,175,214,254,242,116,58,133,43,83,100,25,211,79,179,242,249,14,115,141,6,165,53,144,83,143,85,34,56,75,193,50,243,3,54,74,67,94,7,0,126,136,0,188,12,1,172,140,225,185,155,28,66,76,27,49,242,98,157,10,14,220,229,123,126,186,112,1,75,250,90,60,34,47,136,64,210,107,68,130,165,207,138,128,91,129,105,226,24,208,226,129,89,12,206,227,2,189,193,73,14,53,8,105,44,147,28,93,150,221,52,163,60,224,0,29,178,148,175,70,150,40,153,62,193,146,174,195,183,148,62,174,29,210,138,73,70,104,52,17,54,224,142,226,178,97,241,107,215,195,104,48,141,101,25,31,212,6,236,14,233,0,34,112,141,155,235,216,139,232,201,13,83,77,66,60,157,149,164,185,54,116,120,62,81,65,31,26,124,195,30,107,144,84,244,10,101,18,88,109,83,76,157,49,86,23,78,193,142,104,223,200,19,60,47,37,77,130,7,38,93,128,196,125,69,121,79,201,103,43,161,226,97,168,234,160,175,179,241,70,175,193,173,190,232,249,116,237,43,180,59,117,182,190,0,181,166,46,109,180,202,224,187,90,15,164,234,45,52,80,44,3,73,251,249,58,198,71,142,185,235,104,60,91,28,126,214,164,185,190,147,238,252,10,184,154,250,123,173,62,63,40,145,184,224,11,23,123,84,3,84,168,101,165,145,83,239,196,159,186,85,58,99,118,20,215,135,247,180,70,145,154,163,213,94,66,82,104,183,129,206,156,121,82,149,171,53,30,55,34,94,54,168,237,37,235,176,108,7,100,186,70,170,26,9,208,205,253,176,212,59,76,22,6,53,65,203,240,194,138,103,213,176,195,32,115,85,38,125,137,140,190,180,0,161,141,79,196,134,65,143,30,152,134,122,178,156,224,240,209,210,166,112,234,15,184,7,76,70,83,212,56,51,58,66,188,172,224,18,58,180,120,180,218,191,57,74,168,83,234,190,105,158,239,135,237,29,254,86,150,71,213,183,81,198,237,156,198,221,138,255,222,247,59,180,133,150,144,177,60,119,18,115,218,14,40,164,171,180,200,232,63,198,137,78,107,127,217,204,110,132,207,135,124,176,23,118,119,10,237,106,122,184,212,108,124,13,112,69,155,141,174,142,33,124,207,0,104,163,207,195,229,85,128,61,108,10,223,21,222,114,149,220,13,195,85,119,163,223,16,47,19,154,17,247,9,207,227,202,56,87,133,180,222,46,237,87,150,22,72,94,239,124,14,61,11,233,31,197,189,252,167,205,245,183,133,125,87,72,211,63,134,142,208,174,230,56,81,88,201,238,127,39,211,13,150,219,37,165,161,181,217,58,151,253,111,180,148,69,60,115,255,10,234,231,246,70,12,239,0,63,214,225,47,3,158,30,224,49,44,123,122,167,214,223,201,61,107,68,57,116,209,146,226,202,126,158,94,27,189,227,215,63,127,147,234,231,168,84,72,131,113,250,25,82,32,123,143,48,75,224,32,24,106,11,223,65,235,5,80,169,175,122,61,144,173,76,198,239,250,198,253,126,57,5,107,219,248,252,7,20,168,5,24,86,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0318491f-8399-4548-852e-806f5f152a57"));
		}

		#endregion

	}

	#endregion

}

