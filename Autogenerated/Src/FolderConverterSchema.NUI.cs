namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: FolderConverterSchema

	/// <exclude/>
	public class FolderConverterSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FolderConverterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FolderConverterSchema(FolderConverterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f1dc468d-fabe-4afc-98b1-a81c6f12e8c0");
			Name = "FolderConverter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("be1f674b-cdb4-46e4-8c46-23cae20b9205");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,77,111,227,54,16,61,187,64,255,3,161,237,65,70,13,57,232,177,137,3,172,147,56,53,208,4,105,189,217,235,130,145,198,142,176,18,233,146,148,93,33,200,127,239,144,67,89,18,173,56,233,94,44,115,56,223,124,111,72,193,75,208,91,158,2,155,63,220,173,228,218,36,87,82,172,243,77,165,184,201,165,96,47,63,255,52,170,116,46,54,108,85,107,3,229,249,97,221,234,43,24,150,38,215,243,55,54,110,132,201,77,14,26,183,81,225,147,130,141,141,117,85,112,173,127,103,11,89,100,160,48,141,29,40,3,202,169,76,167,83,118,161,171,178,228,170,190,244,107,167,206,214,82,177,189,84,223,217,62,55,207,108,163,100,181,213,141,193,180,99,177,173,158,138,60,101,169,51,10,66,216,42,81,229,144,200,34,135,34,195,76,30,84,190,227,6,104,115,75,11,166,128,103,82,20,53,123,212,206,133,128,212,117,234,91,213,91,83,105,163,79,32,50,242,218,15,241,160,228,22,99,99,15,48,140,75,205,197,160,36,115,97,152,79,14,91,247,37,47,65,86,134,189,176,13,152,115,246,122,218,49,218,105,163,170,212,72,213,113,221,113,30,212,30,143,209,241,235,73,141,160,208,126,157,104,110,77,71,65,249,108,22,232,89,36,140,70,199,85,205,250,200,232,161,47,65,204,173,192,88,117,157,220,130,249,202,139,10,226,32,210,132,69,222,43,126,12,79,205,173,197,128,119,31,77,216,111,103,103,103,99,23,253,157,206,221,129,121,150,116,236,210,160,111,200,104,63,196,30,129,15,97,128,96,0,253,143,67,32,88,64,215,7,237,46,240,72,178,229,138,151,76,32,219,102,17,41,175,210,103,40,249,61,74,162,75,199,135,154,105,39,114,90,23,83,103,49,236,96,237,14,104,153,69,151,43,224,42,125,102,36,96,121,118,210,76,192,126,113,176,188,135,253,9,51,5,166,82,66,95,94,76,155,127,68,1,223,24,182,203,149,169,120,193,86,80,160,192,119,131,170,184,230,134,147,56,70,32,90,234,135,245,78,216,109,149,103,62,250,50,243,203,78,118,13,166,118,92,245,140,239,184,224,27,76,120,22,146,141,6,74,95,235,124,208,5,218,14,120,180,224,90,34,111,184,72,97,94,219,28,227,48,233,113,235,79,203,74,165,64,91,143,203,44,112,153,160,168,213,165,34,187,186,31,72,125,32,157,95,162,151,48,163,87,106,87,52,238,71,180,144,156,217,110,178,174,231,191,42,80,117,175,40,95,16,170,39,56,231,44,90,157,206,149,44,170,82,36,75,253,185,216,115,75,63,119,192,51,134,51,5,90,139,207,89,70,138,113,231,216,38,71,181,89,44,56,210,126,169,183,208,20,183,200,69,214,219,152,215,246,55,54,248,35,215,177,5,195,120,220,105,55,198,91,228,133,29,211,51,156,110,101,41,197,163,201,11,119,127,216,70,81,244,155,70,73,31,207,135,22,104,193,105,76,194,163,156,184,50,59,157,241,62,109,189,241,33,15,191,79,204,176,233,217,52,168,81,212,230,32,131,222,244,57,53,77,114,129,118,134,105,234,185,157,43,60,115,196,240,0,243,249,127,112,204,144,155,118,184,184,229,201,1,241,67,131,169,25,16,203,110,242,239,205,13,82,246,224,34,180,31,214,11,169,40,44,157,108,236,181,200,49,30,217,240,80,233,206,140,92,144,105,187,27,112,212,137,126,101,209,210,43,70,231,111,216,254,48,95,143,83,232,32,90,193,154,188,16,135,48,72,95,61,33,185,118,84,57,61,143,60,8,45,70,186,61,60,130,160,83,30,37,75,97,228,80,110,126,27,47,219,56,72,206,231,226,200,26,170,70,135,235,164,145,46,148,44,155,225,239,62,255,243,230,237,60,87,6,137,130,4,44,16,1,248,58,72,233,173,199,158,106,150,213,8,204,131,96,237,56,122,130,35,13,50,255,6,93,21,6,15,67,111,241,205,4,1,100,233,41,180,147,120,51,249,231,69,28,94,83,254,226,66,62,224,225,180,194,15,0,148,122,99,155,133,115,203,142,181,225,251,243,248,226,12,99,117,47,77,2,68,207,117,178,218,66,154,175,235,123,249,167,76,191,255,129,239,74,29,119,39,107,135,102,61,70,206,222,227,100,47,202,228,184,86,138,65,47,255,248,122,126,243,47,164,21,190,72,89,246,116,248,59,196,44,93,41,184,158,183,162,120,220,116,109,212,90,34,34,241,68,69,214,190,32,143,94,149,20,126,244,86,125,9,185,130,184,117,234,51,70,160,14,162,213,203,250,0,70,217,127,174,149,31,105,63,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f1dc468d-fabe-4afc-98b1-a81c6f12e8c0"));
		}

		#endregion

	}

	#endregion

}

