namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ActivityConstsSchema

	/// <exclude/>
	public class ActivityConstsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ActivityConstsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ActivityConstsSchema(ActivityConstsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("a9102873-6482-491c-9f75-f0552ec9bba6");
			Name = "ActivityConsts";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("66e9e705-64b4-4dda-925e-d1e05a389eb6");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,152,93,111,163,56,20,134,175,91,169,255,1,229,170,35,173,83,27,155,47,205,180,18,24,24,69,218,153,169,166,157,189,167,196,237,178,11,56,2,51,163,104,213,255,190,7,8,9,73,154,164,33,217,189,73,11,156,243,250,57,246,241,241,71,85,38,249,139,246,48,47,149,200,62,94,93,86,189,199,49,151,105,42,98,149,200,188,28,127,22,185,40,146,120,105,226,221,127,121,144,207,106,28,100,81,146,250,18,126,115,248,118,117,153,71,153,40,103,81,44,150,22,92,230,207,201,75,85,68,181,208,213,229,63,87,151,23,55,55,55,218,167,178,202,178,168,152,223,45,158,193,76,129,72,169,197,208,156,138,114,85,106,207,178,208,92,104,255,103,162,230,154,124,250,11,88,198,157,247,77,207,125,86,61,165,73,172,129,151,130,63,113,26,149,229,210,15,100,75,85,130,81,221,238,86,195,139,23,66,104,113,33,158,111,71,157,215,125,84,128,84,50,3,140,239,50,21,163,155,59,237,81,214,109,111,55,190,209,122,33,162,169,204,211,185,246,185,74,166,218,14,189,71,169,221,54,6,99,248,80,138,235,17,117,77,219,161,60,64,174,25,16,228,135,132,32,199,34,30,194,152,248,38,14,28,106,115,115,244,161,233,224,147,130,224,252,124,65,240,120,51,8,254,255,4,225,157,51,10,47,222,12,195,115,137,107,185,190,255,95,135,17,22,50,59,95,28,181,218,70,32,166,107,82,7,115,54,60,144,31,147,169,22,117,19,176,140,255,20,89,116,2,113,144,43,248,125,104,100,106,229,91,45,23,191,26,147,235,17,103,204,241,109,170,35,151,113,142,152,135,9,242,28,223,64,182,75,116,206,116,215,9,109,103,63,235,178,80,212,12,85,169,33,168,40,217,44,21,74,76,143,71,94,186,62,52,98,45,237,36,87,226,165,45,99,109,85,25,175,138,204,154,249,100,122,36,104,148,199,34,29,196,185,240,236,99,174,58,85,199,132,135,158,107,35,195,14,204,65,9,176,205,250,21,212,219,135,55,157,246,193,130,235,219,156,212,102,62,243,108,118,78,206,73,126,95,200,151,66,148,199,115,174,92,183,64,157,179,129,170,249,76,0,102,179,124,30,63,238,141,219,35,72,236,202,204,165,193,59,115,113,129,243,24,149,127,31,79,83,123,237,131,249,34,132,130,61,195,241,56,60,74,7,116,78,237,181,194,89,141,94,64,108,74,252,128,35,30,114,220,142,158,135,113,120,194,232,253,145,148,137,58,30,176,113,123,147,144,158,74,216,140,251,178,251,228,84,128,254,104,146,199,50,131,1,24,29,143,218,185,246,242,105,141,216,10,29,159,132,182,137,66,106,122,136,48,130,17,54,109,142,116,204,67,138,61,234,80,139,54,196,23,23,199,49,127,171,212,139,28,198,220,185,238,102,54,125,26,58,236,32,243,110,98,212,32,151,34,159,214,123,225,222,138,211,194,63,192,7,49,29,128,222,58,54,224,221,82,178,123,122,131,177,122,207,130,115,136,246,171,84,117,187,3,112,23,158,155,188,253,21,136,195,6,196,196,200,36,216,66,1,134,132,118,77,102,34,98,194,98,207,93,15,59,54,30,210,213,253,68,153,193,201,100,8,124,235,184,155,221,98,134,99,48,195,69,142,174,59,136,5,129,133,60,3,246,37,152,122,182,107,224,64,135,76,57,145,125,181,210,12,154,154,157,243,238,24,76,128,117,77,55,28,222,255,203,146,23,71,144,132,178,152,215,123,0,56,227,213,248,109,124,3,208,27,224,229,230,105,33,188,47,213,87,54,67,89,221,217,12,106,130,202,96,206,12,0,238,121,191,137,189,234,113,166,115,139,113,230,28,220,34,236,41,136,251,226,128,163,227,84,142,134,173,209,59,144,67,131,192,28,101,244,12,187,154,217,234,80,162,37,57,188,18,128,81,206,96,36,219,218,14,55,1,69,38,166,3,14,17,253,227,206,66,113,41,183,57,113,33,171,185,237,232,136,178,128,34,230,82,56,145,134,216,70,156,184,132,58,161,73,117,29,159,37,30,95,196,105,146,159,43,156,78,109,243,100,196,117,195,180,12,27,49,108,16,248,209,97,116,56,252,167,19,51,160,150,73,13,24,187,179,68,51,201,33,179,170,39,117,158,104,38,185,95,139,109,4,3,101,211,118,44,29,54,208,186,238,35,198,204,0,121,129,67,16,209,13,102,123,48,106,148,249,135,130,137,101,5,252,177,76,171,44,215,234,235,166,227,128,75,85,212,197,56,106,117,120,35,211,77,174,230,14,42,86,163,253,211,115,97,117,50,66,220,234,172,35,44,226,59,128,240,13,234,81,161,170,188,41,18,39,98,200,149,214,58,74,175,145,3,56,190,140,171,186,54,158,204,50,93,8,173,131,116,242,163,247,150,205,147,115,163,17,18,155,35,211,202,143,62,106,123,242,179,177,110,1,234,171,204,238,2,21,230,91,239,144,58,224,38,69,251,61,41,213,167,22,240,78,75,225,97,141,174,158,98,125,139,235,15,90,115,225,121,177,149,231,191,53,175,183,114,175,125,253,102,46,180,159,182,135,166,125,191,221,89,245,235,215,119,21,36,168,62,85,170,180,153,132,243,80,242,19,250,173,91,239,224,96,52,164,12,45,116,58,125,168,69,32,191,99,213,35,190,30,48,59,212,17,55,66,40,69,196,242,145,99,64,93,165,56,176,72,72,13,63,164,203,82,244,122,117,249,250,47,164,60,163,128,41,23,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("a9102873-6482-491c-9f75-f0552ec9bba6"));
		}

		#endregion

	}

	#endregion

}

