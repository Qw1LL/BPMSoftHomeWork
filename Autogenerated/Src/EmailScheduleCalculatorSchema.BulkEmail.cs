namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EmailScheduleCalculatorSchema

	/// <exclude/>
	public class EmailScheduleCalculatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EmailScheduleCalculatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EmailScheduleCalculatorSchema(EmailScheduleCalculatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e54900c1-b29b-45b4-9d54-84bdf396c7ca");
			Name = "EmailScheduleCalculator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("7b5cce97-2e1e-4b17-90ca-f9813022e3eb");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,86,109,111,219,54,16,254,236,2,253,15,55,12,43,36,212,85,182,79,5,146,58,65,234,164,67,176,164,201,230,22,5,54,12,3,35,81,54,49,153,242,72,42,141,215,230,191,239,78,34,37,145,146,147,52,51,96,91,34,239,158,187,123,120,47,148,108,205,245,134,165,28,222,94,93,44,202,220,36,243,82,230,98,89,41,102,68,41,159,63,251,242,252,25,224,167,210,66,46,97,177,213,134,175,15,134,75,201,185,144,255,224,250,164,89,252,181,98,202,252,235,201,117,240,138,135,0,39,108,123,153,127,226,252,111,152,57,188,118,9,101,27,233,239,21,95,162,71,48,47,152,214,251,112,186,102,162,88,164,43,158,85,5,159,179,34,173,10,102,74,69,210,147,189,189,61,120,163,171,245,154,169,237,161,125,191,82,229,141,200,184,134,53,55,171,50,3,83,66,106,181,56,228,66,105,3,218,162,101,80,176,74,166,43,200,104,143,73,20,22,107,14,101,14,156,140,38,206,194,94,207,196,166,186,46,68,10,41,57,183,219,55,138,3,9,109,30,70,130,122,207,49,248,172,47,176,81,226,134,188,104,128,231,149,54,229,122,174,74,121,122,187,81,92,107,210,221,7,127,161,83,246,76,245,205,189,19,188,200,208,222,85,131,30,138,57,163,253,163,249,227,79,248,43,99,189,5,125,48,64,231,50,107,12,236,178,139,185,165,141,170,82,36,131,172,215,156,13,140,55,76,142,133,26,161,50,165,76,234,173,198,190,62,125,246,225,154,105,30,5,114,240,5,238,190,221,103,76,156,13,87,70,240,135,60,14,216,194,103,237,178,250,48,228,14,142,142,32,10,215,102,240,51,55,157,90,20,199,79,160,248,162,78,239,111,62,219,192,50,165,78,72,170,226,166,82,18,139,194,137,37,11,94,240,212,68,183,20,96,212,7,140,113,237,21,252,20,199,201,135,242,88,41,182,141,40,148,62,216,35,15,194,19,27,23,121,76,224,46,232,19,252,249,64,181,140,225,190,163,154,167,133,203,220,149,106,212,238,99,202,84,133,113,175,211,144,173,142,131,1,83,55,76,209,118,219,207,124,36,175,175,133,106,117,23,170,5,156,67,168,223,163,251,66,200,1,143,66,154,90,100,94,86,210,80,3,158,76,68,14,209,8,212,97,231,86,237,52,74,78,90,77,52,52,162,242,170,83,105,160,239,128,23,154,59,109,242,89,242,91,82,242,29,173,169,189,84,39,60,103,24,123,147,31,183,158,3,13,220,164,211,110,159,234,9,208,178,148,44,42,137,90,112,52,224,1,107,220,234,28,12,99,137,94,195,75,136,28,102,47,140,56,134,31,224,181,13,166,254,181,89,29,28,211,113,150,81,57,68,45,104,159,247,187,135,82,139,254,63,9,179,162,255,223,75,137,25,150,107,110,92,247,50,118,245,44,155,118,90,149,73,221,243,104,74,181,74,50,47,49,64,135,252,209,136,66,80,111,74,172,89,39,19,117,86,194,148,169,225,152,90,114,115,94,226,8,36,173,247,229,103,4,237,249,64,4,116,16,136,71,248,31,77,106,35,233,123,27,194,91,66,91,164,197,134,167,34,223,254,34,36,34,14,204,118,20,144,64,82,111,61,200,245,117,89,22,112,214,101,201,153,252,141,201,37,143,118,86,233,20,238,227,190,32,163,247,179,95,251,77,34,77,147,222,113,192,125,116,31,116,228,8,210,74,41,46,109,250,119,6,118,118,136,97,251,197,105,106,152,144,58,234,160,6,212,77,38,244,13,136,35,151,28,103,244,188,216,48,137,12,225,157,109,10,237,59,54,219,222,219,13,43,170,134,27,219,97,106,113,120,67,98,109,59,177,46,218,173,89,163,4,47,94,216,135,90,120,164,246,2,249,175,95,3,249,255,53,12,6,19,219,78,235,193,40,56,175,239,124,180,220,141,1,73,9,234,221,230,22,220,24,76,36,13,218,62,184,224,123,71,218,230,247,189,201,226,0,146,182,108,145,111,52,104,123,35,225,249,77,233,201,104,97,230,93,211,197,27,239,68,245,225,214,220,207,218,112,146,183,225,102,141,120,153,55,141,246,62,168,83,188,40,239,0,194,45,15,198,230,208,119,126,42,14,252,154,134,248,211,176,79,183,160,113,47,9,3,210,6,19,24,11,225,229,144,132,126,98,218,33,222,222,223,112,212,124,222,113,35,117,225,250,235,49,149,177,85,31,161,77,232,227,162,160,189,241,65,127,206,229,210,172,104,22,254,72,213,48,186,99,135,88,93,209,98,208,10,17,111,104,3,161,70,154,166,215,37,199,178,200,231,47,238,142,111,196,44,214,122,192,255,225,108,80,22,97,191,240,53,252,6,241,228,179,28,105,157,59,46,125,225,93,175,119,185,123,124,243,105,183,253,45,92,134,255,0,68,231,78,16,99,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e54900c1-b29b-45b4-9d54-84bdf396c7ca"));
		}

		#endregion

	}

	#endregion

}

