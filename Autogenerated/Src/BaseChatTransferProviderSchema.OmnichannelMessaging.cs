namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseChatTransferProviderSchema

	/// <exclude/>
	public class BaseChatTransferProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseChatTransferProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseChatTransferProviderSchema(BaseChatTransferProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8dae1b07-57f7-43d8-bb4a-45b32e70e944");
			Name = "BaseChatTransferProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("08afff10-3d0c-4f3d-b6a0-28a42952a988");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,87,91,111,219,54,20,126,118,129,254,7,66,125,136,12,164,242,250,52,44,137,83,44,151,181,6,230,38,107,28,12,216,75,192,72,199,14,1,137,244,72,42,169,55,228,191,239,240,38,139,180,149,180,192,2,199,33,207,141,223,185,144,231,132,211,6,212,154,150,64,206,174,231,55,98,169,139,115,193,151,108,213,74,170,153,224,111,223,252,251,246,205,168,85,140,175,200,85,195,89,249,64,57,135,122,14,74,209,21,18,143,59,238,205,70,105,104,182,251,189,230,138,158,141,98,143,145,173,146,132,45,213,9,194,98,179,6,50,237,195,184,150,226,145,85,32,85,113,33,26,202,120,113,201,53,211,12,84,209,83,217,218,89,213,226,158,214,71,71,231,162,105,16,203,239,98,53,124,122,113,113,134,12,100,189,147,176,66,228,228,188,166,74,29,145,51,170,224,252,129,234,133,164,92,45,65,6,8,86,118,50,153,144,19,213,54,13,149,155,83,191,255,10,107,9,10,184,86,164,180,231,146,101,203,75,19,12,90,51,189,33,98,73,180,183,37,13,8,116,77,23,193,214,164,103,108,221,222,215,172,36,244,94,161,124,169,73,105,0,189,128,103,132,153,195,239,206,129,223,24,212,21,122,128,18,26,74,13,149,99,175,195,150,72,160,149,224,245,134,220,42,144,152,54,142,100,163,24,111,143,7,148,186,108,250,208,135,172,13,201,127,106,89,69,12,242,89,229,2,61,122,7,188,114,88,99,224,8,120,13,210,164,213,128,103,143,84,67,128,110,55,100,134,153,36,119,181,88,37,103,89,186,249,157,158,90,54,249,248,145,228,118,49,53,228,57,229,136,79,22,159,64,155,82,0,153,103,189,218,234,7,53,27,143,143,227,35,13,23,51,43,20,211,66,110,200,93,25,237,19,28,137,112,178,53,224,98,117,135,51,161,77,9,135,167,68,55,143,83,179,23,229,31,45,180,112,193,176,104,216,125,139,74,238,176,148,186,7,241,142,226,94,98,64,191,195,232,124,216,85,233,60,73,89,223,227,207,21,214,2,69,217,47,66,179,37,3,244,135,251,213,30,31,118,132,187,133,193,29,20,29,214,110,183,197,151,170,191,134,207,151,188,47,44,114,215,184,69,2,44,145,10,127,13,34,175,224,0,133,141,195,19,107,189,134,36,41,228,240,42,144,59,177,159,145,64,28,82,31,162,27,236,3,150,157,47,67,76,231,219,128,217,239,46,239,244,38,38,196,161,226,78,238,100,74,139,74,123,223,237,220,81,136,11,251,245,123,58,244,226,161,168,150,109,137,170,230,201,179,239,190,19,72,27,140,37,204,56,246,60,108,38,255,128,178,0,24,87,154,114,236,232,216,90,78,20,0,41,37,44,167,217,80,167,200,38,157,165,168,223,56,202,154,74,218,16,142,83,194,52,107,35,47,178,83,227,21,54,181,64,40,78,38,86,122,191,114,227,234,55,59,13,253,1,167,133,117,109,210,168,5,185,7,98,219,155,122,128,42,50,227,155,222,16,246,36,176,36,70,120,184,219,148,60,138,49,49,99,205,104,148,168,79,19,3,182,112,70,65,119,26,180,29,217,245,46,164,154,78,86,92,83,169,32,247,162,133,227,153,52,143,70,207,47,231,122,14,250,65,84,67,173,173,22,56,18,96,131,58,111,165,196,25,98,193,26,200,3,120,9,186,149,156,228,70,102,156,95,160,184,97,23,183,186,252,34,158,200,123,91,11,129,154,127,248,229,231,159,14,201,7,251,193,133,255,140,199,197,66,104,90,207,89,141,193,7,204,101,165,126,16,244,192,48,97,34,16,2,103,240,227,214,77,136,158,152,191,150,26,239,93,184,81,65,45,176,71,11,248,166,183,41,9,3,223,161,103,186,81,49,97,26,106,16,192,152,196,179,100,255,225,49,35,129,145,152,113,83,32,102,245,151,224,144,7,115,134,128,87,172,89,155,232,221,96,243,226,171,60,219,224,207,193,251,131,249,28,191,170,106,241,249,243,193,209,65,211,224,151,82,217,216,159,250,107,139,97,235,55,24,115,209,113,150,219,122,53,178,21,21,151,101,225,147,111,168,197,12,35,109,228,158,189,201,11,38,187,226,253,145,201,184,211,43,174,90,141,131,41,250,96,13,62,247,211,159,246,172,94,182,48,66,113,62,77,19,199,90,245,49,50,217,9,78,61,82,73,84,95,54,234,104,61,155,62,6,59,247,205,24,243,238,118,151,206,45,182,241,15,33,142,255,87,232,237,10,7,183,151,127,155,66,115,127,147,235,229,69,190,66,201,214,12,169,91,59,69,71,243,50,55,120,63,108,23,11,2,142,16,99,249,31,83,180,141,130,177,96,3,209,123,114,28,45,64,19,173,196,30,208,131,102,9,189,36,135,43,22,229,102,127,250,31,5,14,235,55,238,26,95,75,120,100,240,148,219,1,222,180,65,60,146,196,217,15,153,55,89,190,93,87,248,6,37,15,245,33,177,163,182,49,151,141,29,94,12,157,206,179,222,1,217,33,246,193,186,109,184,121,91,177,133,104,124,238,131,253,160,243,231,3,72,200,179,89,149,141,139,153,186,252,187,165,117,190,163,228,48,118,58,151,223,160,108,17,209,75,175,179,163,198,68,164,253,7,41,189,216,158,45,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8dae1b07-57f7-43d8-bb4a-45b32e70e944"));
		}

		#endregion

	}

	#endregion

}

