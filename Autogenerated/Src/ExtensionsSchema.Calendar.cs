namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ExtensionsSchema

	/// <exclude/>
	public class ExtensionsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ExtensionsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ExtensionsSchema(ExtensionsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("a70d10ae-7bfd-454b-886f-2ca9d01b2a41");
			Name = "Extensions";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("761f835c-6644-4753-9a3e-2c2ccab7b4d0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,88,81,111,219,54,16,126,86,129,254,135,139,11,20,242,156,200,219,211,128,214,54,208,56,217,96,32,105,130,217,67,30,134,62,48,18,229,40,145,40,87,164,154,184,69,254,251,238,72,145,162,228,56,205,134,237,165,121,72,196,211,221,119,223,29,143,199,83,4,43,184,220,176,152,195,241,229,249,178,76,85,52,47,69,154,173,235,138,169,172,20,209,156,229,92,36,172,146,209,233,131,226,66,162,76,190,126,245,237,245,171,160,150,153,88,195,114,43,21,47,222,247,214,8,146,231,60,38,4,25,253,206,5,175,178,120,71,231,44,19,159,81,136,226,55,21,95,163,42,204,115,38,37,188,3,223,21,190,30,143,199,48,145,117,81,176,106,59,107,214,203,13,143,179,52,139,129,91,93,40,184,186,41,19,9,105,89,129,218,110,184,132,76,64,220,240,7,140,241,142,173,121,100,241,198,30,224,166,190,206,17,74,42,140,57,134,88,179,240,57,4,24,47,254,118,60,207,27,79,239,224,82,91,154,183,125,154,90,160,131,103,138,183,68,18,182,149,112,189,109,5,247,156,223,1,38,100,147,163,30,241,219,37,104,36,27,86,177,2,4,238,216,116,96,173,7,179,213,77,11,30,77,198,90,233,105,155,4,241,87,89,193,141,13,173,64,225,242,121,35,98,39,231,101,45,212,96,246,177,46,174,121,5,101,170,57,75,80,37,172,155,248,118,65,42,174,234,74,72,39,152,251,9,240,194,236,235,77,248,67,204,55,84,58,16,87,60,157,14,78,237,122,48,251,83,176,235,28,89,151,144,102,34,33,36,75,134,246,186,147,200,201,216,225,104,232,238,30,47,78,69,93,32,113,68,155,44,44,179,19,182,157,185,13,187,162,8,67,117,147,73,112,10,61,85,155,245,67,56,105,50,171,147,74,15,135,228,50,200,132,130,54,127,67,248,230,164,148,131,139,52,93,136,75,60,26,101,2,83,248,153,206,71,16,124,177,21,50,5,193,239,225,44,147,170,235,53,28,190,247,81,52,50,42,187,10,32,222,43,91,76,250,173,209,167,83,17,18,122,166,157,225,159,137,199,13,70,112,206,212,77,52,231,89,142,71,52,12,19,60,94,5,203,135,125,162,99,248,117,136,198,163,145,141,166,5,190,53,192,183,8,108,137,225,202,211,12,252,64,72,199,48,11,2,151,62,27,5,9,16,205,102,51,250,144,36,104,34,195,91,228,233,130,254,9,178,38,23,187,200,72,217,79,202,137,150,208,73,214,63,209,111,89,37,213,69,117,194,83,86,231,42,196,252,207,32,113,189,206,210,137,12,141,22,135,214,90,232,252,102,41,132,141,187,3,220,177,58,207,219,104,3,42,207,41,132,62,183,161,81,142,230,121,41,184,221,74,163,234,167,121,52,178,111,30,129,231,146,183,152,77,125,92,164,180,207,251,246,221,42,239,11,244,164,5,216,9,174,121,211,82,115,33,90,131,164,1,235,196,229,133,29,168,155,170,188,215,229,235,142,110,56,248,7,71,119,208,58,127,252,110,46,137,85,63,157,214,10,21,118,54,213,203,25,137,172,137,110,74,88,102,20,170,197,49,48,230,183,233,82,250,104,234,183,143,207,246,124,37,129,197,170,102,121,246,149,39,253,134,247,159,247,245,152,142,195,138,87,69,99,164,79,135,194,245,255,112,29,124,97,121,221,88,232,199,253,125,255,67,155,128,238,221,23,187,217,32,234,118,255,151,183,104,165,187,193,11,155,243,49,147,124,110,83,100,178,67,79,166,69,239,118,110,44,71,101,98,179,53,237,76,162,63,240,254,151,202,140,70,189,30,213,118,101,175,171,98,173,57,91,100,125,229,222,132,79,158,219,67,227,23,155,220,47,77,13,238,79,66,115,73,56,156,238,189,213,70,227,221,63,6,178,101,228,118,72,103,19,239,90,13,122,232,66,106,12,126,192,210,199,18,171,148,49,209,143,207,107,35,15,163,139,15,63,76,189,235,184,189,201,5,141,109,189,55,27,238,149,150,241,223,66,89,235,16,21,224,200,172,134,116,121,200,182,118,191,83,38,192,10,189,89,120,9,136,82,28,221,151,213,29,125,27,20,153,168,21,142,238,56,253,41,221,149,244,53,17,99,72,80,121,135,239,165,53,69,27,48,152,117,71,207,103,247,218,119,66,185,33,227,158,111,125,62,246,215,193,199,127,17,205,115,117,65,45,5,243,133,176,87,6,245,220,128,54,229,240,108,131,240,246,183,31,152,221,236,206,228,212,222,140,116,219,234,108,245,39,8,122,163,193,187,83,68,31,126,103,146,160,49,194,135,111,198,37,120,251,22,14,60,121,180,144,109,164,110,168,88,232,57,184,145,46,4,30,112,108,148,51,74,141,126,242,27,33,97,244,20,77,219,10,130,158,24,154,93,114,235,41,216,169,206,26,246,163,183,47,40,5,246,153,142,199,66,82,204,199,92,97,183,21,225,78,170,237,64,65,57,56,232,121,141,78,63,99,219,192,142,221,184,232,145,28,122,147,21,85,2,206,78,252,1,153,182,20,23,36,185,72,195,30,174,27,134,146,18,203,137,219,82,92,226,105,105,191,54,154,233,93,3,183,159,5,218,71,119,200,15,2,223,126,228,249,255,43,251,20,157,113,177,198,143,135,85,169,88,222,84,103,127,20,163,26,92,110,152,112,134,70,143,166,114,236,5,79,212,207,10,13,46,82,170,148,35,223,25,81,251,20,45,169,225,88,23,123,152,249,14,158,164,214,180,57,138,126,232,167,167,51,253,117,181,252,34,163,251,220,164,156,168,218,225,179,59,45,182,101,211,233,137,111,16,196,252,43,65,175,141,180,43,124,252,27,112,170,19,184,153,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("a70d10ae-7bfd-454b-886f-2ca9d01b2a41"));
		}

		#endregion

	}

	#endregion

}

