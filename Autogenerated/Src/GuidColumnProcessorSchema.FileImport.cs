namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: GuidColumnProcessorSchema

	/// <exclude/>
	public class GuidColumnProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public GuidColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public GuidColumnProcessorSchema(GuidColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1b4d6336-7126-4448-a08f-ebdcc4304edb");
			Name = "GuidColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("52abf94a-4a51-4e9b-afae-86480a04ff1e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,84,193,110,219,48,12,61,187,64,255,129,200,46,9,16,216,247,54,73,177,166,232,144,67,139,96,77,119,25,118,80,108,58,17,96,75,30,37,21,8,138,252,251,40,217,110,98,215,237,101,232,69,150,232,199,71,242,145,146,18,37,154,74,164,8,183,235,135,39,157,219,120,169,85,46,119,142,132,149,90,197,247,178,192,85,89,105,178,151,23,175,151,23,145,51,82,237,224,233,96,44,150,215,111,231,147,47,225,176,53,190,23,169,213,36,209,240,127,70,124,35,220,49,63,44,11,97,204,21,252,112,50,91,234,194,149,106,77,58,69,99,52,5,88,146,36,48,147,106,143,36,109,166,83,72,9,243,249,232,81,171,53,146,145,156,132,178,61,183,215,205,79,52,174,176,199,81,178,104,9,140,43,75,65,135,246,252,93,129,84,198,10,197,85,235,28,236,94,26,72,125,30,192,27,98,57,180,50,114,91,32,228,154,160,170,137,125,61,62,73,72,67,56,120,17,133,67,19,183,17,146,179,16,191,239,48,23,156,193,173,84,25,187,141,237,161,66,157,143,87,189,68,39,83,120,100,241,97,14,138,63,12,24,208,96,50,249,19,100,168,220,182,144,105,147,228,0,14,174,224,51,77,102,222,229,102,49,133,126,14,76,205,77,229,245,212,15,174,221,146,243,189,226,182,172,67,220,26,241,223,173,120,215,139,96,88,18,10,139,166,219,17,86,140,145,136,77,144,129,138,153,210,139,255,94,253,218,82,9,18,101,16,118,62,114,6,137,203,82,152,250,137,30,45,158,249,204,109,108,13,241,44,9,232,224,220,8,61,16,112,252,220,161,129,46,235,132,59,176,21,6,199,125,179,191,51,209,177,209,24,85,86,203,220,213,156,99,84,72,150,239,6,43,78,218,178,47,102,95,42,250,157,176,162,30,225,90,107,167,228,95,222,203,140,249,100,46,145,62,208,182,106,179,3,253,130,68,140,175,47,133,231,251,229,233,54,204,246,188,202,96,190,232,218,98,15,235,163,174,63,151,229,1,237,94,103,95,161,201,7,101,220,248,233,103,131,13,73,142,235,103,175,166,10,150,230,238,135,125,211,217,200,55,221,63,153,39,183,115,144,127,11,163,72,230,16,46,119,188,161,195,90,16,79,201,25,38,14,235,20,180,179,237,3,19,200,48,171,41,218,64,17,161,117,164,122,191,235,0,60,95,39,128,114,69,17,204,195,83,87,91,187,198,227,63,54,106,9,147,6,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1b4d6336-7126-4448-a08f-ebdcc4304edb"));
		}

		#endregion

	}

	#endregion

}

