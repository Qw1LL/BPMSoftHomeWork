namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: StreamRedisRepositorySecurityDecoratorSchema

	/// <exclude/>
	public class StreamRedisRepositorySecurityDecoratorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public StreamRedisRepositorySecurityDecoratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public StreamRedisRepositorySecurityDecoratorSchema(StreamRedisRepositorySecurityDecoratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("190649f9-cffa-4d71-b081-5e1fe86dba01");
			Name = "StreamRedisRepositorySecurityDecorator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,93,79,219,48,20,125,14,210,254,131,21,94,82,105,74,223,161,32,177,14,88,31,64,136,106,218,164,105,66,174,115,219,70,75,236,204,118,128,106,218,127,223,117,108,183,73,234,66,249,216,67,211,250,250,248,126,156,123,108,167,156,150,160,42,202,128,124,186,185,154,138,185,78,199,130,207,243,69,45,169,206,5,255,112,240,231,195,65,84,171,156,47,200,116,165,52,148,199,189,49,226,139,2,152,1,171,244,18,56,200,156,109,48,27,167,101,41,120,200,46,33,108,77,47,40,211,66,230,160,182,231,191,193,44,253,162,117,149,158,205,148,150,212,6,71,24,2,15,37,44,112,68,198,5,85,234,136,76,181,4,90,222,66,150,171,91,168,132,202,209,229,106,10,172,150,185,94,125,6,38,176,76,33,155,149,195,225,144,140,84,93,150,84,174,78,221,216,35,73,230,161,100,142,159,145,2,32,76,194,252,36,14,6,136,135,222,193,104,216,242,88,213,179,34,103,132,153,212,246,204,140,28,145,201,102,122,52,197,39,157,21,96,23,159,115,141,88,227,25,155,132,207,117,241,23,57,20,25,86,127,35,243,123,170,193,78,86,118,16,14,76,238,84,200,124,220,94,136,243,153,224,197,138,76,12,247,40,19,13,143,250,140,49,80,10,19,189,91,110,27,109,75,162,67,224,153,205,172,155,230,141,20,21,72,141,45,54,169,10,141,42,130,204,39,235,134,59,210,13,91,141,86,163,104,1,218,253,138,242,57,73,194,149,145,147,19,194,235,162,24,120,104,180,11,103,165,100,213,184,66,133,107,236,66,0,120,154,56,63,17,135,7,130,68,160,187,218,172,57,147,139,186,4,174,147,152,81,182,196,214,161,184,227,143,228,171,2,137,40,110,183,78,58,69,194,240,123,108,32,131,65,195,123,20,253,181,95,225,204,210,241,18,216,47,239,253,26,107,73,226,253,68,149,134,69,235,163,74,208,181,228,79,41,194,38,134,143,182,60,186,5,145,187,186,51,62,238,118,181,7,238,13,183,250,216,18,28,105,233,12,155,19,146,157,105,210,4,249,167,156,65,226,171,106,225,222,192,92,47,209,150,211,53,125,141,230,186,197,7,196,214,7,144,164,235,122,208,206,215,137,227,71,220,197,196,63,123,58,233,58,125,183,50,183,148,17,104,109,71,18,187,54,124,107,87,152,45,223,28,135,78,68,246,104,220,47,189,36,120,0,5,132,224,249,14,105,228,245,228,180,170,32,212,57,240,20,133,228,136,205,13,159,141,207,242,117,5,122,41,178,30,85,253,123,170,49,184,236,64,145,121,206,51,60,170,127,215,160,116,115,89,93,24,67,217,120,74,215,235,219,215,146,181,84,84,210,146,112,124,29,56,137,243,44,62,181,151,11,201,179,116,52,108,230,54,80,43,3,229,32,56,239,13,157,78,110,223,84,77,42,201,101,157,103,232,214,247,230,158,74,127,187,66,54,201,144,44,12,249,29,155,220,59,32,199,181,148,72,180,177,166,147,204,209,237,4,25,108,92,218,68,107,185,30,180,41,127,134,69,188,220,237,149,183,225,113,108,77,61,38,111,109,233,132,99,187,214,177,76,9,123,82,13,13,51,158,238,221,92,95,247,253,7,89,111,184,181,137,38,193,14,216,112,158,123,59,122,203,86,176,156,184,34,92,83,158,104,220,155,35,237,246,237,163,27,61,217,124,26,49,185,18,39,217,241,14,181,121,236,222,154,91,123,196,197,45,87,118,50,172,68,215,17,71,126,71,186,62,252,11,180,41,161,20,247,93,109,222,90,211,127,217,229,141,111,90,96,60,85,23,58,172,187,123,129,186,179,73,188,235,254,14,211,233,2,237,218,218,46,167,201,57,71,153,53,91,32,252,222,76,190,45,65,66,114,81,115,22,4,124,36,51,33,138,83,82,73,140,207,240,239,16,126,192,151,165,151,82,60,16,243,170,119,45,244,164,172,10,48,146,134,236,252,145,65,101,10,114,47,30,47,205,9,95,93,206,112,91,188,50,76,239,34,177,214,182,241,239,63,4,126,233,168,240,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("190649f9-cffa-4d71-b081-5e1fe86dba01"));
		}

		#endregion

	}

	#endregion

}

