namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ICampaignAudienceSchema

	/// <exclude/>
	public class ICampaignAudienceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ICampaignAudienceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ICampaignAudienceSchema(ICampaignAudienceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7cf2f781-b07b-42f6-b991-868addd39f5d");
			Name = "ICampaignAudience";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("0fa99f9a-3eca-422f-9a3c-3294c39b5190");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,88,221,110,211,48,20,190,102,18,239,96,149,11,134,132,218,251,49,34,177,178,77,145,0,13,202,30,192,75,78,90,75,142,29,252,67,41,136,119,231,28,59,73,147,46,139,90,134,138,224,166,105,156,243,251,125,62,199,39,81,188,4,91,241,12,216,197,205,251,133,46,220,116,174,85,33,150,222,112,39,180,122,122,242,227,233,201,19,111,133,90,178,197,198,58,40,95,237,220,163,188,148,144,145,176,157,94,131,2,35,178,173,204,214,168,129,233,219,11,124,128,143,158,25,88,162,56,75,149,3,83,160,239,51,150,206,121,89,113,177,84,111,124,46,64,101,16,4,103,179,25,59,183,190,44,185,217,36,245,125,171,196,10,109,88,86,171,49,94,235,49,235,208,85,163,59,235,40,87,254,78,138,140,137,86,127,192,231,19,204,22,127,219,8,223,131,91,233,220,158,177,155,160,28,31,238,70,21,22,222,228,57,229,219,134,225,244,54,182,194,232,146,125,241,96,54,211,70,124,1,132,25,179,43,237,101,206,50,173,28,23,202,178,148,254,75,95,170,86,176,151,66,92,169,184,225,37,83,72,220,235,137,13,118,38,201,71,178,30,16,89,130,179,152,164,5,67,148,180,1,77,207,103,65,111,216,76,19,106,138,132,166,249,36,185,85,2,227,101,34,7,229,68,33,192,48,93,48,183,130,109,78,72,125,197,4,241,63,110,152,50,203,92,154,207,67,90,147,228,3,46,147,177,152,38,91,11,183,26,114,19,213,238,219,54,224,188,81,54,73,67,130,144,51,163,215,22,197,189,34,225,230,41,137,35,207,68,202,105,131,116,184,188,100,215,94,32,198,189,116,95,98,50,134,200,219,9,246,197,171,199,240,45,133,117,251,178,88,59,182,147,228,29,106,69,120,226,10,91,175,68,182,98,10,48,85,116,193,243,112,33,136,80,223,137,76,84,28,243,116,252,78,30,137,225,175,26,241,35,92,211,75,229,75,48,228,249,156,64,77,218,152,7,65,30,5,243,242,91,38,125,31,207,128,97,99,226,88,101,227,171,28,187,94,39,140,227,96,74,91,53,66,0,123,108,215,81,36,111,140,206,192,90,176,3,157,49,212,90,72,49,84,96,103,3,217,231,24,25,119,222,210,230,178,21,100,20,125,254,159,163,126,207,112,7,144,69,64,99,63,235,221,66,236,160,8,238,17,28,215,139,3,17,141,178,127,77,112,62,64,188,210,14,233,42,43,9,212,54,109,232,83,66,226,89,136,119,119,155,62,88,251,18,42,14,162,96,180,155,59,78,145,162,218,185,5,212,51,80,188,158,68,156,38,179,100,167,181,215,248,97,182,205,201,125,177,33,220,226,250,105,128,46,134,246,59,104,69,84,254,93,76,8,137,6,151,3,17,89,16,34,11,12,107,222,110,148,66,242,37,115,6,51,161,122,109,65,194,201,226,216,232,80,5,45,98,122,109,120,127,38,51,174,242,109,215,27,238,139,127,59,249,227,55,171,49,168,127,179,61,5,18,40,156,0,125,159,13,154,106,218,93,246,0,27,140,187,1,152,254,2,248,245,164,179,232,157,103,110,133,225,213,37,137,91,170,211,80,48,165,120,236,30,8,114,93,211,61,111,163,0,167,10,155,4,167,211,223,105,199,101,31,188,48,36,135,217,178,73,20,91,28,14,148,116,242,42,88,239,236,251,32,221,216,165,225,214,27,131,136,177,175,92,34,122,29,43,207,45,251,204,13,30,228,159,131,203,195,38,2,116,15,249,77,199,241,156,220,78,146,112,33,47,20,216,208,230,109,6,227,53,158,95,148,68,220,65,237,188,120,111,98,109,144,105,94,249,238,249,60,37,58,134,195,25,127,15,200,156,231,82,124,71,204,59,173,162,23,41,181,139,26,189,255,187,109,244,206,175,150,194,184,245,251,149,60,240,174,118,27,196,98,80,87,218,80,89,252,129,150,243,169,174,199,59,228,62,190,130,7,126,122,7,42,46,99,153,94,73,189,190,148,80,34,6,120,186,238,59,209,106,111,50,248,4,197,237,40,142,182,246,129,181,18,53,24,68,79,227,100,185,80,87,135,88,119,65,227,97,235,13,232,177,99,133,185,48,32,35,245,18,63,141,236,78,26,67,192,244,137,139,164,209,212,209,149,190,64,147,241,73,100,176,139,82,205,99,12,52,46,53,4,62,3,149,199,239,46,225,254,103,252,86,212,89,12,43,191,0,96,40,208,222,177,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7cf2f781-b07b-42f6-b991-868addd39f5d"));
		}

		#endregion

	}

	#endregion

}

