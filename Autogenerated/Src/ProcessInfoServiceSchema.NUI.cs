namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ProcessInfoServiceSchema

	/// <exclude/>
	public class ProcessInfoServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ProcessInfoServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ProcessInfoServiceSchema(ProcessInfoServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b6b00b4a-03a0-421e-819a-e3f6b7de89e5");
			Name = "ProcessInfoService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("ee75749b-5184-4f75-a3ec-dd2e096c705e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,219,110,26,49,16,125,222,72,249,7,43,125,89,36,180,31,0,170,170,144,52,17,149,32,8,138,242,16,229,193,236,14,96,117,215,222,218,179,180,180,226,223,59,94,123,23,135,75,72,31,88,225,185,156,153,57,62,99,38,121,1,166,228,41,176,193,100,52,83,75,76,238,148,92,138,85,165,57,10,37,147,241,124,120,125,197,254,94,95,69,149,17,114,197,102,91,131,80,244,15,206,201,180,146,40,10,72,102,160,5,207,197,159,58,249,40,138,188,27,145,194,72,101,144,191,235,76,110,83,20,155,203,32,201,51,44,246,1,205,4,100,164,41,138,34,76,62,246,53,64,83,85,33,69,80,40,5,127,210,176,162,162,236,46,231,198,244,216,68,171,20,140,25,202,165,242,209,117,212,139,63,16,85,168,121,138,175,181,205,148,1,34,212,182,123,88,242,42,199,35,251,173,41,199,128,212,71,73,51,46,68,46,112,59,133,159,149,208,80,128,68,19,135,7,59,40,251,204,46,164,216,168,196,27,178,142,45,82,86,139,92,164,44,181,147,156,24,132,245,216,128,27,104,199,138,232,142,233,219,50,48,2,92,171,204,114,80,227,56,231,203,83,9,78,24,225,232,209,11,177,58,148,27,245,3,98,151,70,253,222,76,158,102,223,111,186,204,246,4,6,31,148,46,56,146,157,66,71,212,9,95,129,51,37,223,140,146,93,54,80,217,118,134,219,28,222,132,180,214,228,89,243,178,132,172,107,203,69,83,146,172,146,6,222,7,173,89,104,104,240,4,60,11,92,79,184,38,209,35,104,203,70,3,197,30,1,79,197,212,148,197,143,149,200,88,233,220,243,97,214,101,206,208,4,145,169,83,239,72,20,161,222,250,127,209,134,107,102,210,53,20,156,58,156,27,208,196,153,4,18,54,105,207,151,154,213,238,17,151,212,185,78,30,132,204,134,210,32,151,41,12,182,4,26,239,75,118,250,123,208,182,46,225,186,2,95,146,125,195,9,77,226,179,195,254,124,190,6,172,180,100,18,126,93,164,36,110,176,199,228,235,238,171,58,131,7,220,177,148,99,186,102,241,215,223,41,148,118,54,6,13,23,255,85,172,5,180,223,157,215,34,200,204,201,209,158,232,231,236,161,249,236,206,158,173,228,54,248,158,35,15,53,124,106,91,206,139,165,199,222,188,146,205,126,183,21,236,50,213,13,183,205,217,4,131,186,66,165,123,204,21,115,51,126,80,159,49,37,219,119,204,43,194,93,73,99,107,18,234,123,161,230,22,180,216,113,115,11,30,217,250,72,47,65,190,227,187,173,214,4,132,231,126,112,25,229,7,27,13,133,80,87,240,253,88,89,156,187,215,150,38,66,167,23,6,5,28,62,60,246,190,70,80,44,64,135,91,237,9,8,70,116,207,248,165,248,131,25,143,122,58,165,51,182,251,7,82,67,37,164,45,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b6b00b4a-03a0-421e-819a-e3f6b7de89e5"));
		}

		#endregion

	}

	#endregion

}

