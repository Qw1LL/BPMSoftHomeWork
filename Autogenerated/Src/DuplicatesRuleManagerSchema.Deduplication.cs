namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DuplicatesRuleManagerSchema

	/// <exclude/>
	public class DuplicatesRuleManagerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DuplicatesRuleManagerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DuplicatesRuleManagerSchema(DuplicatesRuleManagerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("fb76e6bf-9b75-4ef4-88d8-6718cee3fe1e");
			Name = "DuplicatesRuleManager";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("4c53ad23-c903-414d-89cd-b08703861304");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,81,111,219,54,16,126,86,129,252,7,206,5,10,25,8,228,61,187,117,130,56,177,11,3,73,27,196,11,246,48,12,5,35,157,109,162,20,233,145,148,23,161,205,127,239,81,148,106,145,150,178,122,105,31,162,132,228,221,199,251,190,59,30,25,65,115,208,91,154,2,153,222,222,44,229,202,36,151,82,172,216,186,80,212,48,41,146,43,200,138,45,103,105,53,58,121,245,229,228,85,84,104,38,214,100,89,106,3,249,219,96,140,222,156,67,106,141,117,242,30,4,40,150,30,216,92,51,241,207,126,114,205,229,3,229,227,241,165,204,115,220,240,90,174,215,56,189,95,223,199,165,160,123,54,153,211,212,72,197,64,227,58,90,188,86,176,198,0,72,202,169,214,99,114,85,19,0,125,87,112,184,161,130,174,65,85,134,163,209,136,188,211,69,158,83,85,158,213,227,91,37,119,44,3,77,114,48,27,153,105,178,146,138,228,214,201,110,155,181,229,32,10,241,52,161,34,35,43,198,13,40,157,52,160,163,22,234,95,87,176,162,5,55,83,38,50,196,136,77,185,5,185,138,23,157,113,13,135,127,163,203,182,120,192,37,71,160,59,126,50,38,221,0,232,141,73,194,239,119,25,48,161,218,80,97,80,138,91,197,118,104,239,214,183,110,64,82,187,78,180,81,150,224,53,208,108,153,110,32,167,31,176,50,200,132,12,236,204,192,9,27,189,6,145,57,84,127,139,57,3,158,245,225,227,230,6,201,40,196,145,130,151,100,129,41,38,246,103,98,191,117,216,88,44,198,166,30,84,60,240,106,110,48,124,219,6,251,142,114,175,65,33,51,225,138,141,124,42,188,113,183,79,160,216,29,108,165,102,88,57,37,249,148,245,172,252,7,241,74,91,85,216,242,179,244,171,180,213,236,93,10,59,115,20,91,131,40,96,224,19,56,173,76,250,3,238,139,119,72,236,17,141,162,64,15,212,186,67,160,168,151,54,218,63,163,72,20,61,61,47,203,141,59,59,190,34,213,193,96,98,131,61,193,100,18,171,91,193,106,50,8,40,94,110,32,253,236,202,97,161,155,37,132,180,107,179,71,166,205,96,116,214,146,247,65,74,78,122,109,227,247,5,203,8,8,195,76,233,138,250,158,101,141,66,59,170,136,174,38,145,108,32,87,50,107,249,52,21,58,199,243,187,168,142,82,10,211,242,126,145,197,33,178,19,85,129,41,148,104,176,127,155,16,81,112,78,222,188,177,113,94,112,238,243,213,241,48,185,16,101,252,72,38,103,228,49,105,31,189,73,13,145,216,225,176,45,251,241,74,94,32,173,29,28,163,103,191,71,92,183,10,23,93,21,92,45,105,205,252,57,158,182,101,90,170,246,119,210,236,98,197,169,38,186,232,255,63,246,173,182,114,24,139,207,121,49,19,69,14,138,62,112,120,231,27,94,253,241,241,172,143,141,79,185,247,32,217,0,66,223,160,216,78,15,170,111,9,90,227,239,75,138,2,188,136,122,184,179,203,220,240,88,254,221,48,71,23,64,101,18,37,127,98,248,224,23,66,95,222,177,48,156,83,20,107,207,36,184,166,206,131,122,26,187,49,118,216,11,179,164,59,140,175,5,84,5,143,182,31,240,88,126,84,179,124,107,92,89,162,236,84,165,155,61,236,144,124,253,74,58,87,130,234,252,5,57,58,37,63,57,87,178,80,41,236,25,52,248,68,31,144,126,89,42,91,103,186,86,28,177,58,114,28,196,115,104,222,37,121,24,235,207,211,125,238,30,112,63,170,182,51,239,214,188,134,114,151,143,229,178,240,238,28,191,83,216,187,231,185,222,113,216,44,106,68,119,215,176,21,137,3,192,250,194,105,182,108,18,233,91,37,246,51,149,89,121,158,212,225,158,163,226,246,229,94,101,211,205,217,156,10,248,151,244,80,111,54,136,240,205,95,228,162,126,47,238,221,147,253,188,123,205,68,145,247,178,108,89,182,234,178,182,188,147,210,184,89,135,162,125,135,131,229,198,15,31,2,96,40,227,125,248,86,158,64,138,253,162,195,120,170,181,197,186,194,47,62,74,147,153,82,82,205,165,202,169,137,7,213,0,49,170,211,131,226,226,255,29,187,234,79,196,114,217,33,152,247,47,191,63,13,130,92,213,137,176,201,121,73,221,78,11,254,249,133,247,89,7,68,71,79,63,65,200,31,239,5,199,246,245,222,110,241,203,27,116,240,104,117,179,254,228,211,55,191,89,103,176,23,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("fb76e6bf-9b75-4ef4-88d8-6718cee3fe1e"));
		}

		#endregion

	}

	#endregion

}

