namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: FlagBasedSyncStrategySchema

	/// <exclude/>
	public class FlagBasedSyncStrategySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FlagBasedSyncStrategySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FlagBasedSyncStrategySchema(FlagBasedSyncStrategySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("98cc9dd8-f9b3-410b-8e74-93b385331101");
			Name = "FlagBasedSyncStrategy";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0bd8020-de17-4815-83cd-c2dac7bbc324");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,88,109,111,219,54,16,254,236,2,253,15,156,250,69,6,60,185,159,155,38,64,28,219,131,209,230,101,113,130,97,24,134,129,145,206,142,86,137,212,40,42,169,90,228,191,239,142,212,11,109,201,137,147,110,64,62,36,54,223,238,30,62,119,247,144,180,224,41,228,25,15,129,77,46,78,151,114,165,131,83,30,39,111,223,124,127,251,102,80,228,177,88,179,101,153,107,72,15,154,118,61,239,68,42,232,239,13,166,147,29,3,75,109,23,225,232,59,5,235,88,10,118,146,240,60,255,192,230,9,95,79,120,14,209,178,20,225,82,43,174,97,93,154,137,227,241,152,125,204,139,52,229,170,60,106,218,0,44,84,176,58,244,22,238,2,111,124,196,226,52,75,32,5,161,121,172,165,24,177,8,146,248,14,20,68,108,165,100,234,46,221,90,25,212,198,199,219,222,20,96,243,75,94,183,123,177,178,2,59,152,150,44,135,4,66,205,120,146,48,33,245,207,145,226,43,61,178,95,113,68,227,36,100,60,231,107,200,71,149,61,28,99,228,0,135,110,74,23,96,175,163,128,26,52,66,155,253,2,229,189,84,81,11,221,129,154,21,55,73,28,178,140,43,29,243,132,133,68,244,14,236,31,216,38,237,3,12,63,254,111,131,36,69,174,185,208,24,168,11,21,223,225,44,26,165,191,237,232,152,142,207,50,252,194,228,205,223,196,195,74,42,150,163,113,182,66,207,44,22,177,230,73,252,141,107,52,75,168,187,140,15,50,235,129,161,71,141,248,21,240,72,138,164,172,13,254,69,214,104,27,228,229,220,246,29,50,1,247,213,4,127,104,19,172,31,218,178,129,194,179,12,233,49,64,88,200,195,91,32,50,159,128,20,18,15,8,76,81,102,55,64,78,104,245,39,40,17,134,183,72,121,70,21,68,126,176,203,171,176,188,3,17,89,46,55,137,157,199,144,68,46,171,187,129,3,87,225,45,131,175,153,194,244,161,181,88,149,89,130,139,158,192,220,240,215,192,54,150,126,45,64,149,87,89,66,160,175,207,166,151,199,243,43,134,159,179,207,179,171,217,20,191,125,154,253,254,219,249,229,148,125,127,255,64,155,176,209,118,183,81,245,116,54,34,53,6,1,162,222,4,97,110,24,110,149,20,241,183,182,30,220,100,238,221,79,101,185,195,255,19,28,155,228,85,69,136,218,67,0,77,85,216,25,85,133,244,214,132,127,157,131,194,165,2,125,146,149,98,163,57,100,36,144,131,65,131,1,105,252,5,244,44,173,66,95,239,141,134,252,173,165,134,205,135,62,74,93,212,167,160,111,229,126,169,113,9,186,80,34,119,202,236,142,39,5,152,210,139,49,31,107,130,119,16,107,122,80,37,120,202,4,158,6,135,222,38,94,239,200,81,164,77,82,140,220,26,101,8,33,248,56,54,54,90,147,202,194,234,41,189,71,128,109,47,114,181,183,177,50,111,247,152,211,137,18,33,138,158,122,230,34,98,17,215,252,6,99,27,96,134,42,170,221,38,56,118,102,90,96,39,238,141,42,165,16,241,63,104,210,24,30,213,254,200,136,113,194,98,189,135,27,119,39,45,240,86,210,76,230,238,204,148,189,114,238,142,43,235,57,178,154,131,214,42,181,153,227,1,103,196,168,55,229,6,241,138,249,63,89,8,193,34,63,43,146,228,92,205,210,76,151,126,99,110,88,59,25,216,64,180,142,172,137,135,6,65,116,211,231,125,58,121,174,107,99,167,117,187,108,204,93,73,187,21,51,97,196,122,205,214,40,205,28,23,97,66,39,144,223,115,84,52,142,94,196,224,243,40,220,193,97,5,209,176,184,6,1,164,55,53,144,34,142,130,51,184,167,79,127,24,92,201,165,113,101,142,180,109,118,144,106,119,245,46,134,186,132,238,179,170,66,238,78,117,232,109,196,235,121,114,68,215,175,78,249,188,26,81,218,19,164,107,160,91,214,157,52,218,171,162,23,83,148,15,115,55,174,164,230,112,107,98,112,220,34,162,185,54,22,85,144,204,146,63,58,183,145,63,25,207,43,100,7,63,24,180,30,117,123,149,177,234,85,225,61,195,133,229,180,183,250,226,13,172,72,232,214,89,41,129,81,128,131,102,184,122,1,216,75,233,210,52,182,229,196,86,25,62,138,146,34,21,190,119,134,180,121,117,39,161,241,189,206,1,65,183,201,122,202,185,138,64,77,202,227,60,244,189,19,115,120,69,231,194,27,82,196,173,63,11,198,190,192,124,43,215,179,175,16,22,152,42,221,228,154,137,188,80,48,157,180,93,126,43,98,142,13,186,73,2,173,183,27,12,172,69,184,52,221,126,235,193,81,64,210,75,187,44,160,105,142,93,74,223,138,197,106,2,197,195,202,221,251,90,134,106,169,180,31,15,110,214,219,213,123,100,54,10,96,55,173,241,157,246,98,37,50,22,188,163,173,108,236,166,239,127,91,17,117,242,222,201,56,98,93,81,175,114,218,222,93,216,255,169,58,59,229,230,208,122,255,129,144,60,87,103,94,89,36,80,66,94,16,6,170,44,244,3,170,86,140,133,105,244,43,198,32,88,8,45,31,87,135,65,128,160,42,77,25,49,43,49,193,5,193,199,95,31,148,111,176,13,235,123,153,241,85,87,178,255,200,219,100,176,241,220,107,95,39,206,115,106,35,214,187,126,162,161,50,191,22,20,252,211,124,109,31,181,230,41,138,116,111,189,247,236,227,76,226,111,55,42,142,92,213,238,91,238,215,116,54,135,162,81,230,185,84,41,215,120,17,220,120,243,142,218,183,99,179,227,206,126,109,159,219,245,240,47,198,162,238,169,45,19,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("98cc9dd8-f9b3-410b-8e74-93b385331101"));
		}

		#endregion

	}

	#endregion

}

