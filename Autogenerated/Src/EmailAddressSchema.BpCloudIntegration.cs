namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EmailAddressSchema

	/// <exclude/>
	public class EmailAddressSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EmailAddressSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EmailAddressSchema(EmailAddressSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8f82b21b-805d-4119-96db-e57d6168ef63");
			Name = "EmailAddress";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5f5fe385-d25b-4c17-9585-cfaff007abaf");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,229,86,81,111,211,48,16,126,238,164,253,135,83,246,210,73,85,42,196,195,36,186,14,193,168,166,61,12,166,117,60,77,83,229,38,151,206,82,98,7,251,50,40,131,255,206,217,233,210,36,237,88,91,144,0,241,146,200,119,247,157,191,251,238,98,71,137,12,109,46,34,132,183,151,23,99,157,80,120,170,85,34,103,133,17,36,181,10,79,71,227,11,29,99,106,247,247,30,246,247,58,133,149,106,6,227,185,37,204,6,173,117,120,85,40,146,25,134,99,52,82,164,242,171,207,192,81,28,119,96,112,198,11,56,77,133,181,175,96,148,9,153,190,137,99,131,214,122,127,191,223,135,99,91,100,153,48,243,147,197,250,250,14,1,93,32,136,50,50,124,12,236,215,34,111,222,9,18,204,153,140,136,232,150,13,121,49,77,101,4,145,219,169,181,81,135,75,224,231,146,141,86,150,76,17,145,54,76,234,210,3,203,136,54,31,111,56,87,146,124,97,104,65,128,194,207,32,25,47,20,139,167,19,32,166,123,108,17,33,50,152,12,131,250,206,1,244,79,74,66,174,132,213,26,30,57,215,49,221,67,120,128,239,127,132,141,183,228,194,136,12,20,143,199,48,240,93,8,42,95,213,152,26,222,135,63,89,11,171,236,230,196,131,184,46,23,214,161,59,105,195,178,191,195,210,227,6,170,211,113,91,178,165,132,132,163,44,167,185,119,252,37,90,200,120,41,196,121,236,210,27,140,100,46,81,209,90,57,126,191,152,103,133,140,65,198,61,120,82,85,246,15,57,98,240,47,235,188,149,76,43,104,247,108,130,157,101,167,121,173,116,118,25,158,27,94,111,95,40,235,94,255,165,162,43,88,154,231,45,172,179,252,122,55,170,133,75,183,83,107,74,171,131,179,213,189,234,13,59,64,21,151,55,69,243,218,184,52,58,71,67,18,55,185,52,206,144,44,104,3,214,189,229,147,7,70,29,230,175,180,11,204,166,104,186,239,75,194,238,216,57,188,173,9,180,56,4,248,142,152,33,13,92,246,193,79,111,139,6,13,90,211,250,231,8,148,211,211,224,80,239,203,238,68,90,99,244,28,15,63,135,235,104,248,214,110,202,194,205,224,29,138,24,141,239,58,144,134,194,34,36,76,204,113,170,58,212,131,24,19,81,164,142,171,134,128,116,0,50,1,165,9,114,163,239,101,140,241,99,70,173,80,39,93,210,61,136,162,30,76,163,232,112,243,154,252,247,177,174,38,207,109,247,22,127,201,101,249,27,7,177,160,234,64,225,31,62,43,102,219,104,190,76,52,113,137,22,84,111,62,76,173,78,145,176,27,28,133,47,142,194,151,240,13,62,178,136,252,217,94,99,150,167,28,121,133,159,10,180,20,142,170,4,156,29,253,17,199,226,135,205,154,157,235,154,255,31,95,67,107,191,141,21,184,194,156,19,9,254,46,182,40,206,148,160,201,218,47,204,84,206,221,219,80,13,19,43,111,102,8,247,194,108,67,47,202,105,226,129,19,6,54,41,54,125,237,229,26,194,173,19,173,180,54,141,108,251,1,39,220,94,242,20,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8f82b21b-805d-4119-96db-e57d6168ef63"));
		}

		#endregion

	}

	#endregion

}

