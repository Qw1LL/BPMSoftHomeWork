namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseRestClientSchema

	/// <exclude/>
	public class BaseRestClientSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseRestClientSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseRestClientSchema(BaseRestClientSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1463351c-0bcb-4ebc-9d61-c3c3180e0d31");
			Name = "BaseRestClient";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("9af1fba8-e20e-442c-aa2d-7a413d186e60");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,87,223,111,219,56,12,126,206,128,253,15,154,7,12,46,174,112,238,225,112,56,116,109,14,109,151,173,57,172,109,144,184,216,195,48,12,178,205,164,30,28,219,39,201,73,115,67,254,247,81,191,108,217,110,147,22,184,151,36,162,72,138,252,68,126,84,114,186,2,94,210,24,200,197,244,122,94,44,68,112,89,228,139,116,89,49,42,210,34,127,253,234,231,235,87,131,138,167,249,146,204,183,92,192,234,125,103,29,76,110,123,162,27,16,61,89,8,15,125,225,172,202,69,186,130,96,14,44,165,89,250,159,58,179,209,186,129,141,40,114,46,163,250,135,239,217,144,49,175,129,9,96,188,209,105,242,97,128,82,148,191,101,176,68,255,228,50,163,156,159,144,11,202,97,6,92,92,102,41,228,66,105,148,85,148,165,49,161,17,23,140,198,130,196,82,179,163,120,26,142,80,19,97,193,207,218,229,199,20,178,4,125,78,89,186,166,2,244,102,169,23,4,157,201,128,190,51,248,183,66,55,215,32,238,139,228,253,83,58,188,196,204,192,228,235,170,220,113,96,152,104,14,177,68,137,124,175,90,235,39,252,69,148,167,241,121,37,238,205,254,91,200,19,29,179,92,185,41,76,89,81,34,134,41,200,52,20,14,218,226,235,100,153,35,132,31,168,160,215,176,138,128,125,83,231,104,164,162,162,200,200,188,138,99,64,156,100,169,12,6,75,125,249,131,1,55,63,118,207,240,99,194,29,63,196,80,202,108,174,209,31,93,194,1,151,110,50,110,42,26,97,117,29,133,64,120,32,177,224,152,101,23,203,79,32,218,18,255,200,28,205,64,84,236,49,176,95,18,196,211,53,49,71,227,153,46,11,223,136,42,150,125,129,8,59,98,157,198,96,195,88,83,70,128,177,130,145,51,99,26,140,87,165,216,106,88,236,5,156,17,193,42,208,50,193,182,198,86,25,155,218,67,21,255,74,136,18,79,48,199,30,181,151,193,37,3,140,207,111,71,161,93,34,24,70,167,200,5,118,66,184,45,1,29,122,180,44,241,14,85,239,14,127,96,221,122,70,61,93,16,255,141,137,118,194,111,170,44,187,101,42,106,191,41,203,35,155,97,227,253,10,104,130,157,28,156,39,137,239,73,157,130,25,102,240,142,157,130,182,65,237,154,36,245,89,38,19,140,12,175,213,44,100,59,249,214,66,170,70,91,1,18,48,135,157,130,113,30,23,137,12,246,46,252,248,87,128,198,23,82,201,220,139,133,203,244,209,190,236,218,6,228,221,187,78,235,147,55,8,218,167,113,232,245,115,55,10,103,125,178,80,106,154,217,124,147,43,208,21,106,90,211,38,217,185,218,242,29,104,7,90,59,248,194,82,188,91,149,251,49,249,253,88,163,16,124,134,124,217,224,105,1,53,95,206,145,134,155,186,103,106,194,114,143,107,226,155,57,38,234,151,107,98,227,124,36,59,166,106,0,205,114,216,16,173,55,83,34,191,229,215,77,177,69,157,234,64,169,31,72,179,176,24,231,73,115,78,221,212,29,178,237,103,191,35,88,214,241,61,241,177,23,106,110,34,117,87,14,122,124,117,70,32,48,191,141,195,166,55,23,52,227,86,106,34,200,177,106,180,100,247,34,70,113,232,121,56,28,146,83,94,173,86,148,109,71,86,48,7,65,84,163,16,234,246,15,89,32,129,216,187,171,141,135,93,235,211,146,50,44,173,28,159,6,103,94,86,44,211,220,27,125,150,95,193,233,80,109,61,174,89,226,172,220,20,44,241,70,83,243,171,165,111,152,126,93,164,137,140,239,194,246,177,229,61,117,208,177,37,70,235,204,66,45,43,245,235,55,34,10,213,164,112,206,85,111,34,170,231,243,203,201,164,238,92,181,106,90,87,249,36,191,17,239,196,195,207,218,167,134,188,161,18,73,98,42,30,34,213,204,99,34,8,11,57,248,255,252,3,203,15,93,251,157,163,181,147,221,129,75,176,180,187,82,87,247,92,204,91,189,239,141,102,45,39,100,122,59,15,135,72,31,251,208,157,185,30,44,194,45,183,22,216,14,53,213,189,237,16,207,190,36,199,15,16,87,56,207,174,194,112,74,54,16,189,180,188,112,206,52,9,226,162,95,98,186,85,56,42,169,150,17,56,116,80,201,74,157,220,67,27,140,51,73,221,249,25,21,201,214,82,143,100,126,103,244,74,77,93,20,166,49,31,39,118,215,195,17,249,155,72,222,176,213,242,1,184,121,196,194,109,244,3,159,9,248,78,236,24,156,144,4,22,180,202,132,31,30,174,30,147,174,45,32,233,105,31,166,22,15,125,246,227,0,25,88,186,83,209,129,8,223,87,2,85,184,33,94,185,111,159,230,192,230,102,211,18,169,85,118,94,223,106,102,27,202,198,173,113,94,173,234,77,28,16,135,237,38,188,192,7,34,132,248,167,160,111,168,35,180,225,96,140,237,248,236,211,197,250,119,173,162,102,148,224,214,69,149,102,114,150,24,13,119,170,110,90,138,106,94,226,204,137,154,65,211,4,80,255,107,193,35,55,199,68,220,167,246,200,157,91,74,60,66,38,49,28,242,130,107,55,117,250,127,223,123,51,240,122,79,220,222,52,60,68,110,119,173,55,241,179,59,190,101,229,141,58,94,246,144,90,91,211,111,47,73,219,111,77,111,109,49,222,238,179,95,242,90,218,22,238,126,1,83,88,35,81,48,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1463351c-0bcb-4ebc-9d61-c3c3180e0d31"));
		}

		#endregion

	}

	#endregion

}

