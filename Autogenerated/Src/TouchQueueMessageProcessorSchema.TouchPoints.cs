namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TouchQueueMessageProcessorSchema

	/// <exclude/>
	public class TouchQueueMessageProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TouchQueueMessageProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TouchQueueMessageProcessorSchema(TouchQueueMessageProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("df156054-a09a-4b76-826d-896d4920eed5");
			Name = "TouchQueueMessageProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,77,111,219,48,12,61,187,64,255,3,145,93,220,75,114,111,154,20,109,16,12,5,154,46,67,187,115,161,56,180,35,76,150,60,73,206,150,21,253,239,163,36,219,73,156,184,73,119,241,7,69,62,210,239,81,148,37,203,209,20,44,65,184,159,207,158,85,106,251,19,37,83,158,149,154,89,174,228,229,197,219,229,69,84,26,46,51,120,222,24,139,57,173,11,129,137,91,52,253,175,40,81,243,100,216,248,108,65,242,92,201,99,118,141,91,107,38,212,130,137,235,235,224,221,127,84,89,70,102,90,39,143,47,26,51,202,1,19,193,140,185,134,23,85,38,171,239,37,150,56,67,99,88,134,115,173,18,122,82,218,123,15,6,3,184,49,101,158,51,189,25,87,239,149,7,26,96,66,64,30,194,12,164,90,229,228,139,8,137,198,116,212,219,34,247,6,227,126,141,53,216,1,43,202,133,224,9,36,174,146,15,11,137,136,44,186,110,107,39,142,172,46,19,171,52,125,194,220,195,4,143,118,189,222,240,32,185,229,76,240,191,84,165,196,223,192,41,154,73,146,70,165,96,87,24,10,112,21,30,150,24,44,5,211,44,7,73,146,142,122,165,65,77,249,101,144,170,55,254,65,239,144,52,134,6,188,127,51,240,97,30,165,250,210,238,111,140,127,236,193,194,126,150,43,112,221,18,69,45,167,81,203,205,53,64,244,94,81,133,114,25,216,218,167,142,50,22,168,45,71,71,156,230,107,102,49,56,20,225,5,30,166,178,204,81,179,133,192,155,123,102,176,187,230,49,188,230,45,147,153,172,24,119,117,252,47,226,236,40,32,140,60,139,81,71,62,184,189,133,184,107,109,4,143,138,45,81,211,158,178,219,181,248,234,106,248,9,162,78,117,216,157,60,104,170,157,157,176,47,27,237,134,15,59,174,234,149,53,215,182,100,2,90,154,183,94,223,32,67,59,4,227,46,239,31,20,232,70,0,113,208,145,177,22,138,188,224,85,120,215,225,78,41,222,30,16,170,70,164,164,164,73,237,27,248,175,158,29,223,217,140,73,146,194,115,30,226,226,48,14,230,138,75,107,122,158,124,130,49,251,48,35,88,51,81,226,110,27,159,195,246,209,153,83,53,210,147,178,60,229,168,27,210,193,42,144,206,184,1,182,80,165,133,34,244,4,205,199,19,236,116,98,195,171,109,150,106,219,46,125,221,129,205,195,62,171,135,112,129,225,35,246,145,31,104,157,25,90,99,165,205,251,81,192,243,52,120,56,83,128,102,203,133,93,232,116,32,5,220,151,186,195,131,173,25,23,110,48,212,199,72,45,7,109,209,207,202,209,202,228,186,202,221,131,18,90,89,162,0,151,205,182,58,25,94,221,218,253,238,141,85,191,251,231,14,5,90,112,39,132,104,176,14,200,239,26,79,51,180,43,181,236,26,226,107,197,151,36,145,69,45,153,168,74,137,15,106,172,73,175,143,151,148,126,34,88,178,130,120,205,244,86,8,218,107,29,99,185,142,139,120,10,113,227,223,159,48,89,57,86,97,113,157,167,9,136,182,222,117,117,181,79,32,38,138,52,218,82,135,35,205,147,81,95,207,230,229,212,204,126,209,52,219,93,51,86,181,208,35,241,3,191,28,65,53,51,231,254,20,84,238,189,113,199,182,152,174,81,218,93,234,221,47,209,238,15,130,71,196,63,9,22,126,172,135,168,59,157,209,193,41,237,83,41,196,55,61,205,11,187,153,214,46,46,21,36,116,154,250,76,30,136,98,90,229,208,102,227,244,203,67,225,148,172,65,63,118,202,248,134,57,187,81,106,118,38,43,76,126,238,86,25,55,169,43,29,219,61,184,167,242,113,41,131,117,223,72,182,127,206,10,4,246,81,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("df156054-a09a-4b76-826d-896d4920eed5"));
		}

		#endregion

	}

	#endregion

}

