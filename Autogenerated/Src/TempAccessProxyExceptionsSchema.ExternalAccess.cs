namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TempAccessProxyExceptionsSchema

	/// <exclude/>
	public class TempAccessProxyExceptionsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TempAccessProxyExceptionsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TempAccessProxyExceptionsSchema(TempAccessProxyExceptionsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7f12bace-72ee-4042-9a07-c5a18b5d88ca");
			Name = "TempAccessProxyExceptions";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f214e3c2-8cc2-4e62-be3f-96a9b4832c80");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,84,77,111,219,48,12,61,39,64,254,3,145,94,18,192,136,239,89,27,32,235,122,232,97,107,128,108,167,97,7,69,161,29,161,178,100,80,82,147,108,216,127,31,45,231,195,109,156,98,107,7,108,135,94,108,136,22,31,249,30,233,103,68,129,174,20,18,225,253,236,227,220,102,126,116,109,77,166,242,64,194,43,107,70,55,27,143,100,132,158,74,137,206,205,132,188,23,57,246,186,63,122,221,78,112,202,228,48,223,58,143,197,187,94,151,35,23,132,57,39,193,181,22,206,141,97,90,170,57,210,3,210,205,70,98,89,193,197,91,95,239,22,206,106,244,56,232,127,113,199,186,119,211,224,87,183,198,99,126,40,189,203,26,157,2,245,19,240,20,112,248,141,241,210,52,133,75,23,138,66,208,118,178,59,127,94,33,224,254,50,248,149,240,160,28,191,201,174,13,172,87,104,160,36,187,217,66,110,61,32,145,37,200,200,22,32,74,5,46,86,26,237,129,211,6,114,25,22,90,73,144,21,189,22,118,48,134,6,211,14,107,196,207,163,40,214,56,238,89,122,75,172,205,44,66,213,55,158,18,136,129,91,163,188,18,90,125,71,7,2,12,174,65,113,190,48,60,41,155,49,19,228,20,68,144,132,217,85,191,69,160,116,82,247,89,17,57,101,82,71,74,65,162,0,195,43,112,213,231,53,112,60,218,254,164,146,110,119,168,133,91,162,147,164,22,220,71,85,53,170,53,186,76,99,110,132,218,169,114,218,195,128,249,86,43,178,67,27,86,151,59,99,88,8,135,131,125,12,170,77,234,252,252,95,133,168,119,227,145,28,184,41,181,224,22,98,105,66,225,120,182,25,95,138,226,28,86,182,41,208,73,9,101,76,179,195,201,185,109,101,86,34,184,3,79,25,136,208,248,227,213,4,184,46,107,18,180,230,78,50,228,175,18,247,21,85,6,198,66,44,213,0,103,92,87,162,84,153,194,229,139,166,152,28,119,188,6,63,28,135,240,120,182,201,201,247,230,172,47,208,44,235,63,35,158,235,232,147,224,57,63,225,95,201,160,244,234,65,249,237,95,243,150,86,208,215,251,76,101,41,82,240,128,50,161,52,46,97,25,120,144,90,85,115,244,170,64,27,124,194,75,237,215,150,238,43,79,90,104,44,92,2,31,62,205,99,66,32,150,17,189,252,3,59,106,229,241,102,77,231,181,249,151,54,213,190,116,111,150,69,47,177,172,223,153,238,51,246,213,50,247,87,91,24,111,204,47,72,193,158,161,98,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7f12bace-72ee-4042-9a07-c5a18b5d88ca"));
		}

		#endregion

	}

	#endregion

}

