namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ImportValueFormattingSchema

	/// <exclude/>
	public class ImportValueFormattingSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ImportValueFormattingSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ImportValueFormattingSchema(ImportValueFormattingSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7ef40e2c-46f3-4b73-9d6d-c1d44cd695b1");
			Name = "ImportValueFormatting";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,86,91,111,218,48,20,126,206,164,253,7,43,157,52,163,209,176,103,10,116,107,11,109,181,210,162,129,42,77,219,84,121,137,1,183,137,147,218,14,19,234,248,239,179,29,39,113,72,184,240,128,236,227,115,249,206,197,159,67,81,132,121,130,124,12,46,38,227,105,60,23,222,101,76,231,100,145,50,36,72,76,189,17,9,241,109,148,196,76,188,127,247,246,254,157,147,114,66,23,96,186,230,2,71,103,91,123,239,142,208,215,154,240,50,14,67,236,43,103,220,187,198,20,51,226,151,58,101,80,134,165,84,202,79,24,94,72,93,112,25,34,206,187,32,139,253,136,194,20,143,98,22,33,33,164,153,86,76,210,63,33,241,129,175,244,118,169,57,10,114,233,82,66,16,93,48,97,100,133,4,214,78,156,36,219,0,95,157,1,46,152,66,245,20,72,81,230,7,244,129,187,150,191,211,241,248,52,8,220,179,221,54,130,68,150,205,205,77,55,138,186,156,31,178,152,38,136,22,86,95,220,229,242,151,180,251,117,192,48,192,62,137,80,56,70,252,101,140,158,99,166,2,126,246,154,44,252,37,98,85,125,66,181,254,199,207,31,179,122,59,39,152,6,89,129,204,222,84,107,68,112,24,200,14,76,88,44,100,255,112,144,23,204,108,193,55,188,214,5,159,32,194,122,25,180,54,184,66,2,105,233,108,157,224,193,207,223,224,201,143,195,52,162,92,237,15,68,212,253,97,169,47,98,166,226,234,254,154,160,89,175,27,187,12,143,195,97,193,104,1,61,22,142,13,77,150,164,10,212,113,54,251,209,142,177,88,198,123,11,180,34,76,164,40,4,51,211,103,112,141,69,190,134,241,159,103,169,5,86,38,153,41,90,21,184,86,178,103,90,110,128,217,58,242,10,9,37,134,45,141,209,33,115,0,11,93,111,248,42,227,113,40,228,58,158,195,60,86,171,149,123,118,24,22,41,163,160,60,178,125,103,30,55,0,135,28,111,25,80,252,183,72,3,66,40,171,139,213,182,98,222,242,102,196,127,225,6,216,198,42,97,189,36,38,123,153,76,238,170,104,86,225,188,146,119,59,31,254,185,110,124,158,144,129,87,169,208,44,158,106,85,104,84,207,142,68,82,69,81,52,173,169,67,123,195,110,221,235,3,241,77,90,170,18,217,45,205,172,224,40,140,145,168,76,177,26,80,123,124,213,152,36,76,26,113,53,142,122,126,245,16,76,114,217,153,141,181,70,26,222,4,5,223,201,98,41,96,253,232,14,211,133,88,130,79,165,255,118,157,69,172,196,142,187,39,214,133,238,116,58,160,199,211,40,66,108,61,200,5,58,83,211,96,117,179,213,18,188,224,53,151,169,69,9,98,216,43,76,59,219,182,61,121,142,34,64,229,115,214,119,179,155,124,47,215,238,96,72,5,17,107,115,185,245,185,215,235,104,229,102,91,187,167,133,181,22,214,237,178,210,242,65,175,147,175,44,178,170,15,216,36,230,66,146,133,143,185,122,251,30,173,64,208,76,65,9,188,13,14,16,132,233,182,236,187,77,99,231,242,193,102,92,60,176,43,60,71,105,40,160,15,250,3,224,123,146,35,65,191,111,249,111,121,58,126,73,34,25,2,239,150,223,167,97,248,192,134,81,34,214,208,14,126,94,78,184,228,147,127,255,74,4,125,64,165,205,54,199,52,48,139,254,231,127,137,240,151,64,177,200,69,101,190,91,249,124,123,151,33,193,180,58,252,133,119,31,73,114,114,243,239,134,138,142,55,187,29,15,221,110,166,151,195,168,93,108,155,132,43,197,53,196,181,55,194,213,215,89,83,132,58,137,53,83,100,219,254,180,56,54,222,211,142,180,142,15,250,193,125,179,226,110,192,155,245,177,178,113,143,193,49,126,184,31,254,200,49,236,83,28,221,61,124,157,109,131,133,208,112,199,246,123,145,15,84,141,253,26,232,175,24,143,28,111,144,141,248,86,172,29,99,215,240,152,27,153,45,218,252,7,95,201,190,151,15,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7ef40e2c-46f3-4b73-9d6d-c1d44cd695b1"));
		}

		#endregion

	}

	#endregion

}

