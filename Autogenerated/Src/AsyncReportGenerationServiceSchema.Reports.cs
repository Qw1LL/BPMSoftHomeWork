namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: AsyncReportGenerationServiceSchema

	/// <exclude/>
	public class AsyncReportGenerationServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public AsyncReportGenerationServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public AsyncReportGenerationServiceSchema(AsyncReportGenerationServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("079d9b9d-f775-4165-a083-6b99f74adcc6");
			Name = "AsyncReportGenerationService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f8ef1a6f-6619-48e3-9227-afa9b7782f83");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,87,77,111,219,56,16,61,171,64,255,195,172,187,7,5,8,228,123,62,10,164,238,110,96,236,102,17,196,217,195,162,40,10,90,26,203,68,36,210,224,135,179,222,32,255,125,135,164,100,75,50,229,164,135,26,32,197,153,121,243,56,239,49,21,172,70,189,97,57,194,151,251,187,133,92,153,108,38,197,138,151,86,49,195,165,248,248,225,229,227,135,196,106,46,74,88,236,180,193,250,114,191,46,43,185,100,213,197,197,76,214,181,20,217,159,178,44,105,251,240,253,144,80,97,182,48,244,27,251,230,98,227,49,180,75,251,159,20,150,4,4,102,21,211,250,2,110,244,78,228,15,184,145,202,220,162,192,128,114,129,106,203,115,244,231,167,211,41,92,105,91,215,76,237,62,55,107,58,175,80,163,48,26,24,232,112,24,228,138,22,204,165,91,43,41,164,213,213,14,148,79,12,229,62,51,44,119,96,41,34,107,51,79,59,169,55,118,89,241,28,114,135,236,13,96,9,209,72,191,251,110,126,231,88,21,212,206,189,226,91,102,2,242,100,19,22,132,130,21,82,16,156,249,23,166,209,51,7,63,12,211,79,123,18,35,71,143,235,75,5,63,84,127,35,80,154,124,66,81,4,32,125,84,116,245,218,40,155,211,73,135,205,183,215,64,11,173,158,106,50,117,231,146,164,131,121,15,249,188,249,20,197,56,128,120,6,110,226,146,132,198,9,174,129,126,239,152,96,37,221,192,45,26,55,98,168,210,201,16,193,228,204,147,146,28,72,162,208,62,97,201,144,10,58,113,76,78,146,188,158,102,232,94,201,13,42,195,209,223,157,52,152,27,44,218,219,107,150,176,229,202,88,86,193,220,245,224,254,189,208,68,153,75,120,35,247,29,154,181,28,29,138,173,228,5,204,88,190,198,97,247,143,212,104,26,219,244,20,156,195,223,52,191,116,179,130,192,185,50,182,183,108,233,222,50,5,79,184,107,120,203,92,248,188,200,30,229,194,40,210,101,218,16,236,78,109,89,101,29,191,2,159,125,234,40,156,80,185,95,42,155,89,165,72,132,46,40,155,23,71,119,246,141,234,127,167,196,190,64,247,50,90,10,198,170,1,141,134,103,166,136,98,185,181,196,156,171,66,53,59,221,230,46,226,143,125,203,35,221,250,83,133,175,114,221,17,225,183,54,250,59,89,200,40,176,97,135,217,3,214,114,139,105,27,220,212,57,212,200,102,107,204,159,110,84,105,107,34,234,47,91,85,169,32,131,150,171,244,112,230,172,137,82,104,172,18,29,128,239,153,223,195,140,117,196,61,180,76,191,177,48,76,121,191,164,185,206,145,12,142,252,50,39,187,49,206,166,89,235,148,100,143,122,131,57,95,113,154,123,122,29,54,149,187,40,38,10,58,144,75,85,56,223,60,54,206,176,179,97,138,213,224,250,187,158,244,39,101,242,249,113,141,126,122,32,63,12,174,145,176,228,148,153,249,251,114,75,22,188,249,106,234,83,197,51,247,68,78,105,194,243,22,42,240,130,88,118,216,85,120,13,10,102,88,11,252,40,105,224,91,71,2,61,45,212,255,241,235,225,181,116,53,109,67,59,78,218,122,132,31,78,207,117,116,118,79,106,247,60,226,199,82,245,222,111,136,183,223,213,193,240,68,59,235,3,119,204,198,65,14,81,141,212,188,60,89,114,94,12,29,185,249,208,120,81,136,30,55,192,88,232,208,129,26,8,100,201,217,92,172,100,250,235,196,93,102,252,218,224,153,155,53,204,191,18,170,151,56,222,87,88,147,246,151,136,2,180,227,6,139,108,210,215,102,60,174,171,211,168,244,200,206,156,240,26,92,164,0,67,211,230,164,198,58,98,27,78,217,59,133,22,172,46,54,254,163,211,123,66,92,239,148,109,83,200,53,240,222,42,93,181,181,12,120,141,54,145,123,185,157,150,215,112,84,30,80,219,202,56,134,227,95,186,143,197,79,188,156,35,26,58,253,46,53,79,82,152,24,190,130,232,8,103,14,3,105,227,151,235,55,94,211,6,77,98,232,175,217,231,240,56,11,102,201,237,21,255,15,139,155,220,121,248,111,255,230,184,113,193,233,228,31,105,233,233,16,32,164,129,66,62,139,74,50,234,123,205,117,75,107,59,202,52,168,35,77,54,92,70,172,98,156,222,88,139,167,53,19,2,91,205,36,201,240,117,243,59,238,139,251,191,66,239,213,123,253,31,199,136,252,202,220,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("079d9b9d-f775-4165-a083-6b99f74adcc6"));
		}

		#endregion

	}

	#endregion

}

