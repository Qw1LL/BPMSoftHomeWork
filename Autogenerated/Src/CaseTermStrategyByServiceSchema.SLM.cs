namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CaseTermStrategyByServiceSchema

	/// <exclude/>
	public class CaseTermStrategyByServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseTermStrategyByServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseTermStrategyByServiceSchema(CaseTermStrategyByServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cd3b380e-d84c-4c2a-956e-762203f1b0f1");
			Name = "CaseTermStrategyByService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b11d550e-0087-4f53-ae17-fb00d41102cf");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,87,75,111,27,55,16,62,43,64,254,3,163,92,86,128,187,186,43,146,138,90,118,83,1,85,234,70,74,47,69,81,208,187,35,153,197,46,87,33,185,110,213,194,255,189,51,124,104,159,146,229,164,104,14,129,200,157,247,204,247,13,45,121,14,122,207,19,96,215,119,171,117,177,53,241,162,144,91,177,43,21,55,162,144,175,95,253,243,250,213,160,212,66,238,216,250,160,13,228,239,90,103,148,207,50,72,72,88,199,239,65,130,18,73,37,179,40,242,188,144,245,179,130,230,41,190,149,70,24,1,186,186,238,141,36,94,240,12,100,202,213,179,130,235,31,87,183,127,25,144,154,66,170,57,11,250,27,145,195,39,41,12,155,61,231,41,14,162,237,164,215,96,12,158,52,154,176,57,180,2,56,232,32,128,138,168,250,86,193,14,63,176,69,198,181,158,96,36,26,54,160,242,181,65,5,216,29,174,15,107,80,143,34,1,43,60,30,143,217,84,151,121,206,213,97,238,207,164,193,12,170,48,237,117,216,253,129,105,167,197,68,190,207,32,7,105,156,251,96,99,92,51,178,47,239,51,145,176,132,2,56,237,159,77,216,117,235,219,52,8,47,37,250,127,228,217,85,77,29,37,52,89,167,25,57,38,121,167,138,61,40,234,232,4,127,139,71,20,178,121,13,246,238,192,20,240,180,144,217,129,121,175,193,213,13,55,156,253,238,147,162,195,170,72,33,115,21,28,188,197,142,56,7,254,92,47,105,199,85,187,134,246,226,3,96,235,82,87,131,111,146,2,203,37,112,90,217,182,80,76,239,33,17,91,44,208,177,188,41,250,167,74,118,75,121,204,195,21,179,39,9,18,178,37,9,101,127,95,138,52,8,46,113,124,150,41,115,223,7,59,176,179,133,255,116,248,245,68,255,63,125,89,30,6,231,149,149,52,219,230,176,199,8,139,172,204,165,102,146,64,126,81,54,97,224,23,78,243,3,41,118,210,193,34,17,20,62,2,183,176,223,144,171,179,249,244,40,175,209,193,101,202,71,11,39,71,0,97,110,84,153,152,66,209,28,88,55,103,202,183,196,244,4,207,196,223,160,25,103,18,254,100,2,245,185,196,241,47,182,204,60,0,170,0,214,67,193,118,54,60,9,149,225,120,238,74,118,162,172,246,102,207,21,207,109,245,103,195,18,7,27,35,149,142,42,135,243,13,58,162,59,108,82,184,140,167,99,171,209,111,128,171,157,118,106,248,171,36,184,235,134,130,175,239,201,136,163,79,141,8,172,243,234,120,197,110,132,253,129,9,76,93,143,174,88,113,255,7,126,157,147,67,61,178,253,152,176,123,180,31,53,117,71,190,129,29,236,34,61,146,106,188,41,126,178,150,166,61,96,153,71,163,119,23,52,121,5,230,161,72,47,194,249,123,48,154,165,176,229,101,102,88,226,185,156,137,20,43,134,24,199,138,19,117,90,26,71,6,181,52,125,174,135,10,76,169,164,158,223,156,54,136,109,8,82,117,68,89,212,99,48,97,157,96,39,142,139,33,10,53,115,138,173,181,130,123,212,252,194,179,178,221,51,226,94,103,203,206,188,142,137,173,171,171,20,174,66,222,17,57,31,53,42,219,91,171,59,5,56,65,136,132,207,37,168,195,145,48,184,76,153,79,137,16,33,212,89,10,233,140,42,232,207,195,57,161,136,103,186,240,72,178,107,254,176,78,30,32,231,63,147,51,66,80,64,222,249,201,71,25,3,195,121,125,9,226,69,87,39,52,97,115,100,193,38,1,246,183,169,143,242,66,93,58,65,71,157,27,134,201,182,119,162,11,48,180,184,215,129,141,8,241,65,252,211,39,224,81,49,64,235,241,119,105,234,62,69,195,208,236,161,255,44,182,44,122,227,202,241,3,215,223,103,124,23,53,67,161,167,9,45,8,253,17,159,121,56,52,48,10,97,13,92,81,26,44,62,99,45,127,191,134,216,38,203,116,114,20,245,119,191,161,241,20,134,163,152,34,246,204,221,210,175,171,216,137,14,129,63,189,60,252,34,123,236,68,223,88,35,231,163,63,138,94,30,125,93,165,39,122,143,93,27,201,203,56,236,185,29,101,41,44,57,206,187,240,111,47,183,227,31,4,13,152,99,208,75,17,249,82,8,45,58,190,219,232,113,219,166,120,4,165,144,9,89,251,153,72,41,212,207,209,57,132,60,34,157,34,9,17,189,58,68,180,173,5,52,144,32,246,200,75,117,209,217,164,203,184,46,176,226,146,239,64,93,177,97,237,33,22,250,121,22,162,39,185,192,34,223,37,82,133,167,43,235,126,32,177,18,78,183,195,230,157,133,25,55,30,137,53,140,55,172,98,246,101,150,29,145,224,199,208,21,176,62,159,173,112,2,119,96,88,181,91,10,143,208,227,135,222,142,249,148,182,199,188,98,155,101,26,10,69,38,195,6,196,87,236,172,215,254,155,89,115,13,177,111,123,197,38,167,151,99,149,120,221,89,203,236,243,5,248,26,118,164,76,45,0,42,142,38,189,16,155,159,217,38,33,210,220,92,80,93,247,188,154,71,93,2,14,198,187,127,171,154,218,95,162,62,179,91,89,230,241,70,29,238,80,14,162,190,88,240,5,87,86,170,85,110,3,74,44,246,156,217,178,236,42,231,36,108,184,23,36,132,28,49,63,195,245,206,88,53,76,104,177,106,171,23,113,205,139,67,31,168,212,20,155,85,44,36,178,140,217,20,43,33,75,108,90,244,95,173,144,75,90,172,91,91,227,139,90,92,223,82,95,209,226,190,88,254,223,22,175,79,45,196,151,181,152,218,112,121,135,187,240,238,223,179,238,182,121,249,244,47,37,138,216,168,224,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cd3b380e-d84c-4c2a-956e-762203f1b0f1"));
		}

		#endregion

	}

	#endregion

}

