namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: IBulkDeduplicationManagerSchema

	/// <exclude/>
	public class IBulkDeduplicationManagerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IBulkDeduplicationManagerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IBulkDeduplicationManagerSchema(IBulkDeduplicationManagerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("fb400a12-d325-494b-95d3-08ad728af5c2");
			Name = "IBulkDeduplicationManager";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("3066e968-6ad0-45b5-bf2b-b9af469e0d31");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,86,91,111,218,48,20,126,30,18,255,225,136,190,108,82,69,222,91,138,52,232,132,144,198,134,74,251,52,237,193,196,14,88,77,236,204,23,85,209,212,255,190,99,59,105,2,132,75,215,33,85,123,1,251,220,207,119,62,59,22,36,99,58,39,49,131,209,124,182,144,137,233,143,165,72,248,202,42,98,184,20,253,91,70,109,158,242,216,239,186,157,223,221,206,7,171,185,88,193,162,208,134,101,215,221,14,74,46,20,91,161,26,166,194,48,149,96,176,43,152,142,108,250,184,225,60,35,130,172,152,242,14,81,20,193,64,219,44,35,170,24,150,123,231,0,180,233,1,89,112,233,87,30,81,195,37,183,75,180,3,94,165,220,159,17,218,170,185,39,250,113,97,136,66,111,12,134,109,225,239,75,31,51,102,214,146,234,43,152,251,36,65,185,93,179,23,76,152,209,40,101,12,98,197,146,155,222,78,158,169,72,100,47,26,186,22,118,123,8,146,156,40,146,129,192,65,220,244,152,48,220,20,223,112,221,27,126,241,107,175,232,15,34,111,85,59,41,102,172,18,122,120,66,238,65,84,25,59,239,86,43,215,199,142,240,163,54,202,77,186,174,233,211,245,107,161,40,35,50,61,81,210,230,119,72,53,41,52,59,7,32,77,167,88,166,54,19,250,197,163,220,123,173,62,236,42,147,68,51,211,27,214,149,131,102,41,139,13,4,205,177,196,86,180,58,43,249,4,94,121,250,36,247,67,215,50,208,118,99,63,214,74,229,177,224,165,133,222,29,238,37,4,209,143,159,21,94,151,238,116,149,125,135,181,111,225,56,11,86,62,5,122,2,173,145,120,226,102,93,239,67,98,44,167,255,95,114,166,68,224,77,212,217,140,113,128,65,205,48,70,230,117,136,57,83,30,195,141,176,62,8,78,51,196,223,207,199,201,153,134,248,42,246,134,34,190,39,181,201,27,136,27,150,173,8,29,231,116,3,132,101,81,98,247,78,249,232,139,155,210,198,212,67,189,192,169,43,37,225,248,73,125,167,151,96,93,113,5,114,89,52,117,69,111,179,44,64,51,78,57,90,108,145,168,245,187,119,192,190,245,170,28,21,94,119,26,229,38,150,211,80,242,148,254,205,205,249,153,82,13,138,197,82,225,191,145,96,5,255,101,203,35,86,64,202,181,57,43,223,66,186,59,159,127,74,145,119,15,33,127,168,8,136,82,164,216,63,55,60,179,54,117,29,3,161,116,235,136,47,165,76,93,119,247,50,132,252,138,173,180,65,234,0,68,64,183,10,57,126,50,73,117,83,134,155,141,8,218,60,172,65,136,108,34,160,115,22,59,246,211,178,115,228,209,46,98,103,124,171,221,175,203,131,248,239,74,61,116,153,142,93,184,214,167,128,215,220,18,67,246,63,241,46,152,160,225,53,236,247,207,225,157,191,33,124,254,3,209,249,204,108,60,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("fb400a12-d325-494b-95d3-08ad728af5c2"));
		}

		#endregion

	}

	#endregion

}

