namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseOperatorRoutingRuleSchema

	/// <exclude/>
	public class BaseOperatorRoutingRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseOperatorRoutingRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseOperatorRoutingRuleSchema(BaseOperatorRoutingRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("676d3086-0128-45f5-b924-e94e8a374599");
			Name = "BaseOperatorRoutingRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e4f7a9b6-58b1-45d5-9bbc-68954d2de669");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,87,219,110,219,56,16,125,118,128,252,195,32,11,20,14,54,176,251,156,216,42,82,247,178,6,154,77,26,111,246,117,65,75,99,155,168,68,122,73,42,169,55,232,167,45,246,147,250,11,29,94,100,83,178,212,56,121,216,23,65,164,134,135,51,103,206,12,41,193,10,212,107,150,34,188,189,185,154,201,133,25,76,164,88,240,101,169,152,225,82,12,174,11,193,211,21,19,2,243,193,21,106,205,150,92,44,143,143,30,143,143,122,165,166,87,152,109,180,193,226,162,49,38,148,60,199,212,66,232,193,71,20,168,120,186,179,217,109,85,20,82,180,205,43,108,159,29,124,96,169,145,138,163,110,238,56,67,99,104,164,97,12,206,176,30,6,217,84,6,180,144,150,254,162,112,73,31,96,146,51,173,207,225,45,211,120,189,70,178,150,234,86,150,214,240,182,204,209,153,14,135,67,24,233,178,40,152,218,36,97,236,150,193,66,42,88,43,153,18,47,214,145,57,129,128,12,40,160,60,12,40,194,25,84,48,195,8,103,93,206,115,158,2,155,107,163,40,42,72,29,102,135,39,231,48,109,245,175,71,153,160,231,54,158,27,101,29,48,68,208,185,125,55,148,3,204,188,73,51,142,48,129,8,169,194,197,248,228,78,163,34,214,132,79,219,201,48,1,46,180,97,34,117,238,239,251,223,91,87,248,80,95,218,28,62,194,18,205,5,104,251,248,118,152,47,85,172,51,75,173,20,183,184,150,154,211,120,243,44,183,20,178,76,138,124,3,157,112,176,55,227,229,65,32,252,158,25,132,201,138,153,106,245,132,165,43,132,191,210,230,212,197,97,49,237,65,61,43,150,125,71,246,103,108,85,246,122,68,118,120,235,41,52,165,18,45,46,83,149,180,76,190,121,3,2,31,246,129,251,245,132,158,218,218,235,245,40,149,238,225,228,135,34,243,10,252,137,28,157,222,35,174,184,88,81,95,48,153,76,3,67,109,18,31,76,181,245,231,29,167,42,225,243,146,168,248,67,94,230,121,101,169,137,68,71,148,47,166,123,174,76,201,114,152,75,153,195,19,43,97,156,128,81,101,149,190,174,16,40,110,2,40,109,219,105,11,162,153,240,169,224,134,179,156,255,131,218,145,89,37,24,228,34,22,67,71,153,83,52,29,74,112,51,107,166,88,1,130,122,246,248,164,172,151,107,18,131,199,29,243,39,101,61,26,58,192,134,210,58,92,107,136,0,234,251,159,6,201,53,140,198,13,51,175,156,253,50,28,59,174,58,203,180,223,216,236,226,0,233,93,161,89,201,236,192,54,56,89,97,250,69,3,95,236,250,247,3,55,171,192,56,145,26,72,175,190,78,51,71,100,134,194,240,5,71,5,92,3,245,112,126,143,135,166,47,66,138,83,71,7,213,101,86,112,113,71,50,138,115,21,237,85,75,155,195,245,101,174,147,81,154,88,65,143,134,105,82,11,101,235,220,5,72,67,53,247,192,53,158,1,89,47,88,174,157,57,97,86,32,117,49,132,66,170,50,115,233,96,250,31,75,158,109,225,167,89,149,252,123,166,182,179,87,76,176,37,17,67,199,177,61,215,252,185,189,161,187,128,25,93,215,77,146,190,107,58,187,50,187,84,203,178,160,104,251,77,141,159,53,78,150,211,208,137,66,155,107,108,77,157,163,218,233,55,166,189,231,65,89,253,200,247,88,75,135,106,99,197,52,224,215,20,49,35,138,108,31,133,156,23,220,28,154,251,184,243,214,178,31,119,222,206,74,61,40,229,29,30,190,88,0,214,179,79,22,225,125,0,237,199,190,186,29,170,65,165,6,46,12,104,94,148,57,133,128,178,116,16,246,122,86,191,175,89,69,252,201,242,178,217,95,206,224,100,214,92,76,2,120,29,82,110,165,198,245,172,5,126,127,203,4,94,215,116,210,178,206,31,151,175,94,213,2,25,188,227,202,145,224,76,38,178,164,128,126,173,91,120,85,69,223,147,22,7,158,84,216,13,79,191,64,185,6,38,236,157,197,101,1,254,46,177,140,110,147,187,242,215,207,81,89,163,187,216,219,188,117,201,106,171,5,122,95,102,49,158,243,168,1,104,193,62,219,249,103,247,170,207,221,241,117,73,113,123,83,254,68,71,250,200,246,160,196,81,119,183,254,160,16,29,224,246,112,247,45,202,83,112,6,110,16,252,183,2,234,204,196,109,96,255,25,156,253,143,217,168,104,249,254,223,191,182,162,171,53,79,19,230,226,167,66,139,107,54,102,168,226,228,233,179,244,101,119,56,218,186,154,158,102,186,191,253,145,244,47,120,90,191,196,69,233,125,98,33,20,1,32,180,156,80,224,141,85,193,104,48,9,106,136,198,246,191,214,9,167,237,32,120,81,108,246,178,41,150,94,114,7,199,229,23,181,203,53,58,91,73,14,218,119,163,105,70,157,206,154,13,110,236,92,127,151,198,96,26,119,41,107,218,200,125,140,84,63,68,107,237,109,170,127,151,230,125,177,54,155,254,169,111,145,254,15,33,138,228,177,190,149,251,41,232,245,72,41,93,133,25,111,125,22,23,101,215,141,206,207,198,147,223,224,248,232,7,49,174,217,159,185,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("676d3086-0128-45f5-b924-e94e8a374599"));
		}

		#endregion

	}

	#endregion

}

