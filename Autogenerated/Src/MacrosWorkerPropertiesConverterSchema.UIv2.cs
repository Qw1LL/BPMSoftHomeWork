namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MacrosWorkerPropertiesConverterSchema

	/// <exclude/>
	public class MacrosWorkerPropertiesConverterSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MacrosWorkerPropertiesConverterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MacrosWorkerPropertiesConverterSchema(MacrosWorkerPropertiesConverterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("11aefaa3-3064-470b-b19e-8c7ea24ee52a");
			Name = "MacrosWorkerPropertiesConverter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d9c4378b-4458-41ff-9d84-e4b071fcce18");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,85,75,79,219,64,16,62,7,137,255,176,114,47,142,132,54,119,74,130,192,165,20,137,168,41,41,229,188,181,199,97,213,245,218,236,3,106,85,252,119,102,189,118,236,44,9,201,165,151,36,59,207,111,190,121,68,178,2,116,197,82,32,151,139,249,178,204,13,77,74,153,243,149,85,204,240,82,30,31,253,59,62,26,89,205,229,138,44,107,109,160,248,28,188,233,45,151,79,189,176,143,162,96,187,148,94,73,195,13,7,189,77,61,72,77,239,13,23,206,8,205,62,41,88,161,136,36,130,105,125,74,230,44,85,165,126,40,213,31,80,11,85,86,160,92,60,244,126,198,95,160,26,151,201,100,66,206,180,45,10,166,234,89,251,190,131,74,129,6,105,52,169,214,110,36,237,252,72,174,202,2,157,0,72,170,32,159,70,62,207,213,95,3,50,131,172,207,20,77,102,196,148,239,45,61,162,173,246,180,131,52,25,96,170,236,111,193,83,146,186,170,246,21,69,78,201,205,30,147,179,93,120,79,54,130,191,215,59,44,216,103,252,92,51,221,43,79,201,162,129,233,245,33,173,141,224,94,35,62,164,81,66,218,116,110,109,56,44,182,171,214,25,39,107,219,240,233,198,109,52,90,129,113,211,49,122,109,65,33,94,143,107,19,36,250,105,163,108,106,74,117,8,204,68,1,51,216,112,9,47,132,163,39,147,56,246,101,190,171,143,91,24,198,70,110,175,173,145,84,76,177,130,72,220,168,105,100,55,202,138,102,33,69,103,147,198,122,72,204,158,220,113,192,212,102,134,113,203,92,96,52,13,204,14,97,117,14,230,177,204,28,161,138,63,35,97,94,91,249,7,185,182,60,35,215,96,112,251,19,43,140,85,112,89,223,50,185,178,108,5,113,163,20,237,235,38,235,64,241,156,196,189,148,76,167,77,20,122,85,84,166,238,108,70,10,48,152,28,104,26,172,14,44,126,62,51,69,64,63,97,61,174,121,205,5,169,151,233,35,20,236,135,5,85,7,220,208,161,193,156,73,76,171,78,72,212,67,142,198,62,56,134,164,88,165,107,99,19,39,41,133,45,36,189,209,23,226,133,213,122,9,2,3,98,82,28,178,230,154,121,32,93,41,95,185,112,139,57,117,200,168,31,46,47,122,224,230,113,225,218,11,248,208,177,23,38,101,129,45,231,186,148,63,235,10,175,224,147,101,2,65,117,220,69,39,67,226,122,120,222,89,211,139,44,91,115,232,101,227,30,145,174,117,23,167,133,131,29,242,36,96,73,194,179,18,144,52,166,75,188,189,2,190,171,47,144,51,228,37,110,3,182,141,24,196,60,239,72,242,252,252,98,194,2,57,63,15,123,117,240,92,237,93,84,63,243,250,63,221,226,193,241,167,7,174,115,209,196,28,68,153,249,44,223,64,160,132,64,155,102,248,183,114,24,246,225,29,104,178,122,246,245,236,206,127,31,114,168,118,4,238,34,237,56,49,239,189,58,222,227,93,120,73,72,67,183,188,110,6,95,130,195,213,238,234,199,41,227,118,230,220,133,8,131,187,59,33,173,16,225,133,8,19,13,239,68,168,163,253,206,187,195,179,243,112,133,185,105,167,89,239,226,71,201,183,15,190,151,110,10,95,223,0,238,71,194,35,112,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("11aefaa3-3064-470b-b19e-8c7ea24ee52a"));
		}

		#endregion

	}

	#endregion

}

