namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SyncStrategySchema

	/// <exclude/>
	public class SyncStrategySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SyncStrategySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SyncStrategySchema(SyncStrategySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b9d09b96-6a94-42ff-985e-47592470344f");
			Name = "SyncStrategy";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0bd8020-de17-4815-83cd-c2dac7bbc324");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,193,110,219,48,12,61,187,64,255,129,112,47,54,208,58,247,46,205,97,217,82,4,136,129,110,89,119,29,84,155,113,4,216,146,43,201,217,188,33,255,62,74,182,27,59,139,211,172,135,160,166,244,200,199,199,39,10,86,160,46,89,130,240,241,41,94,203,141,137,98,198,243,235,171,63,215,87,94,165,185,200,96,93,107,131,197,135,163,239,104,46,243,28,19,195,165,208,209,35,10,84,60,249,231,206,138,139,215,67,176,43,48,151,98,195,179,74,49,11,62,117,172,240,116,52,250,44,12,55,28,53,29,211,133,27,133,25,101,128,121,206,180,190,167,154,34,89,27,202,138,89,237,206,39,147,9,76,117,85,20,76,213,179,169,70,132,68,225,230,193,95,246,111,250,147,25,240,162,204,177,64,97,24,55,82,68,211,73,7,162,36,101,245,146,243,4,216,139,38,64,98,160,100,202,112,150,67,98,139,14,106,194,61,12,50,19,152,68,164,223,3,81,210,202,48,97,136,236,82,24,84,130,229,205,133,1,211,46,176,44,88,9,26,153,74,182,240,90,161,170,33,165,188,176,145,170,96,38,122,131,245,201,122,188,77,11,137,45,5,196,217,106,248,131,83,170,79,4,94,56,44,60,128,159,166,119,113,28,223,213,244,231,55,106,122,55,40,210,134,232,144,245,130,99,158,18,229,39,37,13,13,28,211,51,156,123,42,187,129,61,107,84,212,181,104,140,226,180,118,18,36,56,210,64,217,21,129,33,244,232,243,29,202,68,181,148,52,39,180,180,221,0,207,112,182,51,219,42,41,248,111,103,72,146,220,24,82,77,247,155,113,198,171,47,225,223,216,165,185,223,216,163,75,103,95,148,231,101,104,172,185,61,79,183,255,236,207,183,18,163,217,202,75,229,255,138,166,82,98,192,188,125,137,118,250,223,120,129,182,133,29,203,43,188,133,74,147,202,220,246,123,112,24,211,64,175,142,150,1,217,156,22,3,153,105,164,79,23,81,77,185,217,5,229,232,81,117,183,135,99,222,113,101,42,50,108,135,128,71,52,78,54,75,195,6,131,176,85,174,193,131,192,159,176,226,218,76,59,196,172,61,247,86,146,165,11,37,11,119,80,151,72,107,201,44,219,113,5,67,255,132,246,172,127,63,232,143,42,188,109,18,246,99,22,96,147,166,180,247,170,66,124,183,77,29,40,4,254,138,105,199,219,134,252,208,225,247,180,74,127,5,225,255,77,121,204,173,99,251,203,242,90,208,198,150,59,84,177,206,214,110,95,124,177,195,12,58,118,33,77,225,164,75,59,237,219,53,241,126,38,112,230,176,95,71,67,33,232,179,208,68,235,8,56,104,254,226,126,78,165,26,235,225,109,49,31,154,24,101,114,98,2,13,181,97,112,255,23,233,104,109,199,20,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b9d09b96-6a94-42ff-985e-47592470344f"));
		}

		#endregion

	}

	#endregion

}

