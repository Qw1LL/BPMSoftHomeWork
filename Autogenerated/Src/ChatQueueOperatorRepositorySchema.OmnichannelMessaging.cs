namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ChatQueueOperatorRepositorySchema

	/// <exclude/>
	public class ChatQueueOperatorRepositorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ChatQueueOperatorRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ChatQueueOperatorRepositorySchema(ChatQueueOperatorRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("75fb7249-d2b1-4ca5-95ff-ae959f6a9366");
			Name = "ChatQueueOperatorRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("ad806488-98f4-482b-bb58-5e43a394961e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,86,193,110,219,56,16,61,171,64,255,129,112,47,54,176,160,239,173,237,133,227,166,129,155,164,78,109,100,247,184,96,165,145,67,172,68,58,36,149,214,88,236,191,239,80,20,37,74,150,229,228,176,23,195,164,102,230,61,14,223,204,80,176,28,244,129,197,64,174,30,238,119,50,53,116,37,69,202,247,133,98,134,75,65,55,185,224,241,19,19,2,50,122,15,90,179,61,23,251,247,239,254,121,255,46,42,52,254,37,187,163,54,144,127,234,172,49,74,150,65,108,67,104,122,3,2,20,143,79,108,238,184,120,110,54,87,82,65,179,106,216,228,185,20,125,251,10,232,231,43,252,128,159,62,40,216,35,18,89,101,76,235,143,100,245,196,204,247,2,10,216,28,0,143,33,213,22,14,82,115,252,115,44,205,167,211,41,153,233,34,207,153,58,46,170,117,99,66,100,122,26,129,122,183,105,224,119,40,126,100,60,38,177,69,29,6,141,108,190,106,154,95,56,100,9,242,124,80,252,133,25,40,57,69,7,183,32,10,88,34,69,118,36,143,26,20,222,133,112,89,36,127,21,173,181,59,120,244,1,68,226,162,86,107,159,9,204,187,81,69,140,240,22,168,36,90,225,56,210,3,116,199,29,228,54,240,132,148,103,137,58,124,200,188,99,103,175,44,250,119,152,229,61,152,39,121,54,19,59,176,10,34,55,96,78,200,106,92,33,81,207,69,129,41,148,32,2,126,86,78,227,14,187,73,105,22,89,85,22,185,24,143,86,223,55,163,223,200,168,142,187,78,70,103,76,60,98,143,197,110,185,222,90,19,84,243,50,201,185,120,20,220,12,153,201,66,197,208,103,249,69,201,28,1,187,135,180,78,241,179,28,77,232,82,59,62,222,97,141,231,82,95,37,183,209,3,240,202,114,183,124,244,150,17,221,244,31,133,174,245,245,115,193,50,103,141,31,27,58,17,93,138,164,222,95,98,254,94,32,112,112,199,162,15,76,97,231,48,160,198,40,51,152,120,102,119,144,154,77,97,250,216,173,197,86,102,80,115,196,164,188,133,228,105,170,109,180,32,137,3,200,77,94,110,219,152,231,110,176,149,157,219,115,233,185,125,123,126,152,174,4,250,182,234,8,202,183,219,187,202,141,59,201,18,77,102,7,139,169,32,37,2,161,231,35,108,219,166,214,210,116,65,210,178,237,144,20,213,70,18,102,216,15,166,193,246,181,211,198,230,118,202,112,125,177,22,51,13,64,98,68,154,151,170,13,65,56,246,29,38,98,160,179,105,233,191,8,122,206,139,228,73,201,213,59,236,12,214,249,56,12,65,66,32,95,222,225,30,173,203,68,211,101,146,108,153,216,195,58,253,38,205,245,47,174,141,30,99,183,112,95,175,142,222,101,220,242,183,205,109,157,76,38,225,13,244,38,21,35,145,245,103,109,199,1,203,50,34,125,235,113,9,180,49,201,179,227,49,144,67,215,153,116,152,177,59,228,57,187,41,120,178,176,249,138,235,57,105,129,60,136,5,158,77,189,115,144,194,198,217,242,91,102,89,83,47,186,110,135,47,76,225,24,209,69,102,176,43,219,166,216,120,141,221,185,75,19,100,143,211,110,62,216,96,233,159,79,160,224,178,220,203,121,211,146,58,86,152,186,216,69,66,55,210,46,142,168,164,71,175,127,65,140,85,189,197,169,136,181,100,135,35,40,50,95,84,39,141,120,74,170,77,124,101,24,23,245,15,150,21,80,29,183,175,235,146,57,158,25,191,210,235,252,96,142,62,105,46,39,250,168,173,64,48,43,195,81,59,13,195,49,182,131,200,102,221,10,51,208,100,229,84,135,14,209,201,239,195,64,97,59,36,31,61,61,143,135,242,181,191,213,178,154,130,142,195,69,121,151,215,221,8,142,39,32,12,199,22,161,254,15,57,151,133,18,96,188,70,220,39,101,108,191,212,33,177,132,3,181,191,70,202,213,156,168,5,125,161,245,159,244,241,0,217,199,178,10,239,29,88,131,206,116,149,73,13,87,153,140,255,30,159,168,190,58,141,125,146,232,179,213,251,170,210,240,81,58,106,28,46,151,214,139,168,66,235,232,203,199,189,168,176,173,187,97,162,221,59,206,221,145,145,36,195,9,80,182,212,178,135,214,125,149,146,87,8,175,122,19,186,4,244,138,168,121,53,14,63,22,135,164,50,48,157,221,110,123,19,247,254,3,161,91,143,20,71,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("75fb7249-d2b1-4ca5-95ff-ae959f6a9366"));
		}

		#endregion

	}

	#endregion

}

