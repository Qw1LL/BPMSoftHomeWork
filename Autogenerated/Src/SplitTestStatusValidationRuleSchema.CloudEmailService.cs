namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SplitTestStatusValidationRuleSchema

	/// <exclude/>
	public class SplitTestStatusValidationRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SplitTestStatusValidationRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SplitTestStatusValidationRuleSchema(SplitTestStatusValidationRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("219a848e-eacd-4e66-a390-448dd194d011");
			Name = "SplitTestStatusValidationRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bbfdb6d8-67aa-4e5b-af46-39321e13789f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,83,81,111,155,64,12,126,166,82,255,131,197,30,146,72,19,236,57,11,121,104,151,85,72,139,90,53,105,223,175,96,200,105,112,160,59,223,218,172,202,127,159,143,131,192,150,61,52,138,128,179,63,127,246,103,251,148,168,209,180,34,67,184,121,216,238,154,130,162,219,70,21,178,180,90,144,108,212,245,213,251,245,85,96,141,84,37,236,142,134,176,254,122,62,143,1,26,163,141,34,73,18,13,187,25,16,199,49,172,140,173,107,161,143,235,254,252,136,173,70,131,138,12,208,1,97,215,86,146,246,104,8,12,9,178,6,126,137,74,230,93,82,208,182,194,104,160,137,39,60,173,125,169,100,6,89,37,140,25,25,118,29,193,243,57,254,145,195,97,9,233,86,200,138,11,117,110,252,219,203,84,172,139,159,193,39,141,165,75,185,69,58,52,185,89,194,67,151,194,59,255,149,225,12,193,230,13,51,75,56,173,183,104,244,165,158,65,196,165,10,111,105,133,22,53,40,238,127,18,186,16,12,215,123,238,75,247,217,49,142,9,162,85,220,161,199,96,141,100,181,50,235,84,49,94,241,244,154,130,43,69,132,76,99,145,132,19,181,60,221,70,25,12,227,53,232,113,2,211,102,163,177,21,25,206,49,144,186,44,125,167,47,137,6,19,206,167,237,245,101,47,192,109,75,16,244,30,222,36,194,55,130,172,127,39,30,229,54,204,157,221,38,5,65,183,56,71,120,177,213,207,77,205,113,140,234,241,209,205,96,243,24,143,151,5,204,207,224,232,14,105,127,108,49,191,109,42,91,43,46,205,226,234,206,202,124,61,15,119,88,214,78,171,223,142,52,15,23,144,36,48,150,102,88,115,143,241,144,167,214,41,85,101,154,15,58,6,33,79,196,47,183,221,209,143,166,140,82,85,52,223,27,93,11,154,123,84,16,158,43,133,87,73,7,72,243,37,188,127,57,65,38,212,140,160,196,110,39,52,97,30,65,159,113,88,18,105,96,54,228,157,69,225,231,158,240,67,2,59,73,11,223,21,222,138,253,253,183,123,16,121,62,157,109,149,253,230,76,154,201,61,202,79,24,20,190,254,111,178,189,232,96,103,179,12,249,130,37,80,136,202,184,203,194,191,147,79,116,234,158,31,226,25,105,72,91,207,226,73,152,163,187,122,168,114,127,251,186,51,91,249,255,7,226,122,116,161,144,4,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("219a848e-eacd-4e66-a390-448dd194d011"));
		}

		#endregion

	}

	#endregion

}

