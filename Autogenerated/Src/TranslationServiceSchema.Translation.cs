namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TranslationServiceSchema

	/// <exclude/>
	public class TranslationServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TranslationServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TranslationServiceSchema(TranslationServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("bc8a0dcf-5d5b-4c7c-9ead-6940b495da41");
			Name = "TranslationService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6d72ca66-8680-4c3f-b4a0-15ba7a19db7c");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,87,91,79,227,56,20,126,238,72,243,31,172,238,75,170,233,134,119,74,65,80,96,53,90,202,84,20,102,30,86,43,228,38,167,173,23,199,206,218,78,161,179,226,191,239,113,110,117,154,11,133,121,105,125,57,247,203,119,28,65,35,208,49,13,128,92,204,166,115,185,52,254,68,138,37,91,37,138,26,38,133,127,175,168,208,60,93,127,254,244,223,231,79,189,68,51,177,34,243,173,54,16,141,246,246,200,203,57,4,150,88,251,127,128,0,197,130,26,205,28,212,134,5,48,149,33,112,255,28,137,55,169,244,26,221,15,88,32,173,214,120,55,55,212,192,142,96,103,169,106,57,173,58,209,66,115,77,3,35,21,3,93,191,183,186,39,50,138,90,121,47,47,240,2,175,126,83,176,66,13,100,194,169,214,199,196,137,86,238,102,74,245,215,185,142,111,193,160,196,24,239,22,140,51,179,189,131,127,19,166,32,2,97,180,231,110,108,96,200,152,188,193,98,169,252,252,32,28,252,141,74,226,100,193,89,64,2,107,73,131,33,228,152,92,80,13,249,110,72,190,214,73,240,240,14,104,248,77,240,173,27,120,148,141,137,199,223,157,183,152,95,67,209,138,99,50,83,54,127,153,155,189,56,219,144,192,222,19,109,148,141,155,163,7,179,157,80,206,126,2,234,192,44,207,193,24,164,152,100,14,247,91,8,251,163,247,137,190,82,74,170,41,218,79,87,112,139,213,109,69,151,183,14,71,74,103,133,167,158,129,8,51,231,170,158,206,148,140,65,25,44,146,22,87,221,48,150,90,148,206,106,107,75,30,77,215,245,232,29,146,186,111,109,103,246,122,43,48,249,170,199,150,196,235,86,78,198,99,34,18,206,7,5,75,239,45,250,172,202,243,45,246,183,57,233,182,249,212,203,5,247,4,60,103,69,163,18,123,115,174,86,137,173,98,175,159,104,80,120,33,50,208,232,15,201,67,229,96,48,72,67,212,235,189,102,127,10,76,162,196,33,81,205,56,240,199,254,29,29,29,145,19,157,68,17,69,163,138,3,199,116,66,75,33,126,73,127,228,50,116,39,169,197,160,3,210,219,156,214,122,58,59,29,39,103,103,121,160,91,82,142,169,235,76,148,205,101,35,129,87,36,224,67,209,204,118,33,122,223,18,213,244,4,1,141,170,39,93,30,252,201,68,136,6,95,34,219,61,139,192,110,253,7,19,236,36,184,12,69,116,11,234,54,180,169,71,20,57,232,119,202,19,184,223,198,96,141,116,118,227,60,156,213,98,244,43,44,83,42,16,96,148,13,93,229,252,98,91,46,61,131,63,114,233,21,198,149,213,92,90,107,99,147,46,198,100,135,135,118,116,154,84,136,87,53,96,120,24,150,14,115,235,11,45,254,148,137,84,92,77,189,166,27,40,55,99,178,51,180,18,142,210,156,107,169,230,200,81,179,170,240,162,144,159,23,171,43,189,94,69,69,230,110,152,54,39,25,158,159,86,235,59,142,249,22,79,111,228,106,212,202,112,223,72,127,88,255,56,244,103,103,123,104,233,220,33,74,34,122,185,90,27,187,162,109,130,76,193,172,101,216,54,62,54,146,133,228,155,248,161,152,129,27,25,164,93,179,224,144,134,59,29,80,158,92,252,131,113,38,26,197,131,26,146,102,202,13,130,41,130,170,38,80,160,121,115,96,252,243,48,244,236,187,65,39,220,248,249,144,204,156,121,109,48,108,194,129,170,7,129,32,29,222,193,18,20,136,0,188,66,195,134,42,156,195,248,24,10,113,72,6,16,38,10,242,88,205,171,167,181,122,233,27,29,63,222,65,36,55,176,39,92,247,7,132,234,125,1,89,176,247,116,249,51,26,60,57,35,30,101,62,173,30,29,183,251,205,108,87,47,16,36,6,221,104,242,250,235,149,192,193,164,108,96,79,28,81,248,172,77,34,81,188,41,225,148,96,71,96,207,213,40,116,73,18,86,194,100,90,9,41,90,215,56,88,59,197,91,174,98,184,254,234,104,205,59,163,219,196,189,1,209,224,237,232,93,173,144,62,85,59,166,73,9,110,218,53,172,109,54,103,15,223,180,98,155,30,122,101,42,76,249,80,170,180,199,110,246,55,114,183,96,110,1,118,46,110,227,226,18,150,191,2,221,229,32,179,35,239,86,62,23,64,67,2,106,130,53,241,174,94,2,136,211,177,10,47,229,195,109,170,87,147,53,69,85,252,193,216,15,5,124,173,250,51,169,77,222,223,135,153,178,255,108,30,162,134,42,66,96,0,215,74,62,31,248,32,176,168,195,222,147,191,250,247,8,194,84,140,149,13,169,172,237,27,25,109,198,170,81,87,186,219,81,151,124,25,119,162,114,167,216,114,185,207,170,189,142,116,150,217,204,27,178,61,28,254,68,1,86,201,53,101,28,123,47,195,114,175,200,209,43,89,50,65,57,127,163,210,59,92,255,253,16,215,179,247,248,161,166,206,147,0,177,93,231,166,54,143,166,129,139,32,141,21,53,89,67,240,164,9,126,217,56,53,165,49,148,130,44,128,208,180,222,194,15,215,88,42,189,169,198,62,230,100,197,157,61,64,204,78,171,135,120,246,63,197,147,113,223,139,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("bc8a0dcf-5d5b-4c7c-9ead-6940b495da41"));
		}

		#endregion

	}

	#endregion

}

