namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MLangContentKitSchema

	/// <exclude/>
	public class MLangContentKitSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLangContentKitSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLangContentKitSchema(MLangContentKitSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("57a8cd79-1a9b-4fa1-91bb-04bde22362c4");
			Name = "MLangContentKit";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("16e592d3-2033-426b-b620-6aa2b1f8eec0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,84,93,111,155,64,16,124,38,82,254,195,134,188,16,201,50,239,174,241,67,147,40,178,26,75,86,253,11,174,176,224,83,225,176,238,35,169,91,229,191,119,225,238,48,96,226,248,193,200,44,187,51,115,51,11,130,85,168,14,44,69,248,190,221,236,234,92,207,31,107,145,243,194,72,166,121,45,110,111,254,221,222,4,70,113,81,192,238,168,52,86,223,186,251,211,128,196,249,179,208,92,115,84,211,143,169,74,245,123,137,5,97,194,99,201,148,90,192,230,149,137,130,216,52,10,253,131,235,182,37,142,99,88,42,83,85,76,30,87,238,254,39,30,36,42,106,82,240,155,107,200,107,9,149,41,53,47,105,220,176,2,33,181,24,115,63,31,247,0,14,230,87,201,83,72,27,202,49,35,44,96,221,231,15,232,172,116,237,116,110,101,125,64,217,156,106,1,219,22,199,62,31,139,108,11,155,41,73,160,116,99,78,55,212,87,230,165,121,9,187,166,21,6,55,141,247,65,80,160,110,92,13,2,229,254,124,92,144,241,234,21,112,141,20,97,45,191,32,247,253,107,215,222,1,116,133,203,34,238,81,100,214,174,161,119,116,14,165,165,73,9,225,26,247,214,130,182,135,149,252,47,42,16,248,14,156,166,153,160,173,172,115,106,70,50,84,98,158,132,163,0,195,120,245,201,241,218,202,129,73,86,129,160,13,79,194,180,231,107,184,186,20,214,50,110,231,166,97,202,145,59,225,234,220,240,62,128,179,121,164,59,26,102,222,215,54,155,136,100,76,250,224,50,25,128,36,3,24,155,213,25,82,114,134,117,77,150,27,212,251,58,243,41,194,133,24,95,144,94,82,214,25,74,63,174,143,192,115,192,63,92,105,53,131,90,239,81,190,115,133,32,81,27,41,20,100,152,51,74,99,52,115,109,172,182,123,157,133,171,103,199,149,53,165,156,227,48,135,179,65,137,105,45,179,222,160,45,92,156,119,146,63,217,30,39,124,25,251,182,94,254,111,92,106,195,74,112,92,100,147,203,46,122,49,60,115,163,235,108,6,237,173,215,230,115,166,47,30,178,116,15,209,27,235,45,3,105,21,103,111,235,156,160,125,77,69,29,144,71,10,26,4,39,216,105,73,6,159,156,102,62,58,201,57,145,61,216,141,10,40,203,104,8,112,151,128,48,101,217,81,4,246,252,67,26,55,77,139,214,93,93,219,152,253,201,238,67,39,194,18,79,111,168,173,14,139,31,255,1,236,49,172,8,210,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("57a8cd79-1a9b-4fa1-91bb-04bde22362c4"));
		}

		#endregion

	}

	#endregion

}

