namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MailingHTMLTemplateParserSchema

	/// <exclude/>
	public class MailingHTMLTemplateParserSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MailingHTMLTemplateParserSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MailingHTMLTemplateParserSchema(MailingHTMLTemplateParserSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("08548dac-6057-4713-9dba-b8db613aee3c");
			Name = "MailingHTMLTemplateParser";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5d774dd3-3f0d-4e5d-9409-9a3b17d3417e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,77,111,219,56,16,61,171,64,255,3,163,189,184,91,67,238,97,177,135,214,241,46,146,117,83,161,117,98,212,70,47,237,30,24,105,108,19,213,135,65,82,141,141,110,255,251,14,57,148,68,217,114,220,0,187,151,88,252,152,55,195,153,55,143,76,193,115,80,91,158,0,187,154,207,22,229,74,71,215,101,177,18,235,74,114,45,202,34,154,113,145,137,98,253,252,217,247,231,207,130,74,225,39,91,236,149,134,252,205,193,24,237,178,12,18,99,164,162,27,40,64,138,228,104,207,18,118,58,250,8,235,42,227,114,186,219,74,80,202,236,199,125,184,243,23,9,107,28,177,235,140,43,245,154,57,207,239,150,179,15,75,200,183,25,215,48,231,82,129,180,155,71,163,17,27,171,42,207,185,220,79,220,120,46,203,111,34,5,197,42,141,166,122,207,114,208,155,50,85,108,85,74,182,69,91,19,9,47,82,182,149,101,98,92,227,208,192,51,237,240,85,84,35,143,60,232,109,117,159,137,132,37,38,172,199,162,10,76,138,218,83,224,185,52,47,52,158,100,46,197,55,220,103,227,14,182,52,96,137,89,103,74,75,19,69,156,175,227,20,10,45,86,2,228,156,107,13,178,96,151,44,76,68,250,250,251,171,31,225,155,199,44,111,177,132,158,77,60,187,121,220,228,157,206,179,56,231,107,152,102,144,163,83,172,7,214,2,77,255,12,199,34,95,71,191,254,49,121,130,245,66,38,13,64,168,100,114,249,37,68,132,47,225,211,32,188,248,9,3,143,64,24,54,167,80,164,148,86,55,118,57,158,81,125,79,100,24,211,175,177,110,206,233,116,167,37,79,180,245,187,40,43,153,192,192,173,108,234,112,94,48,91,193,192,205,99,46,48,50,12,137,198,209,52,223,234,189,61,85,32,86,108,112,225,166,99,117,91,101,217,157,180,203,131,22,172,70,11,48,61,176,99,24,50,236,222,150,50,174,81,105,49,40,224,129,217,29,131,147,153,29,210,134,187,45,53,215,172,202,12,191,11,96,255,116,23,226,117,81,74,184,230,10,94,80,152,193,140,235,100,115,224,218,206,125,4,133,40,24,69,119,45,178,139,222,33,28,142,203,72,110,86,33,165,189,11,154,187,60,13,31,125,226,89,5,14,226,116,202,122,80,219,228,5,77,21,122,182,161,148,96,7,98,37,67,228,202,176,83,167,58,242,214,158,62,90,19,195,179,19,70,63,236,15,253,149,160,43,36,38,89,219,117,156,55,63,135,10,68,18,100,180,64,49,196,182,180,66,101,217,105,134,76,181,193,51,189,49,172,180,105,147,96,212,15,171,108,101,150,149,43,171,68,126,249,141,22,29,139,17,205,160,152,241,156,21,216,248,151,230,28,225,132,24,109,125,70,227,145,93,110,119,211,17,212,164,85,232,62,127,46,193,10,237,107,131,158,110,178,229,245,128,110,64,19,111,215,118,5,84,221,85,24,86,93,196,163,6,88,114,195,155,211,204,239,165,253,2,81,51,248,41,222,187,154,117,61,70,77,128,24,153,95,200,243,234,98,47,128,167,86,221,92,52,46,145,120,1,85,56,18,230,136,138,137,130,221,99,172,191,255,118,64,130,255,174,224,254,110,235,148,174,40,21,30,80,96,75,211,246,126,76,197,106,5,210,240,224,152,154,134,183,22,135,41,235,86,253,44,199,140,161,117,210,115,120,116,138,140,99,15,66,111,152,208,152,61,58,17,87,140,179,175,176,63,164,33,93,194,142,133,127,9,235,2,83,52,38,186,13,217,149,69,181,44,154,52,98,95,24,186,216,57,159,151,67,234,242,120,90,84,57,72,126,159,193,56,246,204,41,89,19,230,103,174,166,242,57,199,178,214,85,67,238,51,155,7,142,173,2,115,142,23,253,53,114,4,239,64,180,125,69,243,152,32,224,168,26,3,82,113,84,32,247,209,219,117,72,234,70,52,61,47,46,219,244,141,97,161,238,118,53,189,209,199,158,11,178,118,73,66,94,171,99,19,215,113,210,28,163,76,136,125,217,163,91,128,246,68,75,185,183,203,3,138,96,200,202,74,251,209,122,119,64,112,143,30,191,214,138,78,186,92,255,24,68,255,140,23,116,200,174,203,11,170,139,121,219,106,46,10,245,30,246,206,173,239,165,45,194,203,151,181,179,192,195,142,204,75,171,125,15,188,181,4,30,116,95,96,67,175,148,205,29,20,144,251,207,228,242,111,132,240,80,123,143,213,185,123,200,250,236,221,227,110,54,211,99,86,37,219,142,115,173,101,91,13,91,82,96,203,243,76,112,187,230,247,8,62,211,234,238,253,159,196,200,115,22,78,62,8,124,19,162,74,116,226,61,45,45,115,122,181,163,150,56,71,167,245,193,113,219,101,196,63,226,213,222,112,0,197,45,78,125,69,56,171,40,126,228,53,101,154,70,64,58,217,14,153,115,33,79,152,91,110,154,182,232,193,241,90,177,253,47,160,143,103,71,255,35,12,9,152,250,211,210,243,224,197,134,144,119,89,218,121,198,58,184,211,143,240,26,20,79,117,140,118,11,15,79,71,243,2,111,16,9,196,123,144,53,161,90,11,242,227,118,119,186,1,109,30,185,189,205,214,238,20,206,252,11,181,114,90,10,229,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("08548dac-6057-4713-9dba-b8db613aee3c"));
		}

		#endregion

	}

	#endregion

}

