namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseIndexerSchema

	/// <exclude/>
	public class BaseIndexerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseIndexerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseIndexerSchema(BaseIndexerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5a51b504-debb-4bfb-bddf-e53665339b06");
			Name = "BaseIndexer";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("3c3a921b-299a-4f38-a040-5c0154a25bee");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,84,193,110,219,48,12,61,39,64,254,129,243,46,9,16,200,192,142,75,156,67,218,174,232,161,88,176,116,187,14,138,205,164,2,108,201,147,228,96,65,144,127,159,44,217,181,156,170,238,46,189,216,208,35,31,249,68,82,228,180,64,85,210,20,97,189,121,220,138,189,38,55,130,239,217,161,146,84,51,193,201,125,46,118,52,223,34,149,233,243,100,124,158,140,71,149,98,252,224,121,75,92,4,81,114,199,53,211,12,213,107,179,31,148,60,240,12,255,26,107,231,230,155,91,235,247,18,157,162,167,83,137,144,12,135,34,65,150,73,96,82,124,150,120,48,0,220,228,84,169,175,176,166,10,173,55,74,107,142,227,24,150,170,42,10,42,79,171,230,252,132,69,153,83,141,80,160,126,22,25,236,133,4,214,100,0,108,110,73,90,114,236,177,203,106,151,179,20,210,58,87,63,213,200,148,210,124,59,57,130,43,45,171,84,11,105,84,109,44,207,121,52,49,60,246,180,189,222,15,252,83,161,210,183,84,211,117,197,242,12,59,93,175,77,243,58,216,168,165,218,230,156,182,200,125,146,15,206,224,220,35,4,114,37,3,217,22,111,103,235,104,62,108,9,151,166,40,6,113,117,233,23,105,35,133,105,104,93,109,83,34,41,52,166,26,179,166,74,237,17,6,4,15,152,206,112,64,189,128,75,56,86,79,127,16,236,248,67,23,120,180,3,52,164,126,39,68,14,247,168,31,148,63,217,223,144,234,74,226,29,167,187,28,179,233,79,133,210,12,12,55,148,58,106,213,59,182,141,147,104,40,215,70,98,67,95,133,139,252,84,191,127,125,137,102,126,51,58,109,71,38,117,69,115,56,10,150,65,125,239,126,37,166,238,231,94,196,105,254,31,207,152,133,208,86,255,145,118,131,89,119,10,18,11,15,12,36,177,127,15,159,58,41,164,95,175,121,56,239,188,17,62,123,123,116,73,224,210,190,196,94,221,222,159,1,239,145,95,175,29,11,212,217,84,163,10,180,112,178,221,90,126,225,248,219,198,33,37,149,180,0,110,246,122,18,57,110,180,114,90,201,50,182,198,176,111,176,40,209,234,229,8,186,110,217,82,33,66,42,113,159,68,193,158,70,241,202,207,210,44,47,59,49,214,255,67,70,133,237,97,250,233,189,71,19,156,133,89,27,162,121,46,174,247,118,11,140,2,205,110,245,134,213,12,116,223,161,125,112,50,190,252,3,158,15,213,134,126,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5a51b504-debb-4bfb-bddf-e53665339b06"));
		}

		#endregion

	}

	#endregion

}

