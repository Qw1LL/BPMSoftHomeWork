namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CopyOrderProductsFromOpportunityOperationSchema

	/// <exclude/>
	public class CopyOrderProductsFromOpportunityOperationSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CopyOrderProductsFromOpportunityOperationSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CopyOrderProductsFromOpportunityOperationSchema(CopyOrderProductsFromOpportunityOperationSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ebfdef75-7e35-474a-b50e-06a84f9be85c");
			Name = "CopyOrderProductsFromOpportunityOperation";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("c8dbc813-f433-4d53-b0ee-3a05b62a07e1");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,89,221,111,219,54,16,127,78,129,254,15,156,55,180,114,235,40,233,176,135,173,137,131,166,110,82,4,104,154,116,73,183,135,174,11,24,137,182,133,201,146,74,82,105,140,38,255,251,238,68,82,166,168,15,203,233,150,135,200,34,239,155,119,63,30,169,132,46,152,200,104,192,200,235,243,211,139,116,42,253,73,154,76,163,89,206,169,140,210,228,241,163,111,143,31,109,229,34,74,102,228,98,41,36,91,236,57,239,254,187,40,249,82,27,156,164,113,204,2,148,32,252,183,44,97,60,10,86,52,43,77,139,69,154,52,141,115,214,60,234,31,37,50,146,17,19,53,133,151,236,86,250,191,179,89,30,83,126,116,155,113,38,4,42,7,58,160,252,145,179,25,188,145,73,76,133,120,73,38,105,182,60,227,33,227,231,60,13,243,64,138,99,158,46,206,178,44,229,50,79,34,185,60,203,152,241,30,152,179,252,58,142,2,18,32,239,38,172,91,16,57,248,191,86,249,33,159,9,69,185,179,179,67,246,69,190,88,80,190,60,48,3,48,157,47,88,34,5,153,166,188,191,126,191,20,184,99,75,212,206,100,148,203,136,198,109,78,41,147,182,140,7,43,23,32,162,146,130,45,47,201,57,143,110,168,100,154,32,83,111,36,64,2,34,36,199,149,185,202,148,184,119,145,144,231,84,74,198,19,50,38,175,6,127,123,159,118,183,127,59,220,62,166,219,211,207,223,126,189,255,180,253,217,30,248,5,7,6,228,121,33,120,235,213,160,54,215,57,240,226,231,251,161,247,215,168,75,131,37,187,135,192,70,13,207,126,26,236,153,216,176,36,84,225,113,130,5,193,132,197,192,100,133,104,21,97,215,4,181,101,46,70,172,69,36,81,8,11,30,77,35,198,139,101,108,88,71,53,116,67,227,156,173,222,47,231,140,164,107,197,88,76,58,27,222,230,81,104,235,63,9,201,55,50,99,114,143,8,252,119,223,109,55,38,206,119,89,220,33,160,205,86,100,105,177,210,164,162,147,132,39,0,18,26,13,218,60,209,217,111,153,34,70,32,27,106,5,228,133,228,122,9,233,13,44,27,59,168,45,32,17,154,208,237,157,54,250,220,178,153,32,0,195,31,120,106,126,110,113,38,115,40,38,215,55,156,130,48,224,67,88,212,209,148,120,133,42,255,68,188,207,227,248,140,31,45,50,185,244,134,195,146,68,75,212,50,140,144,130,19,48,149,221,2,231,41,149,193,92,201,25,53,149,182,45,173,98,24,212,124,193,85,10,39,44,22,108,69,44,231,60,253,74,18,246,181,132,186,163,219,128,101,8,98,94,2,187,83,58,245,236,120,12,135,142,149,234,209,157,164,136,112,132,198,113,185,22,50,213,121,55,141,233,108,163,21,237,47,170,190,188,215,105,26,147,19,129,34,14,227,216,160,109,99,26,219,176,82,122,231,98,205,58,92,110,132,101,27,233,47,130,57,91,208,247,16,101,88,165,129,61,131,248,214,38,96,133,20,205,98,106,243,39,9,100,8,19,93,66,53,229,71,224,130,222,33,95,36,2,242,106,142,226,172,153,43,253,187,124,26,20,110,11,204,113,196,226,176,136,74,42,161,29,97,161,137,139,126,37,156,209,48,77,226,37,249,40,24,135,48,38,170,105,113,94,247,90,152,138,110,100,169,188,111,136,171,195,214,184,205,146,114,199,46,55,122,135,173,72,26,88,214,128,253,25,201,249,37,189,45,186,159,181,233,192,65,67,202,157,189,71,231,97,239,46,194,115,194,146,87,94,77,197,87,71,253,201,156,5,255,24,111,16,112,76,25,59,220,186,144,29,21,99,71,137,34,170,7,23,8,171,156,190,189,26,167,52,161,51,198,21,66,64,7,10,41,136,21,18,176,215,75,76,83,175,185,8,148,69,107,138,237,148,201,121,26,182,149,154,46,241,134,26,129,44,143,153,167,140,92,181,199,6,70,96,171,41,182,54,216,191,77,209,132,38,190,26,238,13,37,116,194,121,34,61,220,164,96,147,31,31,16,245,11,189,188,92,102,44,84,245,243,7,162,207,62,202,60,240,6,39,225,96,72,198,99,71,58,12,188,216,208,227,150,50,186,137,192,89,232,39,111,82,112,225,4,188,246,154,147,157,194,63,227,85,61,241,97,73,145,64,173,120,53,227,97,170,232,255,43,135,19,31,122,255,11,38,37,68,22,79,25,178,112,217,73,217,17,2,136,45,105,48,34,83,10,27,80,101,173,235,158,216,201,244,33,103,124,73,142,83,110,215,136,246,235,232,226,131,103,60,186,161,156,48,241,5,108,197,221,172,38,193,251,158,124,237,192,92,83,72,160,218,7,95,113,251,42,244,169,60,128,173,251,48,254,74,49,82,152,114,96,28,64,3,91,113,28,134,58,97,60,131,180,62,10,29,12,59,73,16,141,215,144,64,180,215,83,248,231,140,7,176,246,221,148,45,179,31,114,216,243,32,34,173,204,176,238,45,115,135,11,172,161,150,201,79,214,150,243,82,255,54,207,207,254,251,124,113,205,248,217,244,53,21,12,41,196,131,164,184,1,60,142,98,216,35,5,10,240,240,125,2,155,140,100,106,20,115,247,28,186,208,5,67,18,79,37,137,154,130,35,52,244,167,145,72,19,44,125,255,232,11,228,46,164,188,149,46,144,239,245,74,243,43,221,190,73,32,108,247,126,104,32,174,117,44,101,171,135,25,175,97,9,220,214,137,143,77,225,190,218,214,15,188,6,113,118,55,231,95,100,49,160,197,211,209,211,178,175,123,80,52,186,195,97,210,104,100,25,107,244,221,219,16,11,186,90,96,1,129,13,176,70,229,141,238,80,52,152,171,246,79,235,24,233,186,183,15,98,122,202,68,45,100,1,20,105,76,36,189,85,226,246,170,195,169,164,113,211,4,45,198,32,200,117,209,141,216,175,249,14,220,108,183,244,235,234,123,136,76,211,130,65,17,95,57,69,140,121,84,5,221,50,97,74,159,65,165,167,29,122,102,89,50,36,59,196,123,177,187,75,158,219,131,58,51,172,200,224,86,97,133,168,122,166,232,163,4,116,116,72,85,234,237,69,80,105,98,175,180,15,233,96,133,198,224,205,168,37,148,13,164,38,5,59,165,190,137,68,128,102,32,156,142,234,65,233,228,213,235,62,210,94,245,97,209,27,200,3,56,141,161,37,235,238,6,250,46,87,139,128,94,174,222,250,200,248,62,102,179,206,42,186,54,99,43,10,152,141,231,191,193,1,0,41,221,202,109,94,133,238,22,216,233,106,73,60,42,117,58,144,144,184,123,219,3,108,82,85,213,114,158,123,78,6,173,251,167,49,226,26,38,140,169,160,223,152,186,194,150,186,149,7,100,151,60,121,2,23,8,234,189,192,125,225,53,132,190,4,34,71,73,93,228,51,71,113,15,0,64,102,43,198,182,138,53,221,166,73,44,187,99,46,132,62,52,183,58,237,44,250,187,158,56,165,64,94,117,132,253,234,89,31,47,54,82,128,231,147,62,210,113,105,54,20,125,165,121,134,61,193,96,83,241,138,165,151,116,125,109,217,210,145,169,73,45,167,214,106,84,215,191,97,225,75,62,23,156,250,113,214,82,179,56,200,58,5,165,211,46,171,230,90,113,110,213,99,42,216,80,80,250,189,227,80,218,142,16,102,197,246,106,226,39,57,231,16,173,13,180,212,210,96,175,225,72,109,228,141,27,245,116,236,5,32,60,128,47,77,245,211,153,19,42,83,177,13,231,254,74,20,237,243,121,63,247,154,227,244,63,44,3,2,111,69,58,28,11,244,61,50,185,187,211,93,184,147,47,101,162,220,221,17,77,209,113,53,178,186,9,169,92,83,148,144,221,128,132,122,104,220,112,249,166,207,12,138,194,57,122,155,134,178,46,10,107,246,13,155,90,97,18,158,161,110,198,231,186,140,242,148,209,165,134,222,48,207,186,135,80,219,75,239,123,24,235,74,175,241,163,225,209,45,11,114,9,215,38,169,1,26,34,231,84,194,149,107,6,223,163,42,31,137,76,212,203,123,236,150,47,135,197,8,126,11,89,16,188,206,27,15,240,170,102,112,160,190,57,25,37,180,132,179,253,157,130,214,254,232,88,84,140,182,172,199,253,80,113,141,84,12,168,8,213,111,100,212,93,75,199,189,140,205,56,169,151,30,48,227,225,18,106,195,37,105,206,23,171,4,240,80,236,126,69,177,191,161,168,110,1,190,216,50,26,204,137,131,6,36,170,151,63,54,76,45,80,82,98,72,201,179,54,101,238,161,220,224,81,29,189,255,23,46,133,226,253,236,31,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ebfdef75-7e35-474a-b50e-06a84f9be85c"));
		}

		#endregion

	}

	#endregion

}

