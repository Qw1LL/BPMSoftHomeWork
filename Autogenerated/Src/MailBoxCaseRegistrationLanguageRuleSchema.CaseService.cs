namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MailBoxCaseRegistrationLanguageRuleSchema

	/// <exclude/>
	public class MailBoxCaseRegistrationLanguageRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MailBoxCaseRegistrationLanguageRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MailBoxCaseRegistrationLanguageRuleSchema(MailBoxCaseRegistrationLanguageRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("deef2fcb-cb20-4c49-ac03-4ae5aaa4fc58");
			Name = "MailBoxCaseRegistrationLanguageRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("ccdb6e24-6ee4-4f5a-ac6d-41fa38f56e68");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,88,73,111,227,54,20,62,103,128,249,15,172,123,145,1,67,238,57,137,93,36,153,56,112,17,119,210,56,211,30,6,57,208,18,109,179,144,72,135,164,60,35,12,242,223,251,184,104,161,54,187,64,123,212,219,215,143,207,70,12,167,68,30,112,68,208,237,211,106,205,183,42,188,227,108,75,119,153,192,138,114,246,241,195,143,143,31,46,50,73,217,14,173,115,169,72,122,213,248,6,249,36,33,145,22,150,225,3,97,68,208,168,37,243,72,217,91,69,172,60,165,41,103,93,116,65,186,169,225,61,83,84,81,34,123,216,11,28,41,46,44,31,36,126,22,100,7,113,161,187,4,75,121,137,86,152,38,183,252,251,29,150,228,25,24,82,217,28,31,49,219,101,120,71,158,179,132,24,181,233,116,138,174,101,150,166,88,228,115,247,253,36,248,145,198,68,162,196,73,163,45,23,40,2,83,72,212,108,161,20,124,108,248,247,176,48,51,173,217,57,100,155,132,70,40,210,209,156,19,12,186,68,183,192,246,227,187,208,13,169,50,131,170,43,204,20,100,247,36,232,17,43,155,193,197,193,126,160,72,243,17,24,215,165,210,190,214,209,158,164,248,119,232,58,154,161,145,166,140,174,122,21,110,160,173,71,170,114,95,169,160,14,40,62,97,65,152,42,4,97,66,178,148,21,234,62,47,92,198,3,118,158,73,68,15,20,196,125,19,64,38,134,60,160,122,199,15,121,143,186,99,157,52,225,90,180,224,98,201,34,104,62,83,245,78,249,69,89,217,190,247,200,158,118,82,52,217,143,116,69,164,4,98,193,28,46,214,23,73,92,20,221,198,218,252,1,99,107,194,98,34,238,245,56,223,196,177,128,56,26,145,89,75,235,156,69,107,162,20,168,200,176,173,51,52,91,9,197,178,211,116,157,163,13,152,121,7,211,118,228,221,183,155,127,88,203,3,17,26,17,244,2,112,5,64,68,226,98,5,220,39,250,68,13,60,193,22,94,91,231,19,23,196,28,162,208,206,172,255,21,62,32,179,92,23,59,162,76,224,239,195,206,205,242,137,76,67,142,118,111,182,219,74,52,17,196,16,238,4,129,42,72,68,205,202,2,226,242,45,8,17,168,139,32,219,217,232,12,64,24,77,231,26,88,218,200,98,41,7,44,112,138,52,162,207,70,153,36,2,226,99,22,153,71,115,104,62,192,85,73,8,175,167,70,218,40,59,92,58,35,128,224,139,103,22,249,94,198,166,120,151,27,48,16,52,56,174,176,205,114,207,16,35,223,6,250,19,140,207,233,195,138,168,61,143,251,32,240,200,105,140,96,156,172,87,25,152,39,196,65,218,31,25,17,57,34,242,109,130,150,247,44,75,137,192,155,132,184,40,230,80,47,163,82,68,15,136,79,112,180,71,129,27,97,203,134,126,54,5,155,121,126,181,252,87,200,23,124,133,101,48,129,165,143,67,61,250,38,83,157,106,153,111,145,129,117,247,245,21,61,144,18,55,75,104,147,193,67,6,9,234,151,200,102,6,28,46,226,101,92,4,99,216,7,15,116,151,49,68,2,198,124,40,94,198,65,135,21,27,22,221,162,160,109,3,140,128,241,240,62,61,168,188,204,93,16,149,9,134,88,150,36,181,148,140,133,23,145,215,82,176,142,90,102,39,136,103,10,29,177,64,216,19,28,151,30,92,249,69,81,2,72,198,23,133,59,68,189,228,7,226,202,252,39,78,178,178,169,65,199,163,224,146,44,12,71,245,247,225,223,25,239,121,117,124,7,208,201,50,118,9,246,45,53,252,141,83,22,140,174,70,147,138,59,241,99,25,135,208,49,232,80,13,97,131,113,248,194,111,132,192,185,219,149,178,1,149,139,122,27,154,221,105,140,154,25,150,174,201,56,49,100,157,75,229,214,187,197,107,160,72,88,23,88,97,6,88,35,38,141,99,197,229,166,183,7,148,111,226,148,178,103,186,219,155,242,109,113,34,221,246,212,214,220,44,53,184,135,98,255,232,191,71,222,157,97,27,66,99,77,220,186,66,57,220,168,250,113,67,115,250,214,165,111,231,124,82,231,36,105,213,121,208,4,144,190,4,94,157,67,215,214,166,203,174,22,111,56,79,80,231,38,154,168,113,99,17,93,101,26,187,216,209,246,82,196,125,206,208,233,54,135,11,202,226,165,123,15,111,115,157,81,208,62,58,93,142,126,8,181,189,180,146,161,125,95,59,91,213,105,97,112,146,92,65,27,26,11,162,162,253,66,240,244,211,109,80,21,106,220,85,102,171,81,253,56,210,91,229,142,38,34,131,14,32,248,223,86,201,162,194,185,199,236,120,120,147,122,207,213,201,240,253,89,44,154,198,245,45,77,20,17,178,47,167,133,97,87,149,211,1,56,109,167,25,62,242,29,141,112,242,25,110,63,251,179,107,134,154,164,53,84,56,82,225,103,225,107,66,94,218,158,27,22,235,234,47,170,246,176,96,16,166,22,9,10,255,41,108,19,149,156,233,21,13,239,223,50,156,76,6,207,98,87,232,170,163,33,96,152,186,230,155,191,33,15,56,101,198,227,255,52,148,238,3,250,220,32,180,227,69,45,16,23,148,15,39,30,250,213,26,210,181,92,103,223,104,167,206,228,246,47,109,51,173,116,75,225,130,221,194,238,21,191,177,137,60,247,24,110,227,244,104,174,223,23,68,44,148,84,14,188,187,216,216,161,108,15,127,105,168,152,71,104,90,191,150,249,145,8,1,138,229,147,89,12,253,233,199,178,251,10,232,62,238,6,47,178,74,255,215,240,145,176,157,218,163,57,250,165,188,147,244,174,185,90,213,112,104,230,35,81,13,128,220,253,80,158,185,14,104,83,187,242,250,206,109,89,43,125,153,120,156,100,231,187,166,159,157,246,187,54,132,25,175,213,197,231,229,82,21,26,205,10,246,197,144,235,238,39,181,23,201,138,55,181,150,148,239,245,167,206,187,183,90,155,150,70,105,207,222,96,229,178,20,4,239,52,171,76,15,236,149,165,250,196,247,127,0,131,124,211,140,205,19,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("deef2fcb-cb20-4c49-ac03-4ae5aaa4fc58"));
		}

		#endregion

	}

	#endregion

}

