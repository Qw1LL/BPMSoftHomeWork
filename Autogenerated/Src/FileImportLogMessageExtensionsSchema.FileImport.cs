namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: FileImportLogMessageExtensionsSchema

	/// <exclude/>
	public class FileImportLogMessageExtensionsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FileImportLogMessageExtensionsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FileImportLogMessageExtensionsSchema(FileImportLogMessageExtensionsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("87d34c7e-96dc-45fa-99ef-988c2f8d340c");
			Name = "FileImportLogMessageExtensions";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,88,221,111,226,70,16,127,166,210,253,15,83,122,82,65,162,166,47,125,33,129,40,71,147,136,211,165,141,146,180,175,149,177,23,110,91,179,235,238,174,147,67,136,255,189,179,31,198,246,218,78,76,26,93,218,23,132,103,118,190,127,51,59,54,11,55,68,166,97,68,224,195,205,245,29,95,169,96,206,217,138,174,51,17,42,202,89,112,73,19,178,216,164,92,40,216,189,251,166,151,73,202,214,112,183,149,138,108,78,188,103,148,76,18,18,105,49,25,92,17,70,4,141,106,103,62,81,246,119,141,120,79,190,40,36,34,249,59,65,214,40,15,23,44,219,76,160,48,254,137,175,175,137,148,225,154,220,111,83,98,142,166,217,50,161,17,16,60,217,122,16,38,176,220,42,98,92,239,221,36,33,35,241,157,10,133,42,206,127,228,203,145,102,122,228,130,134,63,107,98,30,231,33,139,72,226,157,185,96,113,233,4,223,164,9,81,196,59,179,96,146,8,117,19,10,204,181,34,66,94,8,193,197,168,112,233,150,220,102,172,201,182,199,64,250,222,102,137,176,216,38,170,146,180,121,18,74,217,156,181,139,47,138,48,169,43,99,36,198,227,49,156,202,108,179,9,197,118,230,158,141,52,68,156,169,144,50,9,232,234,103,30,75,88,113,1,145,32,33,102,49,225,235,239,53,195,104,180,156,138,115,70,235,184,164,214,149,72,42,196,82,4,145,49,240,180,119,182,82,169,160,15,218,160,19,68,235,49,103,201,22,126,166,6,93,168,253,180,173,226,35,184,204,88,116,122,149,209,120,4,246,64,145,248,17,106,20,136,187,153,118,174,215,251,195,133,50,215,225,113,33,45,4,139,116,162,63,74,100,145,102,77,224,198,250,100,143,56,199,158,142,101,48,132,105,179,33,152,2,35,143,175,24,142,77,91,175,183,107,237,132,160,4,102,48,126,144,130,82,28,133,253,168,155,166,18,92,203,234,154,132,186,232,172,245,150,83,106,233,199,233,58,180,164,211,145,63,31,167,165,185,105,157,202,70,230,145,17,215,103,69,30,115,141,115,156,230,214,57,231,244,55,242,95,98,194,159,91,21,253,134,249,2,96,181,40,45,120,150,190,96,43,94,214,110,148,239,243,14,174,206,199,67,71,95,219,153,230,53,179,55,109,30,56,141,225,60,142,181,133,75,193,55,126,215,13,124,2,164,165,142,188,51,29,249,33,163,73,76,4,200,229,208,181,38,93,193,160,56,7,83,156,0,89,146,228,220,158,32,42,19,236,196,70,97,126,229,50,56,79,83,12,100,240,190,95,216,154,192,175,203,63,241,142,133,31,96,87,168,11,172,75,150,21,252,182,136,247,253,225,73,77,139,78,42,48,20,241,132,53,253,23,124,216,143,32,23,163,76,225,197,170,168,162,68,206,121,134,79,211,82,148,216,97,150,117,22,88,230,217,25,252,88,183,39,248,163,190,79,244,1,52,88,81,183,63,88,42,11,172,48,219,186,10,88,207,166,240,76,19,231,145,237,27,107,103,231,97,203,236,24,232,41,10,212,234,66,18,34,98,209,48,85,75,129,30,6,248,251,254,206,147,219,195,99,136,209,25,19,36,238,159,116,112,231,137,182,126,101,215,34,103,170,139,91,245,233,248,47,156,169,35,220,194,251,204,217,12,46,54,169,218,90,218,164,232,108,125,107,146,40,211,151,97,201,141,154,7,205,136,64,212,30,226,29,118,8,248,153,217,221,28,189,113,185,150,1,234,17,242,118,126,8,117,235,187,91,190,50,17,6,63,249,184,199,133,152,32,246,141,23,26,246,126,49,243,70,121,106,34,209,250,98,176,116,98,118,176,224,115,112,207,173,39,131,206,13,148,103,164,117,187,222,148,23,149,35,242,86,70,78,49,30,191,245,215,164,224,94,108,175,136,250,61,76,50,50,168,216,226,153,2,157,100,187,152,58,151,46,217,208,155,167,21,212,149,135,171,99,123,226,120,231,63,240,191,158,4,222,80,207,186,154,214,14,185,108,188,20,95,210,105,157,17,102,116,167,130,71,168,120,17,87,7,120,81,209,155,252,64,125,28,223,18,12,4,223,251,156,14,156,200,249,89,28,126,84,125,174,99,53,128,46,104,77,95,13,167,70,178,211,82,243,134,3,182,117,190,181,55,76,17,129,17,150,250,109,24,162,76,8,188,68,43,147,207,25,50,119,230,185,121,153,200,1,82,230,232,203,29,235,95,87,224,231,218,85,161,41,226,93,201,198,222,93,210,150,102,86,135,126,215,62,120,213,10,29,63,109,17,214,198,3,146,155,106,65,242,215,197,113,167,29,247,171,37,200,245,253,127,55,69,255,251,125,101,137,175,35,236,176,172,60,255,182,98,62,163,88,166,255,229,198,126,186,177,223,103,220,21,9,102,143,94,84,189,57,200,150,191,207,88,138,113,211,188,24,76,251,165,91,182,63,59,149,132,232,59,114,53,237,183,173,0,253,241,236,116,108,20,52,235,243,114,210,159,185,111,137,210,82,128,198,53,113,11,15,137,122,243,127,6,20,149,79,73,21,76,52,78,147,151,239,44,7,112,84,151,160,138,92,173,212,230,101,238,228,200,18,149,242,235,131,21,243,250,70,21,43,64,91,81,215,224,224,91,86,238,221,179,123,229,243,69,172,183,103,227,198,215,220,165,77,31,98,145,246,15,56,8,241,192,79,23,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("87d34c7e-96dc-45fa-99ef-988c2f8d340c"));
		}

		#endregion

	}

	#endregion

}

