namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ContactLangEmailTemplateHandlerSchema

	/// <exclude/>
	public class ContactLangEmailTemplateHandlerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ContactLangEmailTemplateHandlerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ContactLangEmailTemplateHandlerSchema(ContactLangEmailTemplateHandlerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("3985db98-f44d-4d35-863e-8d80d05730c0");
			Name = "ContactLangEmailTemplateHandler";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("91d5b8ed-2389-4812-9e17-f329888285e6");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,84,219,106,219,64,16,125,86,32,255,48,117,33,40,16,236,119,55,86,161,38,77,13,9,4,146,244,181,108,180,35,123,97,181,43,246,146,162,150,252,123,103,119,37,217,178,211,38,41,20,250,98,179,163,57,115,57,103,102,20,171,209,54,172,68,248,116,115,125,171,43,55,93,106,85,137,181,55,204,9,173,142,143,126,30,31,101,222,10,181,134,219,214,58,172,63,12,239,45,192,224,243,214,233,133,114,194,9,180,244,153,28,222,27,92,83,76,88,74,102,237,28,40,145,99,165,187,98,106,125,81,51,33,239,176,110,36,115,248,133,41,46,209,68,200,108,54,131,115,235,235,154,153,182,232,222,1,224,217,26,193,34,51,229,6,54,201,31,42,109,192,109,16,202,20,119,218,195,103,59,248,198,63,72,81,66,25,42,120,169,0,152,195,200,188,212,117,29,124,135,250,50,226,134,126,135,190,62,11,148,156,26,187,49,226,145,252,211,199,38,61,192,32,227,90,201,182,207,218,71,139,157,124,43,187,87,34,42,123,143,138,167,160,227,12,132,181,206,248,210,105,19,242,196,102,146,199,62,81,209,176,82,196,62,147,226,7,130,194,239,32,8,204,20,73,173,43,242,69,98,202,96,181,152,188,64,195,4,102,69,224,242,144,204,100,105,152,97,53,40,154,163,197,164,100,22,87,124,82,44,233,159,58,46,181,225,148,149,35,141,65,37,208,76,207,103,209,251,121,176,183,104,168,22,133,101,152,188,73,113,79,239,32,102,103,24,129,59,29,95,40,61,191,244,130,67,42,234,12,238,71,241,97,156,238,52,68,205,230,240,64,206,121,143,216,115,129,176,11,89,54,136,5,139,72,235,51,130,230,227,92,167,97,61,178,167,255,73,169,32,137,107,39,69,220,208,246,77,194,236,235,82,252,133,48,41,45,164,42,222,34,77,143,248,39,210,252,110,237,174,209,109,52,127,205,198,81,95,166,133,70,11,229,226,61,146,227,91,69,7,242,181,2,185,142,177,176,78,145,66,232,45,32,94,185,80,61,224,74,51,78,211,177,31,198,210,21,193,195,8,6,157,55,202,22,195,113,218,166,139,45,225,40,10,225,123,192,142,252,250,17,141,33,28,196,5,76,162,167,101,220,182,117,6,171,187,81,129,195,183,244,236,53,125,100,113,218,130,142,43,78,186,134,219,210,77,237,37,186,187,182,65,190,212,210,215,234,43,147,30,207,67,150,34,239,87,133,216,75,10,103,233,20,108,199,50,180,22,227,13,51,19,194,229,67,166,14,38,42,200,15,81,239,22,192,177,98,94,186,216,213,41,156,156,192,202,246,237,80,33,130,231,187,157,30,68,56,219,111,182,239,54,75,108,30,34,82,57,52,168,91,159,91,95,150,104,45,105,66,245,40,47,37,124,220,218,166,29,235,187,101,236,19,60,143,250,76,47,234,198,181,127,216,131,100,29,27,159,126,1,211,4,141,194,57,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("3985db98-f44d-4d35-863e-8d80d05730c0"));
		}

		#endregion

	}

	#endregion

}

