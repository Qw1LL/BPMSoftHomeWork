namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CaseTermStrategyByPrioritySchema

	/// <exclude/>
	public class CaseTermStrategyByPrioritySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseTermStrategyByPrioritySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseTermStrategyByPrioritySchema(CaseTermStrategyByPrioritySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b1c0be72-62da-4bc6-a6d2-aef9ebc51481");
			Name = "CaseTermStrategyByPriority";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b11d550e-0087-4f53-ae17-fb00d41102cf");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,87,75,115,34,55,16,62,179,85,251,31,20,114,129,42,50,220,109,160,42,102,215,142,171,226,13,49,108,238,242,76,3,74,102,36,86,210,144,76,82,254,239,105,189,24,141,120,24,175,15,6,73,253,248,186,213,253,181,224,180,2,181,163,57,144,187,197,211,82,172,117,54,23,124,205,54,181,164,154,9,254,241,195,127,31,63,244,106,197,248,134,44,27,165,161,186,77,214,40,95,150,144,27,97,149,61,0,7,201,242,86,102,46,170,74,240,120,45,161,187,202,62,115,205,52,3,213,110,159,68,146,205,105,9,188,160,242,77,193,229,175,79,159,255,209,192,149,129,20,57,11,250,43,86,193,87,206,52,153,182,123,89,216,76,195,91,130,214,184,82,70,216,160,77,92,53,42,8,160,34,170,254,40,97,131,7,100,94,82,165,110,208,190,130,21,200,106,169,81,1,54,205,93,179,144,76,72,166,27,43,61,30,143,201,68,213,85,69,101,51,243,235,59,84,33,185,81,39,107,33,201,206,203,19,229,76,96,162,136,222,82,77,10,208,104,152,113,179,70,236,196,172,20,121,105,90,13,202,11,162,64,238,89,14,89,112,54,142,188,237,234,151,146,229,222,215,121,164,228,198,98,138,15,39,65,250,145,163,219,61,45,71,145,62,74,40,99,30,11,7,255,167,25,9,38,62,81,77,157,64,154,4,187,241,5,48,249,133,195,246,83,46,184,166,24,169,180,25,81,59,200,217,26,129,251,140,52,164,64,91,38,194,227,16,123,59,41,52,22,103,48,149,184,239,25,144,189,94,200,196,67,205,10,18,194,126,44,136,59,236,109,192,86,5,254,169,240,237,245,72,109,233,18,253,136,37,243,125,154,11,154,235,183,53,95,125,82,177,106,93,94,187,73,190,103,80,22,152,229,69,8,251,66,138,151,223,151,199,56,131,157,133,9,253,246,50,60,108,30,116,86,231,90,200,43,65,62,98,75,50,90,178,127,177,204,41,225,240,55,97,104,130,114,228,43,177,198,70,0,84,1,236,23,9,235,105,255,124,13,247,199,51,87,0,103,194,179,59,59,42,105,69,56,18,226,180,95,99,227,32,90,238,136,173,63,91,161,39,179,71,242,195,102,54,25,91,141,211,6,168,220,40,167,134,223,234,10,184,86,29,133,54,161,231,81,15,190,118,80,88,0,237,114,68,62,49,251,5,131,152,96,90,145,132,70,68,188,252,137,167,51,227,84,13,109,217,220,144,23,116,48,232,234,14,125,157,165,247,135,44,103,52,179,149,248,205,26,154,196,2,179,193,240,246,138,26,124,2,189,21,174,8,217,30,149,221,233,206,45,92,201,63,128,54,148,18,216,247,94,138,42,98,210,65,64,39,65,215,146,39,68,140,51,70,255,65,203,26,146,236,24,10,114,230,108,149,169,44,246,48,23,5,140,144,50,215,180,46,245,192,96,24,118,98,9,232,204,20,48,119,97,16,154,207,129,29,78,13,1,251,49,50,173,98,70,131,246,195,2,71,95,93,241,47,120,225,157,35,11,47,58,179,193,216,192,115,143,231,177,8,49,238,169,180,212,141,153,55,213,29,0,248,84,187,99,239,205,216,66,49,135,197,164,97,213,236,160,112,126,172,75,95,5,179,193,49,62,111,238,120,6,6,81,119,206,214,4,67,174,171,108,37,155,5,138,193,193,148,11,82,212,173,198,48,132,208,51,248,51,3,6,209,117,237,57,182,179,231,22,225,101,248,140,107,135,61,73,160,7,111,205,132,8,144,42,167,81,58,111,227,130,113,130,130,239,65,234,149,120,98,188,198,145,244,238,226,125,155,156,48,6,51,140,225,128,131,176,194,132,183,102,32,47,17,141,131,169,102,243,99,53,178,198,94,32,202,86,60,14,111,95,242,147,113,80,137,108,160,205,191,212,108,185,21,117,89,144,23,75,79,5,193,135,129,1,132,102,173,146,147,233,242,205,158,73,93,211,242,208,137,109,70,211,198,123,171,77,223,151,80,59,242,46,100,243,217,133,232,94,51,204,63,44,236,196,215,91,166,14,83,234,90,6,199,41,161,161,143,57,198,231,148,109,48,187,113,76,218,237,101,4,193,224,59,73,187,159,217,2,171,74,226,133,145,244,13,20,56,35,172,7,221,39,145,243,31,183,189,4,133,108,228,27,63,181,22,8,32,161,13,148,78,174,172,109,220,88,106,154,144,93,104,85,127,179,206,117,220,163,6,16,168,111,30,141,163,189,101,190,197,10,250,189,6,153,142,162,44,22,120,162,156,110,64,142,136,29,192,135,145,235,145,121,94,148,64,173,102,32,158,182,187,13,39,168,111,217,207,133,231,130,65,255,57,145,197,94,46,160,63,204,140,244,89,163,9,103,92,182,106,133,79,89,84,40,124,45,204,101,34,123,22,102,108,244,77,152,177,213,99,152,157,121,228,149,177,32,220,246,209,68,76,199,123,214,62,110,163,186,249,193,117,198,47,84,221,151,116,147,148,173,225,81,243,248,86,207,248,51,17,7,43,196,181,100,138,40,11,7,118,110,78,221,81,47,204,207,48,56,207,95,127,247,44,29,157,241,196,188,141,202,245,93,184,69,185,63,9,219,236,95,68,125,190,26,186,103,215,162,62,238,190,211,236,233,118,187,155,175,255,3,32,18,127,118,170,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b1c0be72-62da-4bc6-a6d2-aef9ebc51481"));
		}

		#endregion

	}

	#endregion

}

