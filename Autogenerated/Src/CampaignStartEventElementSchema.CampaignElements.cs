namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CampaignStartEventElementSchema

	/// <exclude/>
	public class CampaignStartEventElementSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CampaignStartEventElementSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CampaignStartEventElementSchema(CampaignStartEventElementSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("fd74c570-1b1c-4ab0-831a-227a6692b821");
			Name = "CampaignStartEventElement";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d0bba11f-3986-4819-81ab-1d3ddbfc1f48");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,219,110,219,70,16,125,86,128,252,195,64,121,168,12,200,84,218,196,117,98,91,2,108,249,82,3,113,96,196,113,250,16,244,97,69,142,164,109,73,46,187,187,148,171,24,254,247,206,94,72,145,162,40,43,69,250,34,105,111,103,118,206,156,153,89,165,44,65,149,177,16,225,236,246,230,78,76,117,48,22,233,148,207,114,201,52,23,233,203,23,143,47,95,116,114,197,211,25,220,45,149,198,228,120,109,76,251,227,24,67,179,89,5,87,152,162,228,225,106,207,10,52,73,68,186,105,94,226,230,217,96,204,146,140,241,89,26,220,105,38,245,29,253,98,113,203,214,91,41,66,84,138,86,105,253,149,196,25,93,6,198,49,83,234,8,10,24,139,114,177,192,84,95,196,152,208,151,221,60,24,12,224,68,229,73,194,228,114,228,199,118,39,216,173,160,194,57,38,12,208,29,9,138,19,131,202,145,175,231,168,8,255,70,68,72,247,200,80,234,101,239,35,177,10,67,232,90,144,235,168,219,167,125,157,123,197,102,248,121,153,153,149,213,153,114,54,248,40,244,23,174,248,36,198,62,220,160,102,5,154,7,179,88,213,185,189,63,8,53,203,39,49,15,33,52,206,182,251,10,107,60,56,54,253,98,31,174,139,197,58,63,29,138,189,185,120,201,40,133,88,179,84,19,171,183,146,47,152,70,183,158,185,1,132,102,29,148,150,38,64,141,235,86,249,112,145,234,188,194,52,114,216,27,12,201,60,212,66,26,91,214,69,111,202,185,219,234,104,111,143,92,157,48,133,244,195,40,183,243,180,227,185,118,234,148,200,101,136,6,87,207,185,234,185,97,31,210,60,142,221,231,15,182,212,135,115,110,211,137,244,117,114,149,243,168,15,230,115,4,17,77,127,22,159,112,194,211,200,10,170,211,169,39,74,137,236,68,155,49,73,168,110,80,210,82,216,168,129,173,109,181,238,116,124,172,40,108,238,76,224,39,142,43,206,182,5,208,199,157,163,149,138,208,84,31,48,114,91,214,51,206,78,92,71,4,205,167,28,37,136,105,145,109,192,44,13,38,233,154,89,71,162,243,176,32,22,40,37,143,208,210,4,167,246,16,12,71,101,8,172,154,84,201,206,7,49,51,233,118,26,69,214,161,211,60,226,152,134,166,10,237,236,81,69,144,27,221,185,79,249,223,57,2,175,121,165,231,8,104,44,182,56,244,213,228,188,185,89,89,69,186,143,135,151,103,239,223,30,188,57,216,127,127,120,120,176,255,246,242,245,207,251,167,103,135,191,236,159,191,57,56,184,120,253,235,248,221,197,187,203,167,174,45,4,133,240,44,9,69,236,30,97,134,250,24,148,249,120,38,100,100,125,46,162,102,188,54,240,188,16,134,231,44,139,151,230,202,231,76,179,47,44,206,177,103,126,125,66,22,145,191,210,126,21,82,50,202,11,54,28,240,187,172,162,58,234,129,235,112,14,126,50,24,231,210,104,210,22,58,15,211,9,9,167,89,88,142,220,98,69,176,30,226,10,181,97,195,217,242,86,232,50,180,250,151,31,68,56,101,121,172,143,154,75,79,21,149,111,140,49,221,32,202,169,235,152,170,23,74,164,242,103,130,173,151,48,103,105,20,19,5,83,33,169,22,154,86,178,45,234,118,134,142,231,50,85,163,107,91,95,169,23,147,92,78,20,82,69,149,56,29,118,203,242,236,203,182,181,243,155,51,211,29,140,130,147,65,1,208,18,176,109,0,64,44,249,2,84,155,239,221,43,148,148,58,169,235,237,144,215,134,123,148,96,150,167,20,31,202,68,115,197,172,6,178,118,234,120,87,13,62,151,97,191,75,174,137,251,132,228,4,17,233,9,22,38,200,106,27,201,84,227,88,2,41,9,102,216,125,48,199,101,183,70,184,201,207,10,233,70,165,214,138,161,24,180,105,208,39,3,139,49,170,100,91,61,39,236,254,66,226,189,21,2,56,123,181,116,168,239,245,27,156,246,220,192,237,112,226,109,104,190,95,164,184,107,14,193,69,146,233,165,59,190,77,180,99,18,184,225,141,129,137,27,47,188,215,115,166,129,155,233,48,22,105,201,70,232,82,176,220,183,139,132,199,6,32,90,65,123,168,214,166,183,46,222,53,90,197,228,79,146,14,88,212,162,165,119,220,1,235,66,123,155,53,205,250,71,16,34,178,229,127,225,163,170,182,106,175,237,142,86,221,29,180,160,82,101,102,215,222,153,234,39,234,29,170,166,183,6,104,181,101,119,71,183,118,4,161,167,195,227,53,17,202,48,137,140,255,15,97,34,178,122,187,188,94,224,59,30,46,223,25,243,173,79,155,157,245,128,38,159,192,255,175,184,140,197,67,241,70,91,49,150,198,54,128,44,138,128,249,55,4,76,150,96,222,245,44,222,85,26,245,250,88,47,72,149,98,84,175,197,174,230,183,68,182,5,161,233,202,134,206,177,22,213,13,238,59,126,154,11,207,117,139,71,27,196,5,147,128,255,96,152,107,70,255,114,10,204,97,75,84,171,118,221,121,250,11,85,179,50,92,179,227,58,183,43,162,215,41,215,156,197,252,27,22,200,27,110,221,184,140,175,192,94,109,141,229,45,111,95,55,91,159,124,250,23,98,101,237,247,94,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("fd74c570-1b1c-4ab0-831a-227a6692b821"));
		}

		#endregion

	}

	#endregion

}

