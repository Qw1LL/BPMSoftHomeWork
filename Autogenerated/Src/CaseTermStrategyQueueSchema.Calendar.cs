namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CaseTermStrategyQueueSchema

	/// <exclude/>
	public class CaseTermStrategyQueueSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseTermStrategyQueueSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseTermStrategyQueueSchema(CaseTermStrategyQueueSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cbaf17cd-f74c-41e6-afd1-9a0adcb5d9df");
			Name = "CaseTermStrategyQueue";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f69a32ba-7e77-47bd-be6b-d095bbdc629a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,109,79,219,48,16,254,92,36,254,131,97,18,74,4,74,249,204,75,17,43,176,33,141,151,81,182,47,211,132,188,228,90,162,57,78,241,75,81,54,245,191,239,28,219,105,146,38,172,124,161,248,252,220,249,238,185,199,231,112,154,129,156,211,24,200,199,251,155,73,62,85,209,56,231,211,116,166,5,85,105,206,183,183,254,110,111,13,180,76,249,140,76,10,169,32,59,174,214,43,135,44,203,121,151,93,64,183,53,186,228,42,85,41,200,158,237,43,26,171,92,244,239,79,148,13,141,187,31,4,204,48,79,50,102,84,202,35,50,166,18,30,65,100,19,133,249,195,172,248,170,65,67,9,28,14,135,228,68,234,44,163,162,24,185,181,71,145,23,11,179,160,97,13,245,227,110,1,66,164,9,252,196,197,92,255,98,105,76,98,115,84,223,73,3,228,11,255,86,121,221,139,124,14,194,212,122,68,238,75,127,187,223,78,167,52,124,147,32,72,156,115,14,177,33,63,170,128,245,148,124,26,6,60,174,176,237,165,105,219,96,48,3,101,40,68,31,145,46,48,77,34,157,97,233,178,4,158,216,68,223,200,90,228,10,131,66,242,70,226,142,4,196,91,42,251,50,247,161,156,150,176,155,140,217,132,101,84,18,88,181,196,174,170,42,220,127,131,116,26,60,201,6,228,244,148,112,205,88,232,17,131,246,62,249,4,170,17,53,8,45,39,134,4,243,35,64,105,193,73,211,207,66,150,27,112,117,149,2,75,144,39,71,177,221,244,124,247,214,217,113,154,247,17,64,147,156,179,130,24,121,141,41,139,53,43,239,226,151,124,86,10,159,60,197,235,198,227,183,147,68,101,224,129,218,92,171,150,16,157,154,58,229,28,56,86,151,27,64,91,250,211,141,165,239,78,11,116,218,130,89,210,187,202,67,104,15,27,215,28,39,9,101,233,31,16,81,217,105,180,5,173,211,55,145,252,13,168,231,60,217,80,239,15,86,50,114,51,217,151,22,171,50,57,90,187,42,39,67,191,213,188,34,139,84,40,77,89,191,132,214,117,237,88,94,80,65,64,190,32,103,28,94,73,57,107,139,73,252,12,25,69,156,40,90,173,138,234,128,27,202,233,12,196,1,217,189,64,21,178,148,131,161,220,238,201,93,119,113,176,108,51,146,189,130,111,241,9,193,179,240,196,232,60,73,48,79,157,241,96,215,88,119,195,200,252,52,188,158,41,79,24,136,110,167,207,118,179,203,143,50,5,130,99,235,23,224,171,238,142,113,190,2,62,104,6,101,164,174,128,9,76,169,102,170,59,200,133,221,108,248,89,158,86,125,168,8,168,153,108,32,236,76,27,220,34,221,49,105,58,229,163,160,239,122,192,232,42,229,73,80,75,245,128,224,53,6,231,158,114,133,207,133,230,149,14,48,198,161,221,234,85,77,123,58,26,137,244,129,253,164,124,125,78,25,144,160,121,212,78,103,190,99,131,33,123,123,171,178,118,90,3,186,145,0,138,175,188,5,129,183,26,238,30,139,57,184,78,124,167,76,195,137,237,216,40,168,105,39,244,67,188,107,90,156,69,181,65,225,19,54,98,144,166,199,129,41,185,7,80,189,34,222,88,126,87,56,141,188,59,199,131,86,176,247,196,169,223,174,208,189,87,190,230,13,36,83,119,63,120,251,196,137,59,177,231,134,85,76,55,218,191,191,95,123,33,253,19,186,254,166,109,60,116,255,247,105,228,38,110,172,133,0,20,88,197,192,84,228,217,187,135,111,225,190,225,56,150,215,158,191,246,141,115,51,226,2,172,58,189,120,93,157,65,99,238,58,205,143,200,161,209,253,142,117,141,174,229,45,170,254,78,92,102,115,85,180,28,238,1,126,7,97,244,152,91,234,131,48,12,137,147,202,89,243,11,40,170,50,168,161,201,81,121,163,250,8,46,123,82,55,44,255,1,93,98,216,252,229,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cbaf17cd-f74c-41e6-afd1-9a0adcb5d9df"));
		}

		#endregion

	}

	#endregion

}

