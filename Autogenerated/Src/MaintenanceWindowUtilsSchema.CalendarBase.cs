namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MaintenanceWindowUtilsSchema

	/// <exclude/>
	public class MaintenanceWindowUtilsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MaintenanceWindowUtilsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MaintenanceWindowUtilsSchema(MaintenanceWindowUtilsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f67365cc-a9b0-4e5e-8589-85946c60d129");
			Name = "MaintenanceWindowUtils";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5bd8b3f2-ea32-4921-a7e4-a80db761448b");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,109,111,219,54,16,254,156,2,253,15,55,15,11,100,172,147,209,79,3,230,23,96,109,146,193,69,210,100,115,179,126,44,24,233,108,19,145,72,151,164,236,186,109,254,251,142,34,245,46,57,157,63,88,226,241,185,231,142,247,70,9,150,162,222,177,8,225,205,221,205,74,174,77,248,86,138,53,223,100,138,25,46,197,203,23,223,94,190,56,203,52,23,27,88,29,181,193,116,218,90,19,62,73,48,178,96,29,254,133,2,21,143,58,152,11,102,88,71,120,205,197,231,74,88,153,79,83,41,250,228,10,251,165,225,197,27,218,160,173,159,21,110,200,13,120,155,48,173,255,128,27,198,133,65,193,68,132,31,185,136,229,225,222,240,68,231,200,201,100,2,51,157,165,41,83,199,133,95,223,160,217,202,88,195,90,42,56,72,245,104,205,28,184,217,66,90,241,144,192,18,233,176,224,152,212,72,118,217,67,194,35,136,172,245,65,227,103,20,79,250,127,214,215,37,45,213,158,37,14,189,83,124,207,12,14,113,87,224,179,130,191,50,64,121,49,42,139,140,84,100,231,46,247,209,67,188,195,131,116,193,210,230,237,31,100,49,42,80,249,99,12,182,30,232,71,42,16,179,227,251,44,125,160,205,185,223,166,2,48,84,15,89,42,254,101,73,134,51,66,45,130,209,69,129,27,141,109,6,233,71,188,248,129,167,8,218,48,101,242,183,33,138,2,74,60,171,2,220,229,65,17,255,40,203,165,131,214,56,142,183,235,143,136,143,164,92,157,232,55,120,237,247,75,171,180,95,186,27,218,191,219,53,233,122,148,103,37,140,119,165,141,120,42,242,66,251,46,53,173,68,221,41,185,67,101,56,14,164,201,70,188,242,245,27,108,208,76,225,169,142,176,22,87,59,38,160,114,249,36,172,240,185,2,245,122,232,229,109,113,225,247,21,199,36,182,62,187,26,109,22,172,205,134,20,201,17,238,53,42,42,69,225,38,5,124,202,26,235,105,175,206,53,251,122,156,93,115,109,102,131,37,186,88,192,39,238,223,245,244,180,163,195,157,208,24,7,75,193,13,103,9,255,138,26,24,8,60,80,228,41,239,182,251,229,26,204,22,9,138,212,138,10,215,243,81,127,155,143,38,11,215,170,97,99,64,56,59,59,166,88,10,130,230,238,124,212,140,194,104,97,163,4,81,41,32,245,28,157,43,15,117,107,110,49,104,197,183,73,92,116,109,43,234,84,172,61,105,56,171,2,74,0,123,254,31,202,67,112,45,89,92,44,181,107,174,103,42,199,79,220,129,210,121,198,32,52,236,5,197,17,247,76,65,199,255,211,76,129,159,4,86,85,163,189,203,254,206,80,29,73,57,88,229,203,177,37,113,175,65,43,132,99,215,253,246,18,212,249,160,115,237,25,250,41,194,52,84,195,239,21,212,38,24,45,202,65,228,57,174,148,76,131,110,69,149,251,75,50,170,222,73,46,106,134,70,227,240,182,177,38,222,101,76,210,165,190,252,156,209,8,239,225,35,72,137,183,88,119,250,218,201,195,203,47,24,101,6,221,228,15,220,68,133,249,162,152,253,245,24,251,16,15,223,33,254,222,240,99,178,76,77,248,103,28,7,197,202,239,62,249,167,66,147,41,81,165,241,255,213,210,80,95,23,130,11,36,218,148,11,106,239,195,150,180,232,104,182,169,55,124,143,130,46,0,170,60,174,109,203,243,24,129,137,163,109,250,129,47,128,238,39,64,183,195,45,225,104,241,129,12,216,183,87,96,36,68,91,140,30,27,173,157,107,185,83,235,74,16,45,104,90,225,108,18,45,128,175,59,62,58,7,181,164,249,221,117,111,10,210,30,236,192,53,153,36,162,53,69,49,103,170,185,93,183,231,103,203,158,43,67,69,3,15,82,38,176,212,246,210,92,138,78,106,131,242,214,181,158,20,141,87,10,51,19,217,247,252,54,53,116,13,202,123,65,110,43,205,18,187,93,52,91,121,9,25,119,107,122,173,246,173,105,75,45,174,93,208,182,100,198,5,182,172,98,135,29,172,193,122,177,86,195,45,204,191,12,194,43,174,180,185,85,23,184,102,89,98,130,67,83,179,42,250,60,38,92,83,38,115,179,21,194,135,188,16,84,94,193,60,255,160,168,187,88,176,188,199,47,166,77,19,12,242,252,10,175,199,240,11,252,222,71,152,15,45,59,85,186,142,148,195,166,6,165,238,233,2,253,32,106,186,184,204,11,172,242,207,109,158,57,91,179,185,203,219,249,185,123,210,218,50,159,159,247,69,232,251,119,175,107,33,132,116,20,132,237,112,157,82,110,217,105,115,245,196,212,159,167,152,38,173,19,157,28,57,240,19,141,181,44,113,160,254,201,227,164,77,33,201,254,3,139,159,217,179,80,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f67365cc-a9b0-4e5e-8589-85946c60d129"));
		}

		#endregion

	}

	#endregion

}

