namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: FileImportBackgroundProcessorSchema

	/// <exclude/>
	public class FileImportBackgroundProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FileImportBackgroundProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FileImportBackgroundProcessorSchema(FileImportBackgroundProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9711bf07-aff1-4f11-9cef-3bf614f18263");
			Name = "FileImportBackgroundProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,85,223,79,227,56,16,126,238,74,247,63,204,245,246,33,149,74,184,165,156,4,5,118,85,186,5,117,119,145,42,10,199,227,202,36,211,214,183,169,29,217,14,16,177,252,239,59,177,157,164,9,237,162,123,179,199,51,243,205,124,158,31,130,173,81,167,44,66,56,159,93,205,229,194,132,99,41,22,124,153,41,102,184,20,225,5,79,112,186,78,165,50,240,252,199,187,78,166,185,88,194,60,215,6,215,39,173,59,89,38,9,70,133,153,14,47,81,160,226,81,173,83,187,87,184,93,26,206,148,140,80,235,250,117,153,200,123,150,12,135,99,185,94,83,44,223,228,114,73,98,122,39,141,191,20,46,9,9,96,156,48,173,135,80,7,122,206,162,31,151,74,102,34,246,14,165,178,22,105,118,159,240,8,162,66,191,165,190,108,170,195,16,166,95,228,253,228,9,163,204,208,245,217,218,87,144,23,28,147,120,8,51,197,31,152,65,247,150,186,11,40,100,177,20,73,14,151,25,143,225,251,162,130,153,161,210,156,104,18,230,134,233,31,112,102,21,194,25,83,26,131,238,193,248,240,232,104,52,248,176,119,124,113,56,216,59,28,76,254,217,27,141,15,142,246,254,30,13,70,131,201,232,224,240,232,120,220,237,157,108,2,105,67,31,20,213,120,83,98,7,190,39,68,17,42,242,78,183,43,38,24,93,232,43,76,193,28,170,160,91,103,61,74,83,20,49,42,235,213,38,71,87,151,95,51,217,43,52,43,25,235,29,233,250,40,30,36,37,123,167,184,193,107,36,145,50,244,77,14,103,162,148,84,4,31,124,197,252,95,150,100,56,99,92,157,22,185,247,193,19,195,20,213,160,33,122,62,66,234,126,160,245,208,135,201,83,132,105,81,88,128,61,91,135,157,142,79,53,180,0,193,251,238,136,222,138,35,200,40,202,20,198,240,184,162,100,137,159,50,30,224,174,140,31,185,89,121,232,57,97,145,211,105,12,207,219,145,67,27,114,216,210,126,233,246,41,14,251,27,47,77,58,44,15,158,130,91,17,201,117,154,144,155,216,217,7,183,26,21,117,151,112,61,2,89,227,250,154,14,31,112,37,40,51,127,96,170,36,106,34,168,33,144,190,187,233,171,236,36,247,124,210,182,162,124,207,218,206,55,26,221,27,79,99,103,232,175,165,49,153,54,192,201,176,234,156,243,252,118,26,7,21,74,120,35,231,70,17,245,65,175,15,70,101,158,179,14,95,64,169,20,206,169,128,50,114,122,70,245,101,37,78,224,190,21,126,254,132,183,20,167,130,81,206,15,85,93,116,20,154,76,9,135,244,82,165,142,9,174,169,247,234,232,109,220,23,137,124,156,184,151,243,124,30,173,112,205,252,181,72,100,103,247,246,128,233,50,140,81,129,206,77,94,167,230,161,62,149,33,255,217,14,249,58,19,162,40,200,223,132,236,123,73,101,162,232,157,118,33,56,205,230,55,140,125,177,185,161,85,144,238,227,8,41,149,254,171,90,218,89,189,77,228,255,83,147,180,72,52,13,28,162,184,174,165,98,12,57,241,228,137,216,43,250,71,135,99,26,90,6,183,41,5,219,132,55,121,74,187,33,97,2,227,107,36,238,106,157,29,105,85,179,97,42,22,50,240,97,53,50,126,123,216,217,93,225,30,247,247,247,225,148,139,21,237,51,19,75,90,32,10,23,103,221,205,5,209,221,255,104,121,116,11,198,210,232,158,240,205,158,255,204,237,137,169,252,84,219,94,233,131,188,255,143,158,105,24,86,172,111,178,172,48,149,154,19,104,78,68,11,124,124,53,54,174,43,133,160,137,214,123,53,8,176,61,239,138,238,174,1,138,205,113,71,211,178,28,8,213,64,11,188,171,5,109,109,22,173,32,216,28,46,77,143,192,197,110,180,94,217,0,134,178,241,199,206,206,241,217,230,238,119,35,219,7,216,121,129,136,153,34,194,45,27,164,234,178,29,27,107,215,50,170,157,215,13,187,189,174,156,180,41,36,217,47,111,54,175,133,116,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9711bf07-aff1-4f11-9cef-3bf614f18263"));
		}

		#endregion

	}

	#endregion

}

