namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SchedulerUtilsSchema

	/// <exclude/>
	public class SchedulerUtilsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SchedulerUtilsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SchedulerUtilsSchema(SchedulerUtilsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cbe27062-ee04-4d3f-b974-665da1f30d8d");
			Name = "SchedulerUtils";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("90e8157f-4651-4349-83a7-f0455fc70915");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,86,75,115,219,54,16,62,43,51,249,15,59,202,161,212,68,67,245,156,74,154,81,100,39,81,90,203,110,228,140,207,52,185,164,16,147,0,7,0,109,171,25,255,247,46,94,164,72,43,113,123,200,69,34,22,251,248,240,237,3,224,73,133,170,78,82,132,247,87,23,59,145,235,120,45,120,206,138,70,38,154,9,254,250,213,247,215,175,70,141,98,188,128,221,65,105,172,254,24,172,73,191,44,49,53,202,42,254,136,28,37,75,59,157,191,155,68,234,127,134,235,120,83,213,101,124,145,232,116,143,82,117,187,29,132,170,18,252,148,92,226,105,105,31,245,15,116,62,36,169,22,146,161,137,72,26,111,36,22,164,12,235,50,81,234,29,236,8,76,214,148,40,191,106,86,42,171,49,155,205,96,174,154,170,74,228,97,233,215,23,168,247,34,83,144,11,9,15,66,222,153,40,15,76,239,73,17,17,82,137,249,98,188,105,125,141,103,75,248,38,110,65,39,234,78,197,193,229,236,200,103,221,220,150,44,5,165,9,121,10,169,193,242,12,202,136,146,64,191,45,226,43,41,106,148,154,78,242,142,190,217,125,162,209,41,212,110,17,188,109,86,117,221,250,186,145,9,25,117,190,253,122,177,116,4,56,114,14,148,66,61,63,97,183,140,38,142,181,209,27,228,153,195,209,7,229,137,33,68,246,68,110,115,200,160,21,156,97,137,26,21,136,50,51,228,88,94,158,19,227,36,117,34,147,10,56,85,233,98,76,186,91,250,24,47,63,19,163,70,20,207,103,118,223,170,247,137,188,23,44,243,129,46,203,140,12,84,164,180,52,201,242,94,38,96,42,123,52,242,203,120,189,199,244,110,37,139,166,66,174,183,77,89,94,202,155,61,211,184,51,205,17,153,104,34,143,130,173,225,130,108,251,254,57,62,192,95,76,233,185,11,180,132,239,33,22,60,57,131,167,95,71,138,234,88,81,160,5,100,214,221,255,35,168,7,62,248,29,240,164,78,17,117,94,213,250,48,224,72,5,146,186,102,0,213,126,45,134,117,24,111,56,1,227,41,122,35,139,133,80,253,137,7,139,133,254,21,89,181,28,251,45,91,149,199,232,62,8,121,158,164,251,128,194,148,183,195,63,250,40,69,83,251,153,211,122,46,142,132,228,254,148,78,108,133,52,95,116,194,184,106,75,192,197,29,121,104,241,42,203,190,36,188,192,77,190,21,250,252,145,32,82,193,133,35,154,166,114,222,84,116,28,49,80,228,203,99,212,25,184,196,216,172,248,8,47,87,80,96,148,242,191,71,98,234,81,131,108,56,136,220,174,11,118,143,220,48,25,183,165,134,6,166,105,9,230,185,87,112,139,52,215,16,234,50,225,220,236,24,190,5,199,255,90,140,141,66,73,76,113,119,31,140,151,215,20,216,200,32,109,133,189,146,252,113,139,219,228,121,232,6,244,75,86,231,143,152,54,52,192,92,76,51,114,209,75,126,110,234,180,8,215,21,93,92,34,27,47,221,63,75,153,62,60,163,238,55,162,86,178,162,160,3,69,21,227,13,145,56,121,169,197,66,86,182,148,143,47,13,143,190,246,40,178,236,116,203,41,244,135,212,20,54,159,187,179,25,105,248,158,186,242,99,92,195,224,8,161,97,89,14,209,96,11,230,240,123,216,30,73,212,141,180,87,165,45,43,211,116,39,174,11,117,188,174,79,117,238,79,187,124,104,62,104,115,122,66,24,62,54,60,23,144,54,82,210,68,49,107,50,236,243,18,175,187,77,223,42,142,39,123,95,186,70,63,102,199,52,220,245,161,198,104,18,175,148,194,234,182,60,208,203,163,100,57,195,204,104,123,204,196,237,25,82,91,151,182,96,78,160,93,75,164,235,212,222,143,164,27,181,209,166,93,130,6,64,111,232,73,96,223,83,177,221,118,84,31,29,205,137,129,211,220,156,82,49,53,97,144,108,174,125,97,133,2,91,128,151,188,111,88,153,181,88,162,137,115,25,223,208,155,99,147,145,87,42,212,14,24,188,133,177,183,27,7,205,157,166,55,215,74,71,103,100,126,205,42,188,204,115,133,58,222,138,7,51,181,46,92,29,15,75,101,18,172,109,248,48,102,187,1,21,210,109,104,33,46,232,68,52,41,252,235,174,123,17,198,159,18,181,223,153,23,133,7,101,46,197,112,194,167,99,2,252,96,27,60,46,156,180,47,36,217,191,112,251,51,25,181,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cbe27062-ee04-4d3f-b974-665da1f30d8d"));
		}

		#endregion

	}

	#endregion

}

