namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ESSearchColumnNameProviderSchema

	/// <exclude/>
	public class ESSearchColumnNameProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ESSearchColumnNameProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ESSearchColumnNameProviderSchema(ESSearchColumnNameProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("affbec52-d465-4d51-b908-721b11c940ab");
			Name = "ESSearchColumnNameProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("3c3a921b-299a-4f38-a040-5c0154a25bee");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,81,111,155,48,16,126,166,210,254,131,69,247,144,104,21,121,111,154,77,205,150,117,145,218,42,26,219,211,52,85,46,28,137,53,48,145,109,218,70,89,254,251,206,24,130,33,56,109,246,146,22,124,223,249,251,238,190,179,225,52,3,185,166,17,144,233,226,46,204,19,21,124,206,121,194,150,133,160,138,229,60,184,73,243,71,154,134,64,69,180,122,119,182,125,119,230,21,146,241,37,9,55,82,65,54,238,60,35,56,77,33,210,72,25,220,0,7,193,162,38,198,206,133,129,69,198,127,42,150,202,38,160,161,32,160,255,109,240,149,70,42,23,12,122,80,118,122,92,197,245,115,1,75,164,66,62,167,84,202,75,50,11,237,189,239,81,249,66,228,79,44,6,81,70,143,70,35,114,37,139,44,163,98,243,177,122,158,33,82,177,136,200,18,72,30,169,132,152,176,108,157,66,6,92,149,37,34,121,130,48,0,18,9,72,38,254,220,181,135,63,170,147,94,141,172,93,126,125,129,132,22,169,154,50,30,163,154,129,218,172,33,79,6,206,52,195,225,111,68,173,139,199,20,105,69,90,216,17,93,228,146,56,19,97,22,108,39,254,54,101,194,174,41,202,21,150,106,33,216,19,85,96,214,215,230,129,8,160,113,206,211,13,249,70,229,42,4,117,37,149,64,202,31,17,152,101,5,103,81,89,143,47,160,40,118,149,76,52,212,227,240,124,16,190,245,113,39,133,141,108,225,252,11,226,95,71,81,94,240,206,251,221,216,38,17,105,146,196,164,34,183,121,254,167,88,27,109,97,145,36,236,133,76,136,207,98,223,244,223,59,7,30,27,113,109,165,95,25,164,241,171,50,127,74,16,200,148,27,67,147,135,162,245,60,238,197,56,60,78,30,150,78,243,31,35,90,182,68,20,218,243,154,110,217,245,138,173,113,128,187,247,131,14,253,54,251,33,209,179,236,121,29,81,88,190,30,149,158,139,61,134,59,4,7,243,210,75,81,57,199,222,238,184,202,59,80,171,220,217,143,170,215,211,130,165,113,143,211,202,94,14,170,160,132,165,10,196,15,156,161,139,26,23,151,81,97,180,130,140,234,250,212,202,159,168,176,194,111,10,22,107,53,248,39,88,80,33,97,208,172,13,199,123,64,180,47,51,6,207,194,253,196,4,149,235,23,120,6,176,23,19,207,18,50,232,110,48,105,207,74,137,151,193,98,149,115,208,65,243,184,68,122,127,255,146,183,33,195,187,208,224,106,85,158,197,240,195,132,188,247,131,109,183,0,187,135,181,222,111,107,211,191,47,178,71,221,246,102,144,118,122,134,122,19,158,130,222,17,72,37,156,194,77,193,139,10,244,79,157,161,252,21,160,10,193,173,242,219,182,234,51,138,237,13,219,156,213,73,110,30,108,43,116,153,96,127,237,208,160,89,25,247,98,48,190,51,75,193,140,43,166,54,102,249,142,114,186,4,129,151,162,170,39,99,186,209,217,6,7,254,108,220,211,119,174,234,251,25,255,225,242,16,184,247,64,85,173,87,38,198,86,103,38,198,65,165,221,196,70,120,85,209,73,11,23,152,183,250,250,87,149,194,214,78,205,65,85,101,63,156,43,215,105,163,83,94,167,140,214,210,205,82,155,118,157,180,149,240,189,191,117,206,234,174,199,132,193,182,129,239,231,160,223,130,198,159,71,140,104,210,158,96,68,251,189,237,160,255,54,88,171,252,223,33,1,1,184,120,208,229,230,60,220,247,213,69,229,228,30,31,180,216,222,40,152,75,115,143,107,19,154,90,127,58,234,1,188,37,244,215,147,121,107,12,97,231,187,112,13,238,208,36,191,124,131,193,220,249,236,58,84,234,14,156,17,252,200,111,243,103,16,115,142,194,25,122,110,96,34,143,216,228,141,6,209,167,130,67,157,190,34,94,109,117,223,9,97,59,180,181,103,223,244,11,11,232,58,77,106,224,73,55,255,225,167,77,85,30,236,73,247,19,231,245,58,217,52,93,4,123,168,85,239,218,108,119,255,0,88,24,231,200,36,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("affbec52-d465-4d51-b908-721b11c940ab"));
		}

		#endregion

	}

	#endregion

}

