namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: WorkingDayCountTermSchema

	/// <exclude/>
	public class WorkingDayCountTermSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public WorkingDayCountTermSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public WorkingDayCountTermSchema(WorkingDayCountTermSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("d2360fa7-9b78-4b00-93bb-04fa3ca5e42c");
			Name = "WorkingDayCountTerm";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("761f835c-6644-4753-9a3e-2c2ccab7b4d0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,86,77,111,219,56,16,61,171,64,255,195,212,189,200,104,87,78,174,109,236,69,234,164,69,128,166,9,224,44,114,40,122,96,36,218,38,34,147,90,146,178,227,22,254,239,59,67,138,146,44,203,201,98,129,237,33,142,72,206,199,155,153,55,67,74,182,226,166,96,41,135,79,183,215,51,53,183,201,84,201,185,88,148,154,89,161,100,50,101,57,151,25,211,230,245,171,95,175,95,69,165,17,114,1,151,79,150,75,131,199,230,99,189,55,219,26,203,87,221,53,90,203,115,158,146,41,147,124,225,146,107,145,30,200,124,21,242,239,102,179,23,7,30,163,192,91,205,23,184,128,105,206,140,129,15,112,175,244,35,170,92,176,237,84,149,210,222,113,189,114,114,163,209,8,206,76,185,90,49,189,157,84,107,39,1,22,69,224,97,11,27,175,9,25,219,154,36,104,140,90,42,69,249,144,139,20,82,231,169,199,15,122,255,196,12,111,249,141,48,63,248,91,131,188,230,118,169,50,243,1,110,181,178,152,2,158,249,243,34,44,65,173,185,214,34,227,176,86,34,131,175,106,129,201,78,203,220,5,124,37,17,234,154,229,38,190,186,148,229,138,107,246,144,243,179,171,80,14,132,50,113,224,223,67,166,16,42,7,43,86,252,124,69,112,134,64,149,138,34,49,135,152,160,181,172,162,143,153,85,154,195,155,49,200,50,207,131,104,36,249,6,14,101,23,92,31,179,48,244,122,81,242,89,228,121,147,31,211,19,66,236,113,182,0,82,177,163,104,71,191,187,110,82,66,46,62,11,109,108,159,181,118,14,40,5,191,55,220,243,44,115,200,190,41,89,69,125,36,226,158,32,223,34,108,79,142,94,166,32,165,110,29,235,252,105,151,196,110,227,11,183,6,236,146,195,134,243,71,3,204,229,19,172,130,5,245,22,179,156,200,124,200,102,191,83,48,205,86,32,177,227,199,3,170,201,96,18,82,233,251,224,108,228,36,142,43,248,242,13,38,119,8,32,13,170,30,195,161,178,230,182,212,210,76,188,18,168,185,199,140,130,225,164,22,229,79,41,47,40,129,144,106,62,31,15,206,245,2,41,47,237,101,216,119,46,177,142,12,255,164,218,239,222,179,81,173,238,44,86,157,91,55,151,64,231,152,182,123,114,238,218,245,197,142,34,141,38,220,154,95,184,187,105,136,14,99,239,222,155,196,79,24,79,224,13,254,79,174,76,67,142,138,5,196,205,61,221,49,156,212,100,180,75,173,54,64,148,60,136,59,30,28,143,123,208,102,88,180,198,74,184,252,250,57,55,134,248,52,131,119,173,48,96,212,70,95,233,250,74,64,140,177,13,227,107,102,151,201,148,139,28,101,226,198,214,208,203,238,158,97,229,121,106,75,150,139,159,45,86,144,99,152,43,77,59,161,61,254,71,110,90,126,135,227,197,41,5,111,80,136,181,218,231,101,151,26,110,214,212,224,41,47,49,242,15,94,226,199,69,229,14,151,254,35,148,178,59,154,2,71,220,196,184,209,23,124,206,202,28,201,66,84,201,234,171,53,152,75,232,131,168,145,181,55,90,12,34,114,85,188,170,175,7,207,191,125,66,249,170,182,217,65,214,102,5,147,96,44,211,54,40,123,120,135,38,175,133,140,5,97,20,201,140,228,247,32,84,208,232,231,102,78,113,78,246,141,214,40,158,155,225,205,124,140,28,81,170,60,121,222,199,216,10,223,127,192,47,151,193,93,207,28,237,229,96,112,211,84,133,238,249,192,199,223,50,22,93,107,55,35,57,48,159,31,159,141,181,35,186,28,59,147,177,75,214,154,117,117,164,255,113,144,29,123,104,84,207,137,70,254,99,61,89,240,21,100,169,214,85,157,238,105,40,29,159,121,201,236,81,20,113,107,244,252,1,167,67,223,4,113,203,40,162,189,153,55,79,7,23,219,56,184,234,97,37,123,138,55,142,150,27,145,92,202,108,127,132,5,181,222,166,162,91,59,238,113,247,242,100,171,239,91,42,16,148,82,88,243,111,169,20,168,183,127,93,62,207,166,2,223,199,248,18,240,42,213,226,56,123,238,106,76,144,86,119,240,115,4,170,46,66,210,250,139,148,154,151,84,135,60,1,235,123,104,19,44,100,52,84,100,18,0,6,94,81,77,53,55,56,225,176,140,39,190,58,120,3,112,150,46,33,166,195,2,33,116,149,220,84,41,252,156,193,90,109,233,169,86,80,121,105,17,94,93,149,213,119,116,212,72,226,204,171,171,252,77,109,220,222,159,112,130,207,168,211,246,236,171,8,226,109,180,11,222,121,142,249,221,253,205,221,63,19,243,151,163,31,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("d2360fa7-9b78-4b00-93bb-04fa3ca5e42c"));
		}

		#endregion

	}

	#endregion

}

