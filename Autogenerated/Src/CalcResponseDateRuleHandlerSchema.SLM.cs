namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CalcResponseDateRuleHandlerSchema

	/// <exclude/>
	public class CalcResponseDateRuleHandlerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CalcResponseDateRuleHandlerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CalcResponseDateRuleHandlerSchema(CalcResponseDateRuleHandlerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cf92978c-b250-40c8-8c48-5699a7bb22e2");
			Name = "CalcResponseDateRuleHandler";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b11d550e-0087-4f53-ae17-fb00d41102cf");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,85,219,110,219,72,12,125,86,129,254,3,87,5,10,7,48,228,247,174,99,32,113,54,89,3,219,93,35,73,251,82,244,97,34,49,246,236,142,52,194,92,92,24,65,255,189,156,155,36,95,123,217,135,92,134,195,57,36,15,121,168,134,213,168,91,86,34,92,47,223,63,200,103,83,204,101,243,204,87,86,49,195,101,243,250,213,203,235,87,153,213,188,89,193,195,86,27,172,127,223,59,23,55,204,176,3,227,92,10,129,165,67,208,197,29,54,168,120,217,251,244,145,234,90,54,199,236,10,143,91,139,155,235,19,23,127,52,134,27,142,250,196,245,45,43,141,84,39,238,7,245,22,115,38,176,169,152,114,142,228,250,70,225,138,204,48,23,76,235,119,48,103,26,239,173,192,171,182,21,28,149,119,105,237,147,224,37,148,206,131,28,68,121,79,132,82,221,72,196,120,231,63,89,83,9,84,240,14,22,233,125,52,209,107,71,111,230,126,82,164,91,142,162,162,80,75,197,55,4,224,67,100,109,56,128,66,86,201,70,108,65,27,69,53,124,250,12,76,8,226,218,214,141,134,75,104,240,75,127,243,2,249,3,170,13,47,113,65,29,201,199,221,113,73,92,184,35,69,32,74,204,214,95,17,134,171,255,159,13,170,202,98,14,95,67,253,217,27,98,35,100,22,207,137,16,170,208,40,235,88,117,201,122,14,98,174,129,143,51,76,140,62,104,84,4,208,132,9,1,187,115,188,0,207,73,182,231,116,185,231,230,26,153,125,61,159,228,82,201,22,149,27,139,163,41,238,69,216,59,134,44,86,104,124,164,174,5,58,26,190,19,250,61,154,181,60,232,227,100,50,129,169,182,117,205,212,118,150,12,115,234,42,1,183,76,145,22,13,42,13,207,82,1,253,83,83,191,75,162,209,138,48,155,29,194,100,31,98,234,31,67,67,0,151,57,58,41,108,243,153,151,196,118,58,241,119,189,171,66,99,85,163,103,55,220,215,73,48,240,133,155,53,148,126,140,60,134,6,106,84,50,108,152,176,168,139,233,36,61,28,14,100,15,50,13,131,55,6,249,244,47,49,56,131,59,52,75,133,154,178,137,3,58,10,9,65,200,47,181,121,195,20,240,42,184,124,116,161,168,211,193,131,22,135,121,220,182,56,188,156,222,89,94,205,70,249,162,202,47,66,95,206,100,192,212,202,214,132,149,164,113,198,53,228,146,189,228,78,161,4,62,222,205,137,154,77,183,78,19,244,135,186,131,172,92,195,200,165,30,72,250,155,72,3,222,12,212,152,202,203,66,209,15,229,26,107,22,238,18,177,93,157,225,178,136,47,139,91,222,84,215,91,7,57,234,209,99,181,25,127,134,209,66,119,169,241,42,250,140,19,173,93,224,44,212,22,163,29,82,59,40,47,98,164,24,89,71,92,113,85,165,0,197,192,223,37,52,30,2,167,151,145,39,255,59,140,75,223,132,161,106,142,235,96,141,229,127,64,5,70,126,218,48,61,126,22,133,100,21,86,5,252,160,4,2,66,146,64,4,60,80,194,47,136,102,161,7,178,224,213,9,85,60,73,41,96,183,75,39,199,96,12,71,101,17,217,139,228,195,111,52,193,86,8,120,251,54,117,112,0,111,241,47,79,79,106,227,197,207,45,168,193,98,60,218,23,202,143,118,68,43,57,245,194,109,38,69,155,28,214,110,149,147,132,254,255,82,138,203,120,35,121,5,225,3,113,124,81,184,143,200,35,39,157,105,195,148,113,39,26,231,221,157,93,204,173,82,244,202,89,253,136,135,99,122,57,138,99,218,235,246,106,176,33,14,247,85,140,31,30,185,197,240,72,59,121,30,23,50,122,90,150,158,21,236,255,13,155,230,140,243,222,199,111,144,18,5,247,95,75,95,164,87,106,124,82,220,74,85,98,135,229,128,117,236,117,87,192,184,167,37,66,146,213,47,151,93,165,231,195,111,50,173,185,97,208,226,158,246,154,75,202,29,78,14,81,180,237,206,21,217,190,1,247,144,140,170,74,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cf92978c-b250-40c8-8c48-5699a7bb22e2"));
		}

		#endregion

	}

	#endregion

}

