namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DCEnabledStrategiesAnalizationRuleSchema

	/// <exclude/>
	public class DCEnabledStrategiesAnalizationRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DCEnabledStrategiesAnalizationRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DCEnabledStrategiesAnalizationRuleSchema(DCEnabledStrategiesAnalizationRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c0d13a6b-c13b-4508-ac19-81807f584656");
			Name = "DCEnabledStrategiesAnalizationRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("748ec229-6875-456a-9dfd-63087e63e63a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,87,75,79,35,71,16,62,123,165,253,15,45,231,98,36,50,222,228,184,44,72,172,97,81,164,133,172,22,18,14,81,14,237,113,141,61,218,153,238,81,119,15,198,16,254,123,190,126,141,205,60,48,92,162,112,176,166,171,171,235,241,85,245,87,141,224,37,233,138,167,196,62,127,187,188,150,153,73,102,82,100,249,178,86,220,228,82,36,103,27,193,203,60,133,208,144,48,239,223,61,190,127,55,170,117,46,150,236,122,163,13,149,71,205,122,123,190,44,165,128,28,59,63,41,90,194,10,155,21,92,235,143,236,108,118,46,248,188,160,197,181,129,121,108,145,62,21,188,216,60,56,95,223,235,130,220,169,233,116,202,62,233,186,44,185,218,156,132,117,56,177,97,138,180,44,238,72,49,5,117,102,86,220,48,110,109,104,210,88,17,211,6,122,76,102,125,206,152,118,49,51,77,198,32,228,36,250,154,238,56,171,234,121,145,167,44,181,17,191,34,96,102,179,138,193,125,15,177,249,76,70,192,10,191,13,8,231,162,46,1,194,55,37,13,165,134,22,126,183,157,172,19,4,175,8,116,89,2,118,231,13,153,197,24,108,224,221,200,71,127,125,41,248,82,255,109,63,171,232,132,17,188,246,98,97,43,57,26,93,73,65,236,152,125,56,116,171,11,37,235,202,22,243,152,253,226,37,168,230,60,23,94,244,171,149,60,133,164,72,44,124,94,207,147,68,163,32,206,58,53,82,217,92,29,152,47,36,186,163,206,140,100,149,162,138,43,98,0,223,176,116,197,115,193,132,92,16,91,231,102,37,107,84,154,9,186,55,190,244,115,172,173,156,45,40,227,117,97,182,62,136,88,170,40,59,30,163,50,59,0,198,42,125,230,154,198,211,19,150,195,53,23,41,13,160,233,36,136,134,151,12,87,128,142,199,169,189,3,247,102,124,114,42,154,179,182,209,6,29,206,194,1,248,114,237,148,124,154,58,123,253,230,67,26,49,202,241,201,109,94,20,108,78,232,120,83,43,129,82,230,25,208,136,109,176,97,186,162,52,207,114,90,60,179,27,250,119,127,231,78,122,131,101,33,75,95,253,209,48,130,17,246,40,59,192,77,152,67,62,137,6,186,10,143,59,253,243,150,110,40,105,145,163,137,91,253,224,110,123,211,14,255,147,34,218,120,44,184,219,234,225,38,166,164,245,127,93,190,1,86,114,128,217,143,3,95,223,118,205,154,237,103,197,26,186,236,160,178,138,148,65,112,175,163,181,223,68,90,212,11,112,79,102,137,202,194,30,122,132,233,186,170,164,50,111,166,188,45,207,245,81,220,153,183,222,221,56,118,135,209,221,157,173,164,161,192,127,250,76,38,13,31,30,189,12,205,37,129,177,22,14,151,252,14,135,253,110,229,23,189,193,94,80,55,208,73,168,195,232,142,43,48,121,107,247,79,94,212,150,188,103,82,81,107,108,99,56,95,251,33,135,140,200,56,205,73,232,145,228,15,77,10,223,2,192,65,55,220,116,180,125,199,253,248,144,77,114,97,14,134,112,60,176,211,127,52,242,4,197,208,145,93,141,254,160,143,118,154,43,98,130,90,91,216,17,237,215,244,225,218,45,124,216,97,163,72,31,174,112,199,34,34,81,42,83,94,228,15,214,137,63,99,117,128,137,223,78,190,72,85,114,51,25,127,109,171,233,228,241,195,83,226,28,32,203,104,251,168,1,187,99,23,54,5,173,89,199,208,0,170,201,173,84,63,220,195,42,177,247,175,86,41,244,165,226,75,10,120,91,190,144,217,100,255,69,63,56,236,79,50,4,27,112,184,11,189,208,81,245,57,122,93,48,208,36,40,34,155,186,40,34,152,163,225,227,168,199,12,181,175,21,249,106,92,144,32,197,139,86,82,9,90,36,168,29,178,140,23,58,134,247,180,219,33,119,237,218,239,191,61,123,31,16,43,74,127,104,182,94,229,233,106,136,59,152,29,34,161,17,27,30,185,93,145,112,35,68,138,98,131,31,218,50,115,174,183,228,28,166,175,102,185,121,126,20,84,30,76,238,122,250,25,38,149,92,251,167,40,221,167,84,185,102,136,39,127,135,88,173,115,76,79,192,92,104,63,190,236,243,21,144,187,160,237,40,27,226,58,39,9,225,188,122,124,181,31,61,152,172,59,186,182,7,32,197,4,138,118,27,71,77,240,65,245,60,174,199,39,55,62,197,53,96,248,24,245,175,100,47,250,14,204,54,244,55,0,129,236,70,45,182,188,159,218,185,158,33,188,46,170,201,206,96,148,24,100,42,135,234,11,47,19,180,108,92,159,86,21,78,89,131,55,210,77,205,23,9,21,23,160,159,133,183,188,128,255,150,52,250,221,107,182,136,106,124,37,59,103,207,149,146,234,210,31,26,199,43,139,231,11,186,117,210,241,223,92,199,212,166,209,55,126,236,115,221,97,142,63,215,105,142,148,154,218,76,66,120,193,209,176,157,56,229,162,173,112,65,173,177,179,89,220,140,32,70,138,219,107,117,22,135,99,175,217,102,247,205,118,95,59,147,219,110,209,221,193,116,120,103,188,30,58,199,91,253,44,229,165,207,133,144,253,11,97,236,69,138,74,15,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateNoEnabledStrategiesErrorMessageLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateNoEnabledStrategiesErrorMessageLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("542c751e-6e66-4180-b1f9-e65e7639c0ef"),
				Name = "NoEnabledStrategiesErrorMessage",
				CreatedInPackageId = new Guid("748ec229-6875-456a-9dfd-63087e63e63a"),
				CreatedInSchemaUId = new Guid("c0d13a6b-c13b-4508-ac19-81807f584656"),
				ModifiedInSchemaUId = new Guid("c0d13a6b-c13b-4508-ac19-81807f584656")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c0d13a6b-c13b-4508-ac19-81807f584656"));
		}

		#endregion

	}

	#endregion

}

