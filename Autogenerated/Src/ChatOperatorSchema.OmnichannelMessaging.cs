namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ChatOperatorSchema

	/// <exclude/>
	public class ChatOperatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ChatOperatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ChatOperatorSchema(ChatOperatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("d4824517-fb06-74c8-eeb3-f54e87ff3606");
			Name = "ChatOperator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("01343ce8-0448-497f-b2c3-9511b4580fa3");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,85,75,111,218,64,16,62,59,82,254,195,40,185,128,84,153,158,75,64,162,142,26,33,5,133,138,36,151,170,135,197,30,96,165,101,77,247,65,68,17,255,189,179,187,230,97,131,92,151,94,44,123,253,205,55,223,206,83,178,37,234,21,75,17,190,142,71,147,124,102,226,36,151,51,62,183,138,25,158,203,248,101,41,121,186,96,82,162,136,71,168,53,155,115,57,135,219,155,237,237,77,100,181,123,159,108,180,193,101,183,242,77,52,66,96,234,56,116,252,132,18,21,79,9,67,168,123,133,115,58,133,68,48,173,191,64,178,96,230,101,133,228,46,87,254,255,143,9,97,153,224,191,217,84,224,79,58,88,217,169,224,41,164,14,95,129,71,36,131,158,7,206,111,28,69,70,164,99,111,18,254,117,58,29,120,208,118,185,100,106,211,223,31,4,145,96,53,42,224,25,74,195,103,28,85,124,192,119,78,13,10,1,10,89,150,75,177,129,39,203,51,120,35,211,97,22,174,20,221,163,204,130,132,178,30,138,165,54,202,166,36,182,162,170,224,60,189,78,203,243,58,73,195,172,13,46,192,81,20,188,64,175,56,118,81,142,118,245,62,199,42,39,66,195,177,73,28,246,190,65,27,102,240,120,127,141,200,132,206,33,85,56,235,221,237,81,19,7,186,235,244,107,195,84,2,67,120,110,97,142,166,11,218,61,118,116,27,137,31,21,220,22,252,125,253,93,79,106,238,80,114,62,146,58,46,25,197,67,201,168,194,214,244,146,125,242,230,73,158,225,85,4,206,48,80,236,1,131,53,227,194,149,224,85,124,103,44,62,113,221,154,76,12,53,228,251,100,4,18,152,9,54,175,47,201,105,158,11,24,4,116,175,31,130,125,238,187,219,164,0,82,171,20,245,1,249,78,113,101,48,3,186,176,209,144,230,86,154,122,17,156,172,130,6,87,205,58,113,22,103,25,255,220,72,68,198,21,205,140,131,243,99,103,234,122,9,207,92,155,7,215,62,125,120,44,40,188,150,139,133,119,4,183,218,255,20,154,138,186,134,161,41,9,42,130,227,43,141,148,21,111,145,66,99,149,44,67,99,143,245,29,239,90,254,208,247,23,181,62,51,109,192,240,37,194,199,2,229,105,37,157,100,19,90,92,194,219,107,210,174,213,252,72,53,244,234,152,28,167,83,50,40,56,220,143,179,128,238,209,241,136,203,119,38,108,179,98,43,10,188,232,41,248,101,209,226,117,233,118,2,191,7,243,134,185,174,204,205,16,213,202,97,101,71,149,154,188,193,146,170,140,182,255,152,207,129,161,233,134,242,11,132,70,104,41,18,127,101,79,105,246,213,243,210,14,115,155,221,79,215,166,220,165,121,182,166,80,249,89,74,5,104,22,92,135,117,211,116,192,157,143,228,11,34,26,164,117,247,7,85,236,41,93,237,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("d4824517-fb06-74c8-eeb3-f54e87ff3606"));
		}

		#endregion

	}

	#endregion

}

