namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastSnapshotRepositorySchema

	/// <exclude/>
	public class ForecastSnapshotRepositorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastSnapshotRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastSnapshotRepositorySchema(ForecastSnapshotRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c0a57abe-fe8c-a368-9ff0-06fdd843c47b");
			Name = "ForecastSnapshotRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,87,77,111,227,54,16,61,123,129,253,15,132,247,34,3,129,12,244,152,216,46,156,172,19,24,104,210,180,222,143,195,162,7,70,26,219,68,37,202,33,41,7,194,34,255,189,51,34,169,47,43,182,131,162,189,216,38,197,55,243,56,51,111,70,150,60,5,189,227,17,176,235,199,251,85,182,54,225,77,38,215,98,147,43,110,68,38,195,219,76,65,196,181,249,246,203,199,15,63,63,126,24,228,90,200,13,91,21,218,64,122,213,89,35,52,73,32,34,156,14,239,64,130,18,81,125,166,182,159,166,153,236,219,87,208,191,27,46,164,17,70,128,126,227,241,45,143,76,166,236,115,60,241,73,193,6,41,176,165,52,160,214,120,181,75,182,244,215,88,73,190,211,219,204,252,9,187,76,11,68,21,37,100,60,30,179,137,206,211,148,171,98,230,214,143,42,219,139,24,52,227,81,4,90,51,147,49,237,208,44,230,134,51,141,112,190,129,208,227,199,13,3,187,252,41,17,17,19,158,194,113,6,3,140,44,126,86,204,239,193,108,179,88,95,34,7,177,231,6,236,211,46,201,114,99,30,199,154,73,120,169,185,33,207,138,94,73,238,144,157,221,217,113,197,83,38,177,0,166,67,143,30,206,60,191,210,72,56,25,151,167,74,208,62,19,49,249,11,186,87,249,92,186,115,139,209,213,17,182,119,96,48,158,73,82,179,205,214,108,237,204,157,203,213,159,95,198,195,153,167,194,244,22,192,48,204,23,150,202,90,128,106,49,63,52,33,18,76,140,173,116,52,82,174,88,212,42,252,3,188,2,147,43,169,103,147,177,255,69,143,150,11,153,167,160,248,83,2,147,190,184,204,232,206,243,36,9,238,114,140,94,77,253,130,221,54,56,176,38,161,211,17,108,215,225,83,81,111,52,2,192,222,153,122,10,231,234,208,206,153,113,232,173,9,36,107,239,93,251,240,151,251,4,50,182,213,94,174,95,173,114,219,155,94,14,55,9,215,40,134,115,52,44,228,22,187,142,137,179,136,69,10,214,211,225,17,221,13,217,152,168,255,248,12,107,158,39,230,90,200,24,91,75,96,138,29,100,235,224,8,112,52,250,171,150,120,68,228,142,112,99,151,239,211,62,214,128,54,42,167,142,70,13,160,116,98,79,56,135,111,27,11,190,234,178,134,164,237,193,44,111,45,71,140,250,247,96,208,57,52,237,28,163,30,235,210,209,205,71,197,17,91,227,14,20,117,100,106,81,153,65,36,196,142,164,95,178,142,159,206,242,39,219,128,185,98,154,62,78,120,235,239,134,59,187,96,101,87,90,241,61,148,67,162,56,209,156,92,12,246,92,49,42,112,83,224,253,219,204,236,176,41,86,209,22,82,126,207,37,118,120,133,195,204,44,49,45,92,70,112,93,60,160,108,130,97,215,207,112,20,222,40,64,70,142,71,219,42,149,61,250,181,62,195,21,24,28,149,121,42,191,241,36,71,91,40,189,139,138,99,184,106,137,229,109,212,138,90,94,7,106,183,142,227,48,34,208,4,209,186,131,192,112,6,107,158,104,183,127,118,130,170,106,173,186,197,123,4,25,226,112,25,150,154,244,181,126,230,200,113,89,173,110,116,179,133,232,239,185,218,96,103,150,230,33,199,238,75,173,14,69,93,33,220,125,187,129,107,35,23,233,14,19,217,129,86,49,62,48,81,165,13,107,170,103,55,92,106,107,112,196,126,101,212,21,195,7,120,161,111,220,184,236,3,116,236,83,154,154,150,237,122,202,98,219,190,208,40,237,124,17,41,132,95,77,244,144,189,52,173,210,35,107,175,33,149,230,200,174,146,252,254,172,217,1,215,78,220,127,49,22,155,218,213,207,24,10,122,237,105,170,245,143,28,14,154,96,159,156,47,88,143,122,157,0,244,115,136,109,134,166,101,105,205,10,7,83,55,79,94,120,161,87,64,239,183,232,26,59,52,212,8,172,80,123,208,137,107,20,254,174,98,80,215,197,92,71,65,195,178,189,155,166,243,1,173,109,195,176,187,223,133,217,62,210,164,5,58,18,248,48,164,56,125,133,206,228,23,156,74,225,226,57,231,9,178,47,75,16,37,92,199,205,87,35,5,39,170,222,194,145,40,185,193,80,219,40,212,239,231,253,237,137,208,190,40,180,11,240,111,66,155,254,20,250,155,213,254,232,223,194,130,71,219,64,224,191,1,54,157,185,140,85,53,108,111,78,86,123,245,236,78,15,156,194,144,64,163,48,252,179,166,202,200,13,221,142,130,19,55,122,220,132,170,106,86,246,213,145,7,58,249,188,9,241,226,153,249,28,90,220,171,187,164,255,182,239,60,117,148,254,181,116,218,186,57,251,53,234,255,18,3,38,12,101,106,17,54,92,218,231,189,53,68,91,117,214,113,91,207,154,106,52,185,48,202,19,165,80,87,130,155,76,71,146,237,199,161,207,120,171,82,78,195,27,72,87,42,71,48,253,197,242,122,100,88,246,189,224,226,222,63,70,172,68,166,127,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c0a57abe-fe8c-a368-9ff0-06fdd843c47b"));
		}

		#endregion

	}

	#endregion

}

