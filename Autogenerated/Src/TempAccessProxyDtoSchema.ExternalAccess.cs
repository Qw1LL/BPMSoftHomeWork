namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TempAccessProxyDtoSchema

	/// <exclude/>
	public class TempAccessProxyDtoSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TempAccessProxyDtoSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TempAccessProxyDtoSchema(TempAccessProxyDtoSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("04544653-713e-4c63-ac57-d9a457053d3c");
			Name = "TempAccessProxyDto";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f214e3c2-8cc2-4e62-be3f-96a9b4832c80");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,86,77,111,218,64,16,61,39,82,254,195,136,28,74,46,112,47,17,82,10,36,66,106,11,74,224,84,245,176,216,99,179,170,189,235,238,174,163,160,168,255,189,179,182,49,6,108,131,49,23,219,187,158,143,55,59,243,102,86,176,16,117,196,28,132,111,243,31,111,210,51,189,145,20,30,247,99,197,12,151,162,55,249,48,168,4,11,158,28,7,181,158,51,231,15,243,241,238,246,243,238,246,38,214,92,248,240,182,209,6,195,193,193,154,172,4,1,58,214,132,238,189,160,64,197,29,146,33,169,123,133,62,237,194,40,96,90,127,165,23,71,97,94,81,203,88,145,135,68,228,215,108,165,101,128,6,187,157,165,222,1,155,61,197,102,61,21,6,253,12,219,120,49,235,29,232,119,30,126,147,129,126,191,15,143,58,14,67,166,54,195,108,157,10,130,218,74,130,139,218,81,60,74,44,109,117,250,5,165,40,94,5,220,1,199,226,60,134,121,67,39,64,207,60,156,185,146,17,42,195,145,98,154,39,154,233,255,67,40,201,198,11,26,13,82,129,182,111,179,70,114,146,128,227,174,69,114,12,37,221,121,103,65,140,249,114,81,161,182,147,202,2,208,70,217,188,164,17,76,93,248,4,31,205,192,250,30,192,191,38,32,5,149,10,72,175,0,184,25,218,90,253,122,216,63,173,234,197,192,179,99,90,190,78,47,58,222,125,189,122,160,75,197,91,224,140,181,145,33,42,74,40,153,226,30,167,207,238,104,58,126,104,8,251,12,51,149,81,100,186,109,234,36,167,88,51,216,101,106,71,48,191,115,109,30,39,31,17,87,108,21,224,150,143,83,225,201,33,228,236,44,131,126,143,194,77,169,154,172,211,221,131,205,131,214,84,234,166,113,131,42,181,82,221,166,114,241,252,60,128,83,63,5,106,190,54,153,44,0,78,250,167,27,86,5,248,235,182,173,28,98,44,248,223,56,101,120,243,158,112,70,89,182,227,191,203,117,20,176,205,5,240,42,52,171,96,142,83,241,118,104,243,67,197,36,133,182,144,96,185,24,129,203,12,66,151,123,192,196,134,134,23,141,229,144,11,116,27,54,135,130,81,107,176,46,168,49,253,95,112,10,101,146,235,216,173,43,177,235,109,45,21,141,35,91,212,102,147,13,167,45,191,202,136,49,222,141,107,75,130,76,49,31,129,150,20,157,254,240,36,47,42,221,182,98,70,118,185,216,53,220,138,164,180,28,201,153,155,51,234,185,245,16,221,186,218,191,36,157,244,84,200,82,67,87,95,116,113,94,49,157,143,177,243,34,172,157,91,205,203,179,178,12,159,121,64,204,3,35,193,227,194,205,202,207,18,87,201,216,95,195,182,178,200,189,122,231,78,146,158,250,130,124,38,51,251,245,168,83,31,87,191,99,238,174,5,16,208,24,189,248,82,161,79,14,232,52,41,195,66,86,74,103,114,195,187,241,213,184,117,70,57,144,228,127,135,227,186,133,26,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("04544653-713e-4c63-ac57-d9a457053d3c"));
		}

		#endregion

	}

	#endregion

}

