namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: UpdateEmailScheduleRequestSchema

	/// <exclude/>
	public class UpdateEmailScheduleRequestSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public UpdateEmailScheduleRequestSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public UpdateEmailScheduleRequestSchema(UpdateEmailScheduleRequestSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4ad67b8c-ff6f-49ab-aea3-b1fc5bc33529");
			Name = "UpdateEmailScheduleRequest";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b39fd9cb-6840-4142-8022-7c9d0489d323");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,149,77,111,218,64,16,134,207,137,148,255,48,74,14,109,47,112,47,77,144,18,80,212,3,21,194,180,135,86,149,181,216,3,140,100,175,221,253,72,75,162,252,247,206,172,109,74,92,212,96,56,245,2,218,241,188,175,231,217,157,89,3,104,149,163,45,85,130,112,59,157,68,197,210,245,238,10,189,164,149,55,202,81,161,47,206,159,46,206,207,188,37,189,130,104,99,29,230,131,214,186,55,243,218,81,142,189,8,13,169,140,30,131,142,179,56,175,223,239,195,7,235,243,92,153,205,77,189,158,97,105,208,162,118,22,82,229,20,36,133,118,70,37,14,150,133,1,95,114,76,188,49,87,148,189,177,96,147,53,166,62,195,94,227,214,223,177,251,54,98,131,187,90,255,157,3,165,95,100,148,64,146,41,107,225,179,120,225,88,140,162,218,101,134,63,60,90,199,153,76,197,191,103,87,6,87,92,45,76,77,81,162,113,132,246,61,76,131,73,245,188,13,16,2,247,200,181,115,177,86,254,221,26,97,33,251,129,252,74,217,7,64,157,74,181,127,151,91,69,30,84,230,113,187,156,191,34,255,147,29,96,39,152,47,208,188,253,196,135,6,215,112,217,40,99,81,198,172,188,124,39,219,208,236,3,43,112,46,158,183,117,158,44,198,58,133,39,88,161,27,8,192,0,158,143,39,181,78,25,119,10,107,219,160,11,109,208,30,192,27,73,222,241,196,41,102,244,128,102,179,237,68,238,218,141,237,6,253,170,199,191,185,27,121,220,200,99,145,191,68,183,206,200,216,140,234,212,166,225,71,156,120,28,187,215,196,179,2,148,242,164,210,146,208,64,177,12,27,18,38,179,27,127,144,236,88,29,76,30,132,49,181,218,250,222,83,10,97,174,63,158,208,202,41,211,201,5,1,63,215,168,235,18,115,111,29,44,16,18,165,19,204,176,227,28,55,142,135,227,253,42,169,186,102,249,68,29,238,111,230,33,140,183,105,18,251,111,136,219,67,249,18,227,139,228,193,245,77,155,110,56,220,42,122,19,210,33,109,208,133,178,52,84,24,114,27,233,215,208,36,221,144,26,249,193,135,216,8,246,183,233,180,126,122,74,167,82,26,102,79,246,240,177,208,24,62,148,252,1,77,121,224,187,177,241,77,200,37,236,56,29,49,146,149,71,117,5,139,199,126,236,121,200,146,67,252,202,57,251,225,175,24,161,250,252,134,53,71,159,127,3,167,118,15,132,143,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4ad67b8c-ff6f-49ab-aea3-b1fc5bc33529"));
		}

		#endregion

	}

	#endregion

}

