namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: AudienceSegmentationQuerySourceSchema

	/// <exclude/>
	public class AudienceSegmentationQuerySourceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public AudienceSegmentationQuerySourceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public AudienceSegmentationQuerySourceSchema(AudienceSegmentationQuerySourceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b2befff3-d3b6-2254-30ec-f5ee35757d0b");
			Name = "AudienceSegmentationQuerySource";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b39fd9cb-6840-4142-8022-7c9d0489d323");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,86,73,111,219,58,16,62,171,64,255,3,161,94,20,160,149,239,217,0,199,77,138,28,18,228,217,105,123,40,138,130,149,198,14,81,138,84,184,36,17,30,242,223,59,36,37,153,146,183,22,232,193,11,135,179,126,179,81,208,10,116,77,11,32,23,119,55,11,185,52,249,76,138,37,91,89,69,13,147,226,237,155,255,223,190,73,172,102,98,69,22,141,54,80,157,244,231,181,128,130,237,212,252,227,197,142,139,75,97,152,97,160,241,26,25,222,41,88,161,49,50,227,84,235,99,50,181,37,3,81,192,2,86,21,8,227,29,249,207,130,106,22,210,170,2,188,200,100,50,33,167,218,86,21,85,205,121,123,246,226,196,72,178,2,67,52,112,40,204,135,71,39,231,104,58,40,35,180,85,158,119,74,38,145,150,218,254,228,172,32,133,87,116,208,141,4,177,193,239,222,253,43,6,188,68,255,239,20,123,162,198,49,36,238,83,135,35,81,64,75,41,120,67,62,107,80,136,178,64,255,156,216,15,59,56,7,72,146,119,32,202,160,119,104,4,25,181,81,182,48,82,57,83,222,225,192,49,134,36,96,130,86,13,104,194,80,138,98,48,68,46,145,9,128,20,10,150,103,233,129,24,211,73,175,104,128,83,160,212,84,209,138,8,172,160,179,116,24,67,122,62,179,74,57,184,29,157,20,253,197,233,196,11,121,29,45,216,7,92,200,70,104,13,13,29,17,87,159,73,50,194,144,156,141,248,92,25,38,175,251,145,189,1,243,32,7,249,139,179,247,36,89,73,166,101,57,147,220,86,66,223,203,133,47,176,204,87,114,179,40,30,160,162,222,109,2,250,241,61,137,201,68,251,159,206,215,94,201,87,134,6,173,249,200,116,205,105,243,133,114,11,153,23,78,209,113,67,11,147,174,255,94,151,233,209,201,159,138,223,80,140,144,113,142,66,120,154,67,193,106,132,216,124,238,149,188,238,139,109,155,222,29,81,98,37,186,214,46,188,220,232,56,229,140,234,46,230,13,249,203,151,90,129,214,14,247,192,30,17,206,188,200,166,76,30,138,57,80,130,175,35,93,89,231,9,122,151,207,165,52,129,183,69,110,108,40,71,64,176,82,62,89,86,230,183,240,236,126,179,150,245,137,42,2,99,251,193,36,74,8,120,30,36,56,186,109,61,232,226,78,60,124,113,108,27,225,122,190,215,96,118,135,201,124,1,230,74,98,51,148,17,209,107,246,32,103,49,224,173,34,140,191,79,104,182,67,237,222,90,184,98,220,128,210,187,50,239,192,34,63,45,255,117,89,81,134,133,214,5,236,12,183,162,206,1,87,144,109,218,2,213,21,215,157,27,1,224,181,7,226,76,86,56,22,152,150,226,190,169,113,57,60,90,202,177,112,47,58,245,88,197,177,169,40,198,127,110,106,142,219,16,39,44,164,239,67,254,110,144,134,53,237,167,174,206,55,216,230,56,211,27,55,11,68,249,39,142,221,74,115,249,194,80,83,184,206,210,111,145,198,182,75,231,80,227,88,164,199,61,225,186,60,94,55,244,247,220,53,241,214,204,13,70,78,176,215,205,214,248,42,235,82,165,192,88,181,177,126,242,152,23,237,210,21,168,252,19,152,235,118,129,92,52,183,136,104,182,70,236,158,42,220,183,233,81,62,227,82,0,106,167,122,224,202,33,87,67,81,237,246,215,223,103,123,230,169,239,85,253,184,171,47,179,33,119,130,251,100,90,86,76,204,217,234,193,104,148,90,82,174,97,208,133,152,47,220,1,110,217,197,77,120,173,167,252,153,54,58,12,254,78,240,36,198,18,37,255,110,211,28,90,223,8,188,30,62,101,150,18,163,117,184,247,47,25,156,118,47,5,212,248,180,225,238,137,209,116,79,29,40,241,201,81,72,85,234,124,207,18,15,158,235,243,211,73,247,47,218,205,79,76,25,108,16,210,134,140,222,172,183,181,223,126,187,198,192,150,116,33,96,251,138,242,100,251,158,104,51,123,168,60,218,28,7,37,91,182,116,216,86,35,166,110,196,249,203,56,136,192,177,206,169,171,255,160,40,88,27,181,204,160,27,71,57,15,212,152,136,148,223,207,133,80,189,117,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b2befff3-d3b6-2254-30ec-f5ee35757d0b"));
		}

		#endregion

	}

	#endregion

}

