namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: IndexingSectionListBuilderSchema

	/// <exclude/>
	public class IndexingSectionListBuilderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IndexingSectionListBuilderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IndexingSectionListBuilderSchema(IndexingSectionListBuilderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1195b437-03c8-4435-ad94-63358b301303");
			Name = "IndexingSectionListBuilder";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("eef27540-b1e9-466b-87b9-62933f9468f4");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,223,83,219,70,16,126,118,102,242,63,108,157,23,209,1,3,105,155,134,22,60,19,8,48,158,20,74,113,51,125,204,28,210,202,190,65,190,51,119,39,39,110,146,255,189,187,119,39,91,178,37,72,30,234,97,0,157,246,199,183,187,223,238,158,149,152,161,157,139,20,225,244,230,106,172,115,55,56,211,42,151,147,210,8,39,181,26,92,22,250,78,20,99,20,38,157,62,127,246,249,249,179,94,105,165,154,192,120,105,29,206,126,223,120,38,229,162,192,148,53,237,224,18,21,26,153,174,101,214,30,12,182,159,14,222,158,118,188,56,87,78,58,137,150,94,147,192,11,131,19,242,1,103,133,176,246,55,24,169,12,63,145,202,56,184,254,67,90,119,90,202,34,67,67,178,244,179,191,191,15,199,182,156,205,132,89,14,227,179,23,176,224,166,8,146,213,49,3,91,33,175,84,246,107,58,243,242,174,144,41,164,236,241,17,135,176,70,227,33,47,155,96,56,129,107,244,228,203,9,229,40,130,27,35,23,194,161,15,110,11,174,63,248,123,57,39,164,25,232,220,99,206,101,129,128,222,3,20,82,221,51,230,109,208,189,121,176,11,228,199,17,122,131,34,211,170,88,194,101,73,166,62,176,145,10,165,186,103,15,163,12,78,64,225,71,47,144,244,127,249,249,232,46,125,153,191,222,59,64,60,216,203,242,195,195,189,163,95,15,239,246,14,14,14,179,87,7,120,244,211,235,244,85,127,39,212,164,247,2,85,22,34,139,207,245,48,77,153,58,109,56,82,159,199,150,64,71,138,10,44,10,249,47,90,16,30,131,244,233,33,106,198,152,143,45,34,164,6,243,147,254,123,139,134,236,170,144,255,62,236,15,67,101,6,27,225,135,162,117,151,43,105,26,130,178,241,184,67,213,188,19,22,147,205,99,95,198,222,135,230,49,101,174,121,192,84,238,125,125,60,57,87,232,166,58,251,38,6,188,201,136,175,190,238,54,157,226,76,192,67,137,102,9,78,19,1,172,235,32,128,63,153,11,35,102,160,168,213,79,250,129,51,99,111,161,63,140,25,169,167,246,188,46,64,121,173,170,64,169,245,118,58,204,218,7,78,107,127,200,191,185,96,193,79,64,202,64,169,119,27,22,42,102,46,52,49,145,66,187,160,192,130,211,191,56,172,164,14,35,26,11,15,187,192,46,142,235,239,189,198,16,34,134,170,60,11,97,124,186,162,141,19,184,160,70,191,197,28,13,82,56,107,127,73,221,58,147,153,116,101,14,73,93,151,154,162,44,10,248,242,165,102,145,135,93,57,163,113,193,118,79,151,215,148,135,164,207,77,212,223,169,20,42,40,61,131,174,52,129,16,204,136,26,186,115,251,64,208,46,209,141,145,39,231,133,54,158,173,126,250,214,32,68,92,81,131,92,22,14,141,29,80,226,146,234,236,140,186,219,97,120,243,143,116,211,27,206,53,178,88,18,14,207,244,140,242,47,173,86,140,114,112,173,221,249,67,41,138,93,8,168,119,219,7,194,78,116,29,179,91,119,185,243,157,12,215,142,34,196,236,17,142,83,30,234,92,12,57,97,22,6,174,231,218,132,105,237,211,3,169,86,78,72,197,203,34,13,181,128,143,20,56,20,90,223,151,115,16,42,3,135,159,28,100,194,9,88,136,162,68,112,28,249,255,213,42,222,121,68,178,221,46,129,3,118,120,27,254,182,199,201,17,22,122,66,45,103,167,240,227,192,62,20,158,37,100,173,82,15,205,19,83,9,11,105,28,213,16,182,218,161,139,82,157,125,85,111,27,172,72,249,22,115,170,115,91,135,188,153,207,139,229,149,206,100,46,49,251,83,69,66,38,164,89,23,184,166,244,211,100,227,28,135,110,9,114,44,182,219,240,62,104,72,13,184,153,162,157,16,55,67,170,179,173,139,61,182,90,138,181,25,73,163,7,114,163,103,213,130,7,218,109,246,251,72,240,126,148,217,254,176,179,164,93,213,233,154,84,4,116,243,148,64,38,94,156,55,47,205,178,149,219,70,93,182,149,226,190,238,240,148,84,115,131,238,80,34,157,66,226,23,127,73,107,94,170,22,31,189,78,118,144,155,141,117,23,174,100,241,245,149,80,98,130,198,143,194,81,92,24,167,108,58,33,95,17,131,31,170,163,137,34,40,217,250,110,68,215,68,55,178,241,56,246,88,147,111,43,112,61,238,119,169,74,127,121,92,13,210,214,196,44,187,103,106,11,151,123,45,121,245,115,110,203,108,165,208,178,176,154,59,170,197,98,212,253,218,96,245,182,216,147,44,191,49,72,52,164,202,123,101,166,64,181,95,161,235,18,88,241,81,47,208,24,153,197,173,27,13,133,90,84,28,124,154,110,29,228,221,184,100,89,207,43,10,6,106,159,21,13,171,33,179,98,97,51,83,173,116,140,29,125,194,138,131,91,173,93,56,223,112,193,31,38,218,15,141,176,248,91,13,175,10,251,14,151,73,48,20,102,140,119,181,169,207,159,166,58,147,161,166,70,245,13,115,110,83,139,234,246,200,227,45,206,168,2,231,179,185,91,210,84,101,246,199,113,220,96,200,147,19,142,139,166,92,204,199,183,206,49,27,215,88,247,250,10,18,221,123,139,238,19,107,183,156,227,234,63,190,175,103,72,233,45,58,215,212,138,120,244,77,128,215,53,197,17,204,5,239,254,238,212,82,236,138,8,177,91,248,74,245,200,149,35,156,214,15,233,228,63,153,59,183,255,225,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1195b437-03c8-4435-ad94-63358b301303"));
		}

		#endregion

	}

	#endregion

}

