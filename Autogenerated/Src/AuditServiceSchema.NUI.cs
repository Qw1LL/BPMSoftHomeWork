namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: AuditServiceSchema

	/// <exclude/>
	public class AuditServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public AuditServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public AuditServiceSchema(AuditServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("bd3e9212-9669-40ca-9941-18525c31b20e");
			Name = "AuditService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("43f796d0-2535-4ae5-88b4-0c05eb1809e5");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,133,84,209,110,218,48,20,125,14,18,255,224,241,20,68,20,109,175,91,59,9,218,77,234,4,165,42,160,78,66,60,152,228,6,204,18,59,181,29,170,172,226,223,119,157,56,9,1,70,35,65,226,115,175,143,207,61,190,54,167,9,168,148,6,64,70,79,147,153,136,180,127,39,120,196,54,153,164,154,9,238,15,179,144,233,25,200,61,11,160,219,121,239,118,156,76,49,190,33,179,92,105,72,190,157,140,253,49,227,175,103,160,157,62,17,33,196,87,131,254,11,172,175,39,12,3,205,246,133,178,38,175,17,46,161,173,254,60,7,23,192,148,36,41,98,24,93,90,118,156,166,37,13,244,202,96,67,149,62,130,198,180,20,89,214,44,102,58,127,134,215,140,73,72,128,107,229,30,15,140,44,114,75,62,152,98,178,124,11,132,125,179,72,154,173,99,22,144,32,166,74,145,99,147,201,87,50,162,10,106,203,29,244,28,255,157,229,52,133,178,170,99,173,206,18,43,122,224,123,241,7,220,9,232,173,8,81,76,239,105,58,155,247,60,178,144,108,14,73,26,83,109,36,246,38,98,15,115,49,148,193,150,237,1,195,35,17,230,51,157,199,38,136,44,19,80,138,110,160,70,253,23,73,211,20,66,207,44,227,24,241,160,244,79,33,19,170,91,19,74,200,255,165,4,247,200,51,54,147,224,10,174,231,21,14,84,22,48,174,73,75,154,171,180,52,123,166,52,149,250,30,197,123,196,34,192,195,227,241,114,69,68,101,202,60,79,65,245,137,105,80,199,153,30,163,167,89,67,41,105,142,202,222,15,166,61,28,199,48,206,89,2,205,122,191,49,90,161,254,163,120,59,201,179,42,46,103,177,136,184,159,106,120,46,243,39,42,149,41,169,174,69,100,250,104,169,126,165,217,145,160,51,201,201,231,146,231,112,141,173,246,193,112,85,114,174,51,181,44,33,65,38,37,246,101,11,180,250,113,55,118,88,153,157,28,9,73,92,131,177,2,195,215,205,137,231,254,24,248,70,111,49,52,24,212,10,140,238,31,60,75,106,201,55,173,165,190,187,109,142,37,91,149,181,92,210,213,212,213,208,62,168,123,136,24,135,208,213,152,33,34,183,61,195,251,136,200,41,154,0,79,164,98,127,193,149,16,93,104,17,84,116,134,217,98,201,128,124,233,151,6,225,115,158,182,220,173,208,174,255,155,140,207,110,48,168,190,203,13,178,47,187,239,232,184,20,111,119,34,195,143,219,246,13,87,243,141,197,166,53,88,104,115,239,48,220,146,246,113,90,40,144,120,103,112,192,187,211,156,209,166,249,202,163,237,84,29,228,17,99,46,18,174,241,244,15,85,51,184,186,123,69,197,125,107,135,109,189,74,123,1,154,146,240,215,237,28,254,1,102,22,60,201,109,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("bd3e9212-9669-40ca-9941-18525c31b20e"));
		}

		#endregion

	}

	#endregion

}

