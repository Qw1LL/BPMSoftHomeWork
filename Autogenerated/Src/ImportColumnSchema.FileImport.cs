namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ImportColumnSchema

	/// <exclude/>
	public class ImportColumnSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ImportColumnSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ImportColumnSchema(ImportColumnSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ad93d1b7-ab6e-4080-afde-77869ac0df94");
			Name = "ImportColumn";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("52abf94a-4a51-4e9b-afae-86480a04ff1e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,77,79,219,64,16,61,187,18,255,97,148,74,224,20,213,105,123,232,161,137,131,40,1,20,21,40,34,160,30,170,170,218,216,19,103,85,123,109,246,3,72,17,255,189,179,187,14,113,190,104,123,177,61,179,51,243,230,189,153,181,96,5,170,138,37,8,159,47,207,71,229,68,71,71,165,152,240,204,72,166,121,41,162,19,158,227,176,168,74,169,119,94,61,238,188,10,140,226,34,131,209,76,105,44,186,43,54,165,230,57,38,54,79,69,167,40,80,242,100,45,102,192,89,38,74,165,121,162,214,206,206,184,184,93,115,94,25,161,121,129,209,136,202,177,156,255,118,125,81,20,197,189,150,152,145,1,112,148,51,165,62,129,111,148,186,48,133,112,1,223,7,76,51,34,164,37,75,244,15,231,192,177,201,50,148,3,174,170,156,205,194,214,80,164,248,16,63,186,215,83,23,70,165,145,9,198,143,254,253,212,106,187,172,103,236,113,142,214,81,153,113,206,19,72,44,236,10,106,96,85,90,116,118,194,49,79,169,181,75,201,239,152,70,215,85,80,121,3,206,184,210,189,102,250,0,73,24,225,24,246,225,103,186,176,172,86,174,46,138,212,151,174,237,53,28,215,153,63,116,236,207,177,24,163,12,47,104,206,16,67,139,91,158,158,213,156,133,210,210,202,237,20,232,110,207,84,78,145,141,169,94,172,191,180,120,41,203,10,165,230,248,15,93,54,153,47,35,190,44,89,195,80,224,6,17,100,168,33,94,17,19,14,14,32,92,246,196,32,240,254,229,234,97,187,109,151,51,8,212,166,146,49,220,177,220,88,17,130,224,233,101,37,206,81,79,203,173,75,193,133,134,227,135,4,115,223,129,149,228,186,188,48,78,159,90,239,228,249,164,93,179,228,19,168,15,163,161,186,48,121,254,85,30,23,149,158,133,141,208,121,108,160,167,178,188,119,124,15,101,102,10,20,218,102,88,204,202,114,9,5,69,151,147,165,84,79,156,120,209,115,225,39,210,11,35,186,46,111,42,154,240,80,220,49,186,45,66,135,117,22,153,160,76,65,193,239,188,99,82,74,100,201,20,66,123,162,137,240,6,66,129,205,120,19,195,135,143,221,133,189,31,83,248,91,216,59,220,131,125,120,223,236,73,162,54,82,88,152,255,27,64,99,15,235,5,179,242,159,162,246,130,99,234,110,69,216,182,243,222,54,20,23,98,185,218,42,157,78,7,122,212,70,193,228,172,63,119,80,61,104,44,11,144,0,32,203,146,230,76,191,54,61,27,37,83,44,24,48,145,194,253,148,64,129,187,13,132,95,56,171,149,1,174,64,75,131,209,51,68,103,21,163,87,49,201,10,176,179,139,91,182,120,179,246,13,79,91,253,171,53,196,225,32,234,117,92,222,162,140,116,74,170,126,175,51,255,106,136,51,60,22,180,47,210,254,6,183,95,66,98,219,176,45,170,135,251,130,51,31,173,194,83,195,83,167,192,74,147,243,233,123,232,165,235,28,125,179,210,132,169,157,68,74,75,78,213,96,119,151,62,235,228,97,26,29,223,26,150,171,112,83,93,191,138,27,214,162,246,53,93,228,249,3,141,241,102,94,22,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ad93d1b7-ab6e-4080-afde-77869ac0df94"));
		}

		#endregion

	}

	#endregion

}

