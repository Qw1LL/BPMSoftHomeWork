namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CurrencyUtilsSchema

	/// <exclude/>
	public class CurrencyUtilsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CurrencyUtilsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CurrencyUtilsSchema(CurrencyUtilsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("548c61f8-ddd1-44fd-b898-7d844b6a96b2");
			Name = "CurrencyUtils";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("66e9e705-64b4-4dda-925e-d1e05a389eb6");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,75,79,227,48,16,62,23,137,255,96,229,228,72,149,23,216,99,23,36,218,116,81,87,84,69,20,118,15,136,131,137,167,173,165,196,233,250,1,91,173,248,239,59,142,157,38,125,32,180,135,56,246,60,190,249,102,60,99,103,164,90,146,249,198,88,40,7,167,39,174,115,100,25,183,124,43,27,222,77,231,213,194,178,81,165,225,168,144,141,149,149,86,130,57,174,205,134,40,87,188,4,179,230,57,116,116,106,33,151,78,115,43,43,117,122,242,247,244,164,247,52,123,49,85,1,22,104,50,42,184,49,68,26,82,69,81,159,56,243,129,51,27,57,173,65,229,155,123,110,97,110,43,205,151,64,164,194,76,184,96,73,250,140,200,107,247,82,200,156,24,139,14,57,201,107,240,198,235,209,202,194,160,141,103,176,103,40,32,151,37,47,200,13,216,110,12,122,227,164,32,121,148,76,68,255,209,128,70,74,10,114,207,199,51,237,28,83,82,35,247,94,185,38,72,24,230,80,160,130,92,18,5,111,36,28,232,158,7,123,168,214,244,60,173,221,48,215,194,149,138,38,115,203,181,197,155,129,100,79,209,80,75,250,73,38,95,165,65,132,36,101,215,134,118,142,187,30,62,137,104,18,182,65,253,93,87,101,11,215,213,252,168,164,162,126,121,216,172,129,77,144,168,238,147,54,112,180,154,237,144,33,201,68,96,144,137,25,255,118,188,160,33,54,187,227,26,91,193,130,166,109,253,210,232,255,107,5,26,118,18,69,239,91,48,102,166,63,192,240,86,15,178,4,44,152,224,155,136,211,99,215,74,180,76,254,151,197,76,11,208,195,77,6,38,223,225,66,184,137,215,53,216,222,39,248,206,223,204,243,21,148,124,202,21,54,158,198,139,221,189,77,134,221,179,99,65,147,241,161,91,192,63,162,8,193,142,206,27,235,154,147,183,248,15,141,245,185,3,61,66,62,13,209,130,25,214,170,136,29,157,227,54,2,239,235,246,122,183,223,240,136,80,225,65,160,217,112,252,7,114,135,195,73,196,203,118,123,80,170,177,50,78,67,54,108,69,52,109,230,167,129,154,248,215,233,30,103,27,107,45,218,237,101,103,184,88,136,0,65,69,219,136,45,88,207,167,196,110,43,46,104,11,18,57,247,222,235,95,88,229,130,208,218,118,84,57,101,201,21,57,219,98,248,14,104,250,167,25,53,228,225,173,159,206,158,253,189,251,113,17,161,231,126,242,194,193,183,137,178,95,47,174,186,147,57,56,196,242,147,247,9,78,22,94,38,68,10,99,26,81,228,98,219,208,45,161,75,79,249,8,207,243,78,104,95,59,20,77,185,93,177,123,76,84,108,113,106,50,95,14,252,251,228,162,9,170,193,58,173,106,136,32,121,39,80,224,99,29,171,20,213,49,90,93,84,191,224,247,254,15,222,216,183,198,132,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("548c61f8-ddd1-44fd-b898-7d844b6a96b2"));
		}

		#endregion

	}

	#endregion

}

