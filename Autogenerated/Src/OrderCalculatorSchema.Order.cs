namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: OrderCalculatorSchema

	/// <exclude/>
	public class OrderCalculatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public OrderCalculatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public OrderCalculatorSchema(OrderCalculatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0971f59c-c20a-47f6-80b9-2a255f65761b");
			Name = "OrderCalculator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e8c4bc03-2f14-47b7-8005-47fab57cc1b8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,85,93,107,219,48,20,125,118,161,255,225,46,133,226,142,226,236,121,141,83,178,244,131,194,74,203,210,237,181,104,182,226,10,108,217,211,71,134,25,249,239,147,44,201,145,28,167,107,217,75,176,174,174,206,61,231,220,43,133,162,10,243,6,101,24,190,60,222,175,234,181,72,150,53,93,147,66,50,36,72,77,143,143,254,28,31,69,146,19,90,192,170,229,2,87,23,131,117,242,149,208,95,187,224,14,133,225,241,104,114,77,5,17,4,243,3,219,55,40,19,53,51,251,42,227,132,225,66,17,129,101,137,56,255,12,15,44,199,108,137,202,76,150,72,165,117,41,141,252,89,146,12,50,157,177,159,16,41,5,234,183,7,186,33,184,204,21,210,35,35,27,36,176,217,108,204,2,190,115,117,184,166,20,103,90,61,60,203,96,125,225,167,222,45,37,99,152,102,138,233,55,181,94,169,98,168,192,240,156,141,133,141,150,232,4,211,220,208,8,57,169,18,92,48,169,133,107,102,157,30,75,204,104,27,168,138,7,60,67,154,103,160,155,22,69,3,246,144,194,136,156,237,235,204,30,89,221,96,166,219,165,29,171,133,58,137,115,231,153,93,30,178,98,60,106,184,21,88,216,175,200,19,191,96,133,172,48,21,128,88,161,232,82,252,27,70,118,227,73,168,99,114,62,108,212,89,39,45,138,24,22,146,209,3,61,129,203,75,136,15,108,165,102,222,204,44,182,201,45,22,179,113,145,243,88,81,61,179,245,182,111,48,244,30,139,151,58,127,205,205,13,97,66,162,210,217,215,234,106,119,116,93,131,98,225,98,122,29,223,74,146,131,229,223,222,229,174,237,86,244,40,93,173,100,145,105,120,31,157,199,30,74,114,67,24,23,15,236,10,175,145,44,69,108,180,189,89,149,55,187,211,233,20,102,92,86,21,98,237,220,5,220,16,99,14,226,5,3,170,106,169,250,77,40,168,123,165,19,123,65,73,15,49,29,98,204,26,196,80,5,84,189,93,233,68,13,4,17,237,100,254,164,208,204,55,136,26,50,87,102,54,237,146,119,103,141,61,124,62,155,186,47,239,158,57,239,55,181,178,182,167,170,158,10,93,127,209,113,141,187,247,171,181,181,156,233,27,196,156,150,212,110,105,175,159,218,6,231,203,186,148,21,253,129,74,137,103,57,206,20,86,57,143,39,6,109,98,71,71,159,183,14,44,222,5,19,112,243,209,118,45,125,29,74,79,145,194,233,39,43,31,3,209,83,242,86,70,254,100,57,44,178,6,111,198,32,77,65,151,77,174,171,102,103,161,29,92,239,42,69,123,87,160,199,208,11,245,64,200,178,220,47,96,200,166,240,169,71,30,28,27,94,36,111,250,237,195,17,240,237,14,153,98,61,98,64,214,178,141,6,110,249,0,137,142,217,108,235,226,74,177,216,25,56,240,237,60,176,222,127,95,58,110,131,81,81,90,225,244,212,13,224,7,95,250,191,149,188,219,156,237,255,120,180,241,166,234,138,108,8,55,255,76,129,87,46,62,210,140,254,72,32,82,255,41,7,87,199,58,49,13,7,248,227,94,101,91,225,80,75,194,203,117,30,222,208,208,142,67,111,191,141,249,161,237,95,204,189,207,57,117,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0971f59c-c20a-47f6-80b9-2a255f65761b"));
		}

		#endregion

	}

	#endregion

}

