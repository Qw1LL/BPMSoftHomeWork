namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SysCultureInfoProviderSchema

	/// <exclude/>
	public class SysCultureInfoProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SysCultureInfoProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SysCultureInfoProviderSchema(SysCultureInfoProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("af876c35-af7e-49b1-8172-53e76666f2a2");
			Name = "SysCultureInfoProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6d2d1275-178c-4cc9-a265-eb797a3ca54a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,85,93,111,218,48,20,125,78,165,254,7,139,189,4,105,10,239,5,82,181,180,69,72,237,134,70,183,215,201,196,55,204,82,226,80,127,176,86,19,255,125,215,177,147,64,8,20,109,82,37,4,246,245,253,56,231,248,250,34,104,14,106,77,19,32,183,243,167,69,145,234,104,82,136,148,175,140,164,154,23,34,122,150,84,168,172,92,95,94,252,185,188,8,140,226,98,69,22,111,74,67,62,108,237,49,54,203,32,177,206,42,154,130,0,201,147,3,159,71,46,94,26,99,83,53,207,11,209,101,151,208,109,141,238,110,241,0,143,62,73,88,97,69,50,201,168,82,87,182,204,196,100,218,72,152,137,180,152,203,98,195,25,200,210,115,109,150,25,79,72,98,29,143,248,145,43,50,59,150,33,64,254,248,221,20,68,154,90,154,68,23,18,235,206,203,228,206,195,23,234,78,20,126,87,32,49,86,56,165,136,217,219,246,137,85,57,8,90,78,227,150,155,213,36,216,122,60,32,152,131,180,143,15,11,174,65,106,14,22,157,228,27,170,193,195,115,27,210,170,209,218,58,28,43,208,101,173,64,249,133,47,58,24,12,200,72,153,60,167,242,45,174,12,55,27,202,51,186,204,128,36,142,183,138,106,223,193,174,115,133,224,145,43,61,106,9,30,147,159,85,244,240,125,95,191,81,13,92,191,10,36,224,129,104,146,145,235,107,18,54,187,49,153,130,174,162,195,126,223,177,220,158,161,235,19,232,95,5,107,139,218,41,8,150,80,132,158,171,74,105,113,176,85,92,65,139,70,131,202,244,190,26,123,148,188,16,27,42,201,14,107,1,191,187,131,67,47,129,245,87,245,209,2,236,139,198,56,39,170,141,118,166,86,27,247,221,121,96,103,128,201,69,216,155,177,222,161,77,48,120,173,204,209,131,44,242,176,215,160,232,245,9,85,62,187,239,185,22,140,232,254,21,18,163,225,27,80,251,144,24,213,212,45,201,56,174,174,125,106,56,35,248,25,147,230,24,135,145,118,24,126,208,204,192,200,250,196,14,162,43,20,112,161,9,183,232,78,198,161,87,92,179,240,145,245,157,222,48,22,150,242,236,201,26,114,246,217,101,174,91,204,255,250,254,220,235,245,179,59,111,103,216,28,111,60,85,78,220,170,2,162,72,11,153,187,185,126,162,1,215,84,210,156,8,252,99,24,247,56,235,197,139,86,22,6,66,243,148,163,58,163,65,233,27,239,140,188,86,83,17,171,99,232,175,164,106,72,79,188,110,240,7,46,149,254,42,239,32,165,104,10,171,66,120,165,126,25,205,88,116,255,98,104,166,80,77,47,227,246,3,200,151,247,124,192,223,90,207,166,94,247,213,127,144,47,11,86,252,119,58,105,251,177,131,199,177,236,158,59,37,215,35,20,135,103,97,21,38,95,226,59,46,210,127,68,253,229,84,124,39,19,123,53,147,194,8,125,12,56,142,45,60,221,133,223,122,151,206,186,111,68,219,95,226,23,189,11,84,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("af876c35-af7e-49b1-8172-53e76666f2a2"));
		}

		#endregion

	}

	#endregion

}

