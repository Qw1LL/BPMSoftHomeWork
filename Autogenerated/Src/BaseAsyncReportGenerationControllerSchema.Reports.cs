namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseAsyncReportGenerationControllerSchema

	/// <exclude/>
	public class BaseAsyncReportGenerationControllerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseAsyncReportGenerationControllerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseAsyncReportGenerationControllerSchema(BaseAsyncReportGenerationControllerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0d21f704-7f46-4ff9-bf04-3bbd8721391d");
			Name = "BaseAsyncReportGenerationController";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f8ef1a6f-6619-48e3-9227-afa9b7782f83");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,87,219,110,219,56,16,125,86,129,254,3,225,46,80,121,225,149,95,23,117,156,192,205,54,217,0,73,55,136,19,236,67,81,44,104,122,108,19,149,73,149,164,210,24,129,255,125,135,23,221,44,201,73,251,98,68,228,220,231,156,25,70,208,45,232,140,50,32,31,111,111,230,114,101,146,115,41,86,124,157,43,106,184,20,111,223,60,191,125,19,229,154,139,53,153,239,180,129,237,164,252,46,20,254,133,5,42,109,183,82,76,14,100,147,171,127,90,71,40,221,54,209,240,153,220,65,38,149,153,131,122,228,12,186,132,21,36,23,148,25,169,56,232,150,131,115,153,166,192,172,33,157,92,130,0,197,89,75,230,154,139,239,120,136,199,239,20,172,81,148,156,167,84,235,15,228,35,213,48,211,59,193,124,12,78,223,5,133,17,26,101,45,43,167,54,30,143,201,137,206,183,91,170,118,167,225,27,85,20,104,16,70,19,74,22,104,136,208,133,54,10,3,181,14,228,138,80,107,120,163,164,144,185,38,202,57,32,235,210,3,97,165,139,164,240,48,174,185,200,242,69,202,89,105,147,48,27,241,107,2,38,62,173,80,207,17,185,122,49,193,8,155,142,191,85,113,176,150,134,98,98,31,200,173,226,143,212,128,191,207,252,135,141,92,27,130,113,217,18,159,211,52,93,80,246,237,14,82,52,44,214,15,42,37,83,50,24,7,255,55,114,9,233,216,123,47,68,195,85,162,31,217,248,179,52,124,181,27,248,238,68,239,64,44,125,16,205,136,46,56,164,203,190,112,20,208,165,20,233,142,32,214,238,16,221,24,29,220,42,201,64,107,169,200,127,234,240,232,5,95,40,151,129,50,136,181,30,127,157,245,12,57,89,119,157,23,19,111,65,26,196,42,44,143,219,232,59,183,220,140,162,53,152,240,87,164,192,228,74,244,250,36,103,103,36,238,189,156,146,75,48,61,174,226,225,208,5,28,237,237,239,254,120,193,28,92,84,110,9,234,74,22,114,44,138,86,164,252,10,232,198,195,144,89,187,105,24,174,227,172,31,4,59,164,186,57,233,234,247,105,236,35,223,255,76,147,123,34,46,185,87,64,29,3,69,190,223,239,50,236,5,82,217,76,200,190,87,167,131,118,152,197,225,119,159,153,71,174,76,78,211,67,146,133,246,88,142,181,192,240,72,21,82,225,123,14,200,205,41,249,219,152,204,197,251,100,102,204,151,198,214,236,202,49,219,54,24,199,174,147,157,84,218,52,203,112,228,184,158,120,22,99,129,31,12,79,185,173,147,213,118,45,108,8,197,193,99,128,75,129,200,223,6,207,77,99,251,231,142,57,177,31,188,30,100,55,96,54,178,119,4,28,165,211,49,152,135,226,217,236,13,213,223,230,216,19,203,140,7,13,10,171,39,252,98,57,75,106,73,159,83,182,241,108,46,146,109,225,242,88,52,167,177,47,148,128,31,117,226,204,212,58,223,34,182,98,129,11,90,174,226,50,152,225,168,10,108,56,58,174,59,104,80,93,170,193,232,16,111,129,214,251,102,245,46,115,190,36,115,67,113,66,227,44,53,224,149,98,119,172,128,73,181,188,90,142,188,20,110,211,12,251,7,87,203,122,233,14,71,140,223,239,88,71,27,105,23,15,26,15,128,2,192,119,193,21,234,149,94,139,27,171,125,95,250,70,137,42,144,32,83,224,203,35,183,77,24,47,182,111,116,174,167,71,137,171,197,225,229,61,182,33,110,2,99,212,147,121,103,149,231,6,139,187,173,208,24,166,73,124,232,7,71,90,158,154,150,101,127,220,174,250,103,4,76,224,187,231,234,46,193,108,111,169,217,124,18,12,151,111,220,109,40,188,186,172,118,224,110,101,50,68,230,250,112,68,215,39,84,41,51,175,118,13,98,109,54,165,114,48,150,248,227,150,244,95,28,7,184,230,14,7,83,156,27,212,24,36,152,133,243,132,172,120,10,150,15,191,79,31,238,47,254,248,243,253,251,231,42,229,98,118,180,55,69,50,211,154,175,197,5,42,23,219,161,40,181,71,202,139,163,113,84,159,244,163,102,94,163,142,192,135,13,80,53,210,158,252,212,104,115,79,190,40,242,215,238,69,200,197,6,95,180,102,41,25,97,10,86,211,193,75,175,185,164,78,97,61,24,219,167,100,241,150,236,84,45,106,68,26,138,158,252,53,146,57,250,127,249,90,50,83,55,145,24,108,244,49,190,230,39,236,231,114,228,162,169,160,118,205,181,57,177,110,138,29,30,25,181,171,158,58,94,61,233,162,165,183,81,134,230,53,162,100,14,246,63,3,36,64,49,87,78,59,166,92,53,224,106,179,109,88,152,184,151,51,165,232,174,8,104,79,112,9,176,13,137,63,61,49,200,28,104,225,105,216,138,177,186,157,226,125,109,201,85,24,241,146,117,120,252,98,191,203,121,98,1,223,236,247,225,196,177,18,113,120,81,248,210,15,143,12,241,48,135,166,189,83,178,99,175,122,157,216,118,211,54,210,173,49,244,50,58,88,168,71,38,78,107,60,246,204,193,95,162,156,63,109,30,238,255,7,118,156,111,103,19,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0d21f704-7f46-4ff9-bf04-3bbd8721391d"));
		}

		#endregion

	}

	#endregion

}

