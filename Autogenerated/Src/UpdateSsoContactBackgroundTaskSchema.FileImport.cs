namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: UpdateSsoContactBackgroundTaskSchema

	/// <exclude/>
	public class UpdateSsoContactBackgroundTaskSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public UpdateSsoContactBackgroundTaskSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public UpdateSsoContactBackgroundTaskSchema(UpdateSsoContactBackgroundTaskSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("fc80e659-5c97-4b8f-a38f-24e4568bb179");
			Name = "UpdateSsoContactBackgroundTask";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("28117f91-27b8-43f6-8b95-0e32534298ab");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,86,219,110,227,54,16,125,246,2,251,15,172,90,44,104,192,80,208,87,39,113,17,95,178,112,145,164,65,148,116,31,138,98,193,72,99,155,136,68,58,36,149,172,119,145,127,239,240,162,155,99,5,155,135,190,216,18,71,28,158,57,51,115,134,130,21,160,183,44,5,50,189,190,76,228,202,196,51,41,86,124,93,42,102,184,20,228,227,135,31,31,63,12,74,205,197,154,172,115,121,207,242,241,120,38,139,66,138,248,66,174,215,184,124,92,219,147,157,54,80,236,191,163,195,60,135,212,122,211,241,103,16,160,120,250,234,155,11,46,30,155,197,6,138,61,168,111,61,254,83,31,54,182,240,199,231,60,135,101,177,149,202,28,250,82,193,225,213,120,62,237,49,44,132,225,134,131,238,49,223,50,253,96,109,104,253,85,193,218,50,56,203,153,214,99,114,183,205,152,129,68,75,196,103,88,106,166,44,125,88,43,89,138,204,238,113,59,142,142,142,200,137,46,139,130,169,221,36,188,187,221,164,116,155,53,209,90,146,212,239,39,129,191,179,203,11,162,48,133,200,46,144,149,146,5,209,70,42,182,134,184,242,120,212,114,185,45,239,115,158,146,212,121,125,27,18,25,147,101,119,229,228,94,202,124,50,34,203,59,13,10,247,8,159,213,27,120,44,185,130,12,221,99,173,224,111,29,250,57,135,60,195,216,175,21,127,194,147,188,113,235,95,16,52,203,164,200,119,100,137,133,68,190,230,248,115,74,240,241,146,9,68,175,176,84,140,173,48,80,52,218,7,26,13,143,187,190,186,128,200,215,210,86,152,67,2,34,243,96,186,200,46,193,108,100,47,180,57,119,126,144,179,19,109,20,210,60,34,254,127,66,16,85,72,192,223,44,47,65,211,33,177,13,50,24,60,49,69,20,123,158,51,195,48,14,74,19,176,69,63,20,240,76,252,35,69,84,195,248,86,110,233,239,67,183,99,96,59,163,44,4,141,110,66,254,162,202,112,142,121,164,81,194,138,252,149,233,203,6,20,208,40,48,177,204,162,97,188,212,139,199,146,229,212,187,139,175,153,194,166,54,72,28,158,24,207,74,165,64,24,203,80,92,111,26,14,43,119,139,111,144,150,200,109,202,114,166,66,180,19,106,249,69,171,2,83,42,81,133,133,231,92,149,121,254,151,90,20,91,179,195,192,189,139,63,136,141,177,159,50,26,142,26,19,219,175,241,28,16,9,103,57,255,14,39,253,155,38,52,28,234,145,188,116,243,243,36,121,22,170,55,132,68,93,95,238,170,230,24,189,149,194,78,254,218,233,227,78,39,28,125,218,9,21,195,78,194,100,218,248,166,76,7,29,217,179,87,92,181,140,150,123,77,182,205,227,233,97,215,94,13,49,136,102,23,13,224,226,36,221,64,193,70,123,96,143,107,172,171,90,215,160,130,216,72,157,79,125,248,186,253,101,236,31,190,112,179,241,88,104,131,242,39,153,190,225,235,141,209,129,111,143,178,2,89,97,254,92,226,166,176,182,204,70,62,253,239,77,8,95,17,218,49,196,183,106,135,221,231,94,104,132,181,8,207,55,144,74,149,69,35,34,75,19,188,17,222,24,134,228,211,39,127,56,186,107,150,99,215,45,154,70,70,149,128,155,19,183,17,103,10,114,193,109,137,46,5,50,204,153,48,179,50,199,6,128,229,90,160,182,207,176,2,134,21,58,151,131,18,43,121,153,5,246,109,208,93,192,255,68,56,220,206,178,130,139,59,193,109,167,254,27,50,50,176,125,57,159,38,216,121,10,73,92,8,28,163,16,159,101,217,28,86,129,222,134,189,112,74,93,9,173,71,207,119,112,250,210,151,189,89,14,76,181,165,36,241,243,161,86,46,215,190,40,81,6,188,68,253,255,226,211,213,158,208,65,47,63,171,216,110,132,121,163,155,111,92,32,42,110,50,137,115,77,193,234,52,58,141,246,6,87,124,83,138,232,104,18,200,241,35,208,113,131,235,212,14,181,86,179,86,172,24,181,107,231,186,147,89,76,249,235,57,16,114,107,235,246,151,110,225,158,9,84,203,186,114,6,118,212,161,12,222,151,107,250,91,116,37,137,70,166,91,35,28,37,231,71,47,119,47,88,15,174,27,137,126,224,219,45,96,6,194,185,65,172,195,155,171,134,193,160,191,75,49,4,123,72,251,131,214,224,93,10,109,152,72,97,186,187,66,90,234,132,71,111,4,217,238,206,206,73,214,31,78,89,123,3,241,53,226,92,14,59,77,91,215,118,31,77,201,251,56,18,210,120,159,92,232,250,194,196,179,247,145,215,74,59,178,213,141,105,134,183,23,3,158,189,150,214,182,85,43,62,199,18,217,216,102,154,79,233,190,66,184,17,92,135,218,29,101,245,12,59,164,253,123,31,119,229,98,111,104,196,29,218,157,155,30,167,33,226,126,169,8,26,67,82,134,49,17,186,248,150,194,214,93,181,160,142,194,229,107,161,20,142,196,200,253,121,178,121,147,222,112,101,237,212,59,234,47,28,80,176,222,198,62,124,245,140,19,112,69,208,88,92,187,119,155,253,213,55,116,239,218,104,149,182,121,173,2,195,236,98,250,187,182,55,4,203,175,118,23,95,254,3,231,175,175,77,102,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("fc80e659-5c97-4b8f-a38f-24e4568bb179"));
		}

		#endregion

	}

	#endregion

}

