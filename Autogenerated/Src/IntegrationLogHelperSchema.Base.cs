namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: IntegrationLogHelperSchema

	/// <exclude/>
	public class IntegrationLogHelperSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IntegrationLogHelperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IntegrationLogHelperSchema(IntegrationLogHelperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("dfd17064-a344-436c-a1b9-c5e9a8b61d7a");
			Name = "IntegrationLogHelper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("66e9e705-64b4-4dda-925e-d1e05a389eb6");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,85,219,110,219,70,16,125,182,1,255,3,171,135,128,2,188,10,197,59,97,164,192,222,152,8,176,146,160,106,250,90,48,212,90,38,64,46,213,37,169,88,40,252,239,29,94,36,145,180,172,234,129,192,114,110,103,206,204,236,108,85,36,114,163,173,246,69,41,178,135,187,219,170,247,59,123,76,228,63,99,217,159,226,165,28,203,104,158,166,34,46,147,92,22,179,207,66,10,149,196,99,19,22,149,209,81,70,190,47,87,249,83,9,126,74,156,17,102,89,46,207,218,206,24,57,47,231,178,76,202,68,20,160,189,187,149,81,38,138,109,20,139,158,141,124,74,54,149,138,234,20,239,110,255,189,187,189,217,86,63,211,36,214,226,52,42,10,109,33,75,177,105,181,143,249,230,139,72,183,66,105,181,213,193,172,40,65,25,107,74,68,235,92,166,123,237,115,149,172,181,101,148,164,244,57,201,182,45,197,197,90,251,164,73,241,171,81,234,19,159,134,220,115,230,1,114,185,135,145,237,88,12,5,166,231,35,195,118,9,227,62,165,190,101,77,166,15,215,128,172,132,218,9,117,22,5,251,22,195,38,15,145,239,89,1,178,125,230,35,50,183,49,114,67,106,5,196,113,156,144,248,87,160,252,216,174,163,82,172,132,92,67,105,87,96,81,21,223,160,6,77,69,70,136,20,115,26,88,46,70,62,247,61,100,227,96,142,124,194,49,50,92,199,9,92,215,118,60,66,175,64,172,177,104,148,109,163,100,35,223,131,10,25,182,41,49,45,68,205,208,65,182,73,40,242,29,110,35,3,19,102,96,195,34,6,197,87,66,145,229,119,16,36,82,44,161,223,117,77,129,231,123,176,36,116,44,215,181,60,100,58,33,69,182,193,66,132,29,27,104,26,30,156,105,192,185,203,175,128,93,100,219,92,149,44,81,237,205,24,55,206,10,29,211,199,30,242,49,16,180,109,203,129,130,90,33,34,38,241,109,22,218,28,91,215,128,240,151,75,32,6,243,185,225,155,4,64,2,23,217,20,226,227,57,153,35,147,4,46,11,76,19,51,126,85,175,170,56,22,69,241,135,40,170,180,28,67,24,33,53,152,73,145,107,153,208,35,12,61,194,36,240,80,0,189,33,33,49,92,155,187,215,240,80,42,87,103,1,152,107,134,102,192,77,132,109,7,56,248,108,142,2,110,185,136,24,115,134,45,106,98,202,88,7,208,128,168,100,7,163,124,10,255,163,16,10,238,191,108,11,164,253,93,13,254,251,137,157,219,2,250,200,125,232,61,109,151,196,77,242,164,233,67,141,246,9,56,84,105,122,176,184,41,159,85,254,171,161,133,213,166,202,132,44,191,130,154,191,196,98,91,219,235,147,161,127,199,232,230,21,190,230,48,202,27,74,52,34,210,25,190,30,11,209,146,218,229,80,93,160,163,55,101,46,186,29,114,223,86,61,63,221,128,78,178,62,77,82,39,81,93,83,238,161,113,170,94,188,107,81,196,42,105,178,62,202,68,221,62,118,82,104,67,246,117,125,126,107,77,103,139,162,38,254,77,241,108,91,238,245,94,176,169,246,225,67,63,248,236,81,200,77,249,172,253,174,57,134,113,172,227,122,0,210,55,95,85,63,91,8,221,184,111,92,186,10,254,79,6,227,212,155,52,198,194,243,185,156,97,253,198,241,98,86,187,72,105,69,252,44,178,8,92,71,29,110,223,180,253,170,81,47,35,25,109,132,154,133,137,92,47,36,220,32,25,11,178,255,10,15,157,62,25,142,237,97,112,234,208,162,137,0,161,91,140,25,133,75,81,138,54,174,62,130,235,220,90,151,217,74,148,76,60,193,179,94,101,242,175,40,173,68,161,191,49,232,105,7,73,28,222,169,9,76,71,119,156,62,104,31,63,30,159,203,78,124,41,92,111,53,67,152,222,152,78,47,102,209,219,131,224,214,155,229,203,110,135,189,3,62,135,105,159,30,238,211,187,80,167,30,215,80,189,249,185,8,213,236,185,161,239,155,1,28,6,136,118,162,171,125,61,51,240,189,254,7,104,126,243,52,178,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("dfd17064-a344-436c-a1b9-c5e9a8b61d7a"));
		}

		#endregion

	}

	#endregion

}

