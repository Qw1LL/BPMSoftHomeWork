namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ConditionalTransitionElementHandlerSchema

	/// <exclude/>
	public class ConditionalTransitionElementHandlerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ConditionalTransitionElementHandlerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ConditionalTransitionElementHandlerSchema(ConditionalTransitionElementHandlerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2af9086c-4bf0-45a0-926a-77e05a3df84d");
			Name = "ConditionalTransitionElementHandler";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d0bba11f-3986-4819-81ab-1d3ddbfc1f48");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,90,91,111,212,56,20,126,30,164,253,15,166,72,144,74,163,116,225,105,5,180,168,157,78,97,180,189,32,166,221,125,64,104,229,38,158,169,69,226,12,182,211,118,128,254,247,61,142,237,196,206,56,115,41,93,144,86,66,148,218,231,238,115,62,159,28,195,112,78,196,12,39,4,29,188,63,25,23,19,25,15,10,54,161,211,146,99,73,11,246,219,163,111,191,61,234,149,130,178,41,26,207,133,36,249,171,214,239,64,159,101,36,81,196,34,126,75,24,225,52,89,160,57,196,18,47,44,30,83,246,101,97,241,156,220,202,102,177,177,41,207,11,22,90,231,36,188,26,239,75,201,233,101,41,137,232,32,24,224,124,134,233,180,67,106,189,29,15,175,9,147,239,48,75,51,194,59,104,15,15,96,3,182,158,112,50,133,56,160,65,134,133,120,137,32,146,41,85,129,193,217,57,199,76,84,255,30,102,36,111,4,86,108,59,59,59,232,181,40,243,28,243,249,158,249,189,18,129,100,129,174,42,66,148,24,115,16,81,230,8,4,90,112,150,161,164,81,129,100,173,3,17,173,4,200,38,13,167,72,174,72,142,99,171,112,199,209,56,43,47,51,154,32,65,112,70,82,148,84,186,215,176,30,129,143,70,186,27,165,3,44,72,31,141,206,152,221,60,32,19,8,211,24,95,251,203,131,98,54,7,229,144,97,240,119,19,60,72,36,137,193,248,151,232,125,101,150,222,110,7,169,90,56,133,236,173,124,44,57,7,253,129,16,152,248,113,229,246,162,223,214,113,8,163,144,72,64,198,192,209,118,121,91,41,219,69,91,93,251,91,58,9,122,79,8,75,181,47,190,99,39,68,94,21,169,114,139,211,107,44,137,222,157,233,95,208,104,200,202,156,112,124,153,145,215,111,75,154,238,161,183,68,14,111,169,144,96,211,81,145,165,132,143,82,17,45,146,77,236,222,54,82,181,218,235,93,99,142,136,97,28,65,77,9,48,154,145,27,116,12,75,154,39,218,86,137,220,235,209,9,138,106,118,180,11,100,37,228,212,247,239,141,204,120,36,134,249,76,206,163,109,43,189,199,137,44,57,243,53,104,113,119,158,122,90,239,142,225,44,18,105,172,208,191,68,23,130,112,56,105,166,145,99,91,139,86,88,82,230,44,218,26,165,91,118,233,136,23,121,180,5,164,18,39,82,199,161,222,251,251,138,112,210,222,236,35,135,189,23,143,88,164,165,198,239,49,135,19,148,132,139,198,105,112,11,11,99,147,118,34,100,122,60,158,145,132,78,230,167,197,113,145,124,126,71,33,57,109,8,131,228,195,91,146,0,242,124,32,24,180,68,188,250,129,118,247,252,152,197,251,105,106,246,0,55,165,54,242,47,156,149,230,96,117,20,182,141,158,206,168,223,249,105,116,93,208,20,141,24,68,87,122,97,241,51,231,188,156,153,252,233,163,203,185,36,31,63,237,237,161,20,64,250,188,208,188,125,164,54,107,236,24,165,246,248,85,33,227,228,10,69,234,152,21,7,162,204,227,172,243,36,96,68,164,8,251,174,84,39,113,214,116,36,10,216,94,25,208,105,178,178,84,31,184,169,96,93,231,241,81,193,115,44,163,173,111,191,223,253,243,237,249,29,36,78,195,219,175,68,198,42,204,207,141,145,42,121,181,61,29,201,59,98,178,232,202,212,49,145,213,121,246,81,59,25,35,71,145,71,173,140,13,209,55,174,248,244,3,56,24,73,210,131,121,88,141,111,115,60,208,136,169,86,99,99,50,68,204,19,120,82,164,116,66,31,82,162,14,202,249,124,70,194,18,79,48,255,76,84,122,87,119,128,136,27,250,195,57,195,57,77,218,2,129,21,84,174,39,204,222,58,71,52,83,24,224,157,83,91,238,152,96,158,92,169,174,101,233,137,189,168,185,76,197,27,84,8,165,242,33,64,131,36,75,106,178,3,205,85,218,105,222,142,180,251,175,1,114,109,15,47,102,16,24,114,63,212,209,188,107,128,140,79,88,69,71,47,181,162,3,78,6,67,2,49,161,242,74,67,184,98,254,80,220,88,76,135,59,206,210,60,120,254,183,68,158,177,144,64,200,55,114,78,115,18,95,200,228,180,184,105,241,110,154,147,203,79,95,93,236,95,74,156,69,107,224,81,251,240,187,241,122,63,145,32,147,126,109,103,129,61,47,213,112,216,58,28,87,237,168,237,58,90,237,69,187,161,104,26,59,161,242,221,242,214,237,167,94,136,143,178,226,198,52,101,194,43,129,91,117,253,222,198,102,79,33,74,252,14,139,163,12,79,91,246,184,20,77,163,103,3,241,244,41,186,69,212,235,141,199,228,75,73,88,66,28,213,13,49,232,197,171,168,183,99,141,72,163,20,61,222,173,238,176,184,106,185,54,149,162,252,169,4,109,202,56,50,124,3,104,149,167,36,109,128,176,106,212,116,228,214,144,163,143,108,17,209,104,234,31,89,240,40,125,109,117,68,150,9,181,88,0,34,131,157,178,167,119,185,32,125,173,131,32,143,7,178,62,33,51,169,4,213,184,163,197,88,88,114,56,131,94,45,166,160,163,78,131,4,101,34,114,252,13,5,95,193,84,0,58,29,182,62,26,178,4,160,5,154,154,139,243,163,63,84,59,121,0,68,141,100,244,230,13,218,106,154,201,198,254,58,132,155,216,175,153,126,161,253,193,155,198,187,31,204,113,135,250,96,191,205,109,1,200,144,73,42,1,239,187,111,185,15,36,47,174,201,5,43,5,73,55,70,57,83,154,240,133,213,210,59,98,16,123,168,171,123,80,123,160,183,6,156,46,214,0,174,80,187,174,28,180,171,89,87,98,235,3,131,235,154,232,234,220,138,77,142,109,6,180,157,104,80,183,61,231,133,238,185,58,98,209,125,0,191,50,50,14,245,102,241,128,43,224,180,144,246,67,255,1,226,219,244,13,21,130,182,18,44,52,125,176,1,143,247,153,59,108,8,118,205,11,76,75,218,146,67,90,117,103,48,239,105,125,50,58,119,70,211,89,253,200,120,165,75,211,79,26,182,60,196,172,197,46,57,173,230,175,29,195,108,54,133,89,54,132,177,225,180,163,24,19,223,94,53,51,128,63,187,104,229,40,70,171,234,245,244,185,170,97,169,9,82,23,179,31,72,229,161,102,181,130,22,199,65,42,109,26,185,86,227,221,134,51,160,202,39,61,14,240,71,39,11,150,47,142,72,160,11,53,77,232,41,185,81,63,163,238,158,167,235,98,183,146,2,190,116,13,133,214,188,144,109,8,172,134,206,91,90,123,191,207,210,3,202,218,215,180,91,227,203,17,109,207,109,139,108,172,150,64,132,223,71,45,239,105,59,129,201,30,175,49,215,111,111,29,168,106,138,231,213,226,71,179,51,8,135,79,103,215,40,231,98,106,105,138,255,36,115,17,238,234,106,60,10,229,126,75,204,199,70,91,45,193,166,124,149,153,218,112,53,252,175,146,45,148,168,139,53,16,16,10,188,174,168,69,194,214,135,141,162,199,153,32,43,190,97,7,25,40,55,67,162,31,205,21,55,240,48,110,28,194,249,68,210,129,31,233,58,147,146,9,46,51,25,169,32,213,110,175,112,162,187,79,29,100,5,35,214,13,183,51,109,141,45,32,185,64,5,28,65,201,201,144,41,71,83,128,114,83,132,251,101,74,149,159,163,124,86,112,9,13,120,119,91,121,175,79,251,123,134,247,255,253,225,255,99,31,224,173,105,137,154,118,153,44,104,161,147,142,79,149,141,178,25,30,24,41,203,240,51,44,189,91,125,81,202,149,22,60,14,152,224,214,97,167,72,175,0,86,191,188,173,122,80,172,7,88,240,246,90,171,124,38,244,16,242,178,122,198,68,2,95,171,103,194,192,187,106,224,129,241,227,25,87,128,246,124,251,147,243,220,88,21,232,153,243,44,90,23,168,228,115,91,45,15,86,171,94,221,153,194,235,117,78,234,12,217,178,207,92,83,193,16,1,169,238,27,221,228,87,111,174,183,181,82,243,150,10,255,185,64,224,169,153,209,28,39,95,199,213,178,238,142,150,189,179,66,247,232,198,167,86,81,119,97,214,235,227,98,58,133,198,107,200,121,193,205,131,142,209,217,7,115,86,181,19,61,121,197,139,155,197,11,33,152,27,186,38,4,60,22,207,230,234,209,217,201,201,103,58,65,192,126,148,81,246,89,32,10,111,209,133,151,236,75,211,227,69,40,61,212,181,22,74,12,31,217,95,253,164,195,80,214,252,236,99,104,213,179,94,245,23,97,237,95,116,169,175,146,195,34,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateOnCopyExceptionLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateOnCopyExceptionLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("8bf5e243-9892-4fc1-9e2b-141cb6d52222"),
				Name = "OnCopyException",
				CreatedInPackageId = new Guid("d0bba11f-3986-4819-81ab-1d3ddbfc1f48"),
				CreatedInSchemaUId = new Guid("2af9086c-4bf0-45a0-926a-77e05a3df84d"),
				ModifiedInSchemaUId = new Guid("2af9086c-4bf0-45a0-926a-77e05a3df84d")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2af9086c-4bf0-45a0-926a-77e05a3df84d"));
		}

		#endregion

	}

	#endregion

}

