namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastObjectValueHistoryMatcherSchema

	/// <exclude/>
	public class ForecastObjectValueHistoryMatcherSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastObjectValueHistoryMatcherSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastObjectValueHistoryMatcherSchema(ForecastObjectValueHistoryMatcherSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7cdc37d9-7e92-22a7-f203-41f2f84b377c");
			Name = "ForecastObjectValueHistoryMatcher";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,85,223,107,219,48,16,126,118,161,255,195,145,65,113,160,56,176,199,46,14,180,105,187,5,154,174,52,163,47,99,15,170,125,142,181,217,82,38,201,45,97,244,127,239,73,150,157,216,73,105,55,232,219,30,18,208,233,251,238,199,119,119,178,96,37,234,21,75,16,206,110,230,11,153,153,104,42,69,198,151,149,98,134,75,17,93,74,133,9,211,230,238,35,252,57,60,56,60,8,42,205,197,18,22,107,109,176,36,108,81,96,98,129,58,250,140,2,21,79,62,245,49,87,92,252,222,24,55,81,202,82,138,125,118,133,209,37,75,140,84,28,53,221,19,226,131,194,37,133,128,153,48,168,50,155,235,9,204,154,196,190,222,255,164,12,238,88,81,225,23,174,137,182,158,51,147,228,168,28,117,52,26,193,88,87,101,201,212,122,226,207,30,6,210,49,225,193,82,53,148,53,11,120,19,36,106,232,163,45,254,170,186,47,120,178,1,189,33,15,175,91,91,197,28,77,46,83,125,2,55,206,87,125,217,207,211,25,156,131,78,154,64,177,164,74,181,205,109,55,185,218,178,98,138,149,32,168,175,241,160,192,204,108,122,52,152,124,203,17,172,13,146,214,8,70,210,169,36,22,70,228,206,177,247,59,83,124,153,239,120,115,198,55,187,83,104,42,37,244,100,172,17,33,81,152,197,131,69,142,104,6,163,201,120,212,92,90,244,236,66,84,37,42,118,95,224,216,203,185,37,240,173,83,97,82,11,20,110,99,247,128,186,26,28,91,239,193,43,148,94,165,67,59,166,129,235,33,138,180,110,163,107,219,19,253,236,124,118,173,77,163,167,5,211,212,230,119,26,212,189,227,249,253,28,51,86,21,230,140,139,148,182,42,52,235,21,202,44,124,125,72,135,199,112,77,77,134,24,6,222,197,96,248,99,51,239,137,45,229,245,74,222,180,151,255,247,225,31,246,193,247,225,253,214,2,220,94,252,237,98,216,94,18,171,235,43,154,230,152,252,58,85,75,242,36,204,117,85,20,161,125,64,104,14,187,184,97,189,87,65,207,233,203,244,126,116,207,127,96,10,148,124,212,52,188,2,31,225,138,116,121,89,156,208,147,50,26,83,70,175,107,184,3,113,202,204,232,203,69,175,124,79,165,166,94,23,146,98,221,202,71,31,244,165,120,97,227,204,135,13,108,162,209,105,154,134,53,189,49,187,26,108,121,46,112,220,23,58,186,228,138,86,74,249,221,12,185,67,77,124,211,2,123,140,110,49,187,16,134,155,245,44,133,56,110,171,232,216,143,142,182,25,228,191,42,69,15,222,26,187,216,27,250,182,203,180,135,109,141,93,236,222,52,26,163,7,54,133,243,12,234,190,214,133,147,154,212,240,86,231,160,86,41,242,242,46,12,51,246,141,218,62,70,231,88,160,193,212,251,179,79,114,243,95,47,144,155,13,119,75,214,253,143,248,206,27,254,244,12,200,127,115,198,23,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7cdc37d9-7e92-22a7-f203-41f2f84b377c"));
		}

		#endregion

	}

	#endregion

}

