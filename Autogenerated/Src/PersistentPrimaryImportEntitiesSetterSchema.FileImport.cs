namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: PersistentPrimaryImportEntitiesSetterSchema

	/// <exclude/>
	public class PersistentPrimaryImportEntitiesSetterSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public PersistentPrimaryImportEntitiesSetterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public PersistentPrimaryImportEntitiesSetterSchema(PersistentPrimaryImportEntitiesSetterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("dde63564-5b84-41c8-9562-f1ec48fb83d6");
			Name = "PersistentPrimaryImportEntitiesSetter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,75,111,219,56,16,62,171,64,255,3,225,94,104,192,144,177,215,77,236,34,15,39,107,32,233,26,113,118,247,88,48,50,109,19,149,73,45,73,185,113,139,252,247,29,190,36,138,82,210,96,15,65,76,106,30,223,204,124,51,67,78,14,84,85,164,160,232,114,117,191,22,91,157,95,9,190,101,187,90,18,205,4,207,111,88,73,151,135,74,72,253,241,195,207,143,31,178,90,49,190,67,235,147,210,244,112,214,156,91,93,73,243,5,215,76,51,170,206,18,113,248,90,150,180,48,102,85,126,75,57,149,172,232,201,220,49,254,239,144,221,195,65,240,97,127,175,160,184,33,133,22,210,193,0,137,79,146,238,192,49,186,42,137,82,191,163,21,149,138,129,67,174,87,146,29,136,60,185,24,3,244,53,213,154,74,171,56,157,78,209,185,170,15,70,104,238,207,23,28,49,174,52,225,144,54,177,69,122,207,20,42,140,97,4,63,36,228,19,34,100,79,37,69,91,33,145,2,91,6,93,229,28,33,102,61,33,234,93,229,193,199,52,114,82,213,79,37,43,188,205,119,98,205,76,121,154,56,111,24,45,55,38,80,201,142,68,83,243,201,252,85,238,136,10,64,168,145,210,210,32,251,10,144,69,45,11,122,79,56,217,81,249,5,56,129,102,104,244,46,199,163,179,216,110,176,248,84,111,189,240,115,65,203,7,241,125,201,55,244,57,24,30,248,212,53,179,116,18,119,98,7,112,208,215,210,254,119,133,204,62,81,190,113,65,250,179,143,120,37,69,69,165,1,246,106,212,127,41,42,129,222,220,145,48,61,254,68,59,170,207,208,75,170,229,176,172,136,4,244,16,176,234,95,120,77,229,213,99,229,59,81,144,146,253,32,192,134,181,203,205,141,168,249,230,186,174,160,192,32,112,77,52,49,137,168,28,4,163,154,129,49,255,43,147,84,215,146,35,78,191,247,45,225,7,95,182,53,16,29,234,54,25,44,228,196,25,202,70,61,125,149,191,1,37,255,155,148,53,29,141,243,71,225,189,141,109,133,50,155,158,126,142,18,44,40,61,71,145,33,31,84,55,253,249,63,66,126,179,147,40,79,116,125,73,146,196,118,41,226,255,205,230,129,44,232,243,103,132,195,239,153,107,123,55,18,78,48,123,244,121,71,125,142,45,58,147,101,0,4,28,174,141,224,133,220,213,7,32,63,30,213,29,164,163,73,2,125,60,65,111,235,179,132,48,96,33,229,208,120,60,254,5,191,35,203,8,24,110,39,132,79,137,155,22,239,106,87,156,144,190,27,218,216,215,41,17,154,37,98,103,81,61,98,184,142,19,1,240,61,213,123,209,153,65,113,253,142,130,109,208,159,60,194,120,90,72,41,36,110,187,1,24,29,127,246,147,211,29,38,232,182,6,3,238,106,77,149,2,133,229,38,224,63,18,137,232,17,50,1,53,80,0,223,84,38,54,181,38,71,106,189,45,26,33,223,112,173,247,25,248,119,119,29,16,179,46,140,88,162,129,209,8,53,55,174,117,92,7,57,206,229,127,16,190,41,105,227,15,155,45,50,105,81,187,118,235,53,154,77,27,148,210,151,56,20,247,129,30,196,145,54,173,140,175,153,45,20,72,156,215,140,235,110,34,231,104,79,212,254,209,76,2,248,112,43,69,93,65,131,123,193,32,178,51,215,238,16,103,149,245,71,55,68,27,9,195,139,65,42,141,199,166,203,30,79,21,221,192,214,175,15,220,142,19,235,98,142,223,216,14,126,200,176,45,110,32,230,143,242,4,182,172,1,60,224,126,130,68,173,187,68,169,76,91,121,236,1,60,216,68,56,198,121,5,195,15,112,162,217,12,253,214,8,101,145,106,30,231,248,52,28,165,131,155,189,184,1,144,209,82,133,81,215,73,151,163,119,68,45,67,200,107,219,182,233,224,197,111,12,229,224,46,27,234,155,65,87,147,56,23,253,169,147,39,196,109,28,180,217,119,204,26,74,124,19,124,103,47,244,200,10,123,185,0,251,129,169,120,185,224,48,22,165,49,126,30,200,22,30,67,49,211,108,182,47,27,134,155,126,12,79,38,75,217,203,19,22,102,224,139,255,201,52,15,223,184,106,162,5,39,189,20,5,0,176,9,219,174,194,32,10,176,243,36,23,240,222,163,164,216,99,59,127,252,208,226,105,36,13,217,126,221,198,81,159,58,115,241,18,206,94,133,10,97,180,5,180,249,48,232,239,88,195,216,102,172,188,182,108,218,217,29,237,153,244,41,108,47,32,8,133,232,51,216,54,143,155,80,34,164,197,208,67,183,255,210,117,55,150,164,136,67,28,179,81,213,174,201,185,139,208,113,216,133,120,62,181,135,97,213,224,106,52,95,164,128,58,138,126,97,134,89,138,123,15,186,214,225,4,189,135,175,17,192,171,61,45,190,133,213,255,165,46,75,108,176,137,45,110,101,2,245,96,202,53,240,46,248,9,183,179,170,7,104,22,65,242,109,151,246,85,131,201,127,247,107,198,172,58,248,153,62,223,6,138,239,110,227,203,151,255,0,226,207,10,184,30,14,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateFoundDuplicateDataExceptionLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateFoundDuplicateDataExceptionLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("167a84ec-7b08-4fb0-af8f-a6075508b79c"),
				Name = "FoundDuplicateDataException",
				CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8"),
				CreatedInSchemaUId = new Guid("dde63564-5b84-41c8-9562-f1ec48fb83d6"),
				ModifiedInSchemaUId = new Guid("dde63564-5b84-41c8-9562-f1ec48fb83d6")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("dde63564-5b84-41c8-9562-f1ec48fb83d6"));
		}

		#endregion

	}

	#endregion

}

