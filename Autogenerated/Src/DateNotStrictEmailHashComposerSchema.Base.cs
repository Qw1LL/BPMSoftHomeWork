namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DateNotStrictEmailHashComposerSchema

	/// <exclude/>
	public class DateNotStrictEmailHashComposerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DateNotStrictEmailHashComposerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DateNotStrictEmailHashComposerSchema(DateNotStrictEmailHashComposerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("24733d4d-8f04-4aad-aee5-3ff56062b864");
			Name = "DateNotStrictEmailHashComposer";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5e01e2a5-733f-47cc-a4c2-452cdff090f0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,83,75,111,219,48,12,62,59,64,254,3,225,93,108,32,115,176,107,215,4,104,30,221,2,44,93,177,116,151,21,61,40,54,157,104,144,165,64,146,59,4,67,254,251,40,249,145,103,3,12,168,15,6,200,143,252,72,126,164,36,43,208,108,88,138,48,122,156,47,84,110,147,177,146,57,95,149,154,89,174,100,183,243,183,219,9,74,195,229,10,22,91,99,177,248,124,98,83,188,16,152,186,96,147,124,65,137,154,167,251,152,61,169,198,203,222,228,158,165,86,105,142,134,112,138,248,160,113,69,92,48,22,204,152,27,152,48,139,15,202,46,44,209,218,105,193,184,248,202,204,122,172,138,141,50,168,125,70,191,223,135,91,83,22,5,211,219,97,109,251,108,72,53,82,186,1,116,121,176,166,68,50,184,76,69,153,185,54,136,194,240,165,64,176,188,64,200,80,176,173,73,26,194,254,1,227,243,4,115,86,10,59,226,210,37,70,118,187,65,149,71,179,179,126,226,30,60,144,160,48,128,240,122,227,97,252,66,188,155,114,41,120,10,169,111,246,122,2,220,192,136,25,188,160,64,64,27,162,127,43,220,28,237,90,101,36,221,163,103,175,192,83,141,106,7,34,19,70,57,157,242,65,120,62,14,237,211,58,27,77,244,147,76,186,12,89,109,186,7,109,236,228,233,123,28,246,135,192,139,141,192,2,165,245,119,227,100,60,215,177,25,88,189,162,214,60,67,152,77,101,89,160,102,180,132,91,67,131,203,213,16,222,170,9,229,149,22,170,21,199,224,174,53,8,190,113,99,91,190,122,237,3,144,248,7,14,145,40,118,23,25,4,60,135,232,152,219,205,61,51,247,116,60,165,198,169,116,237,101,81,72,237,180,251,89,160,204,220,194,76,24,55,69,131,87,166,161,224,178,180,56,194,156,46,155,74,250,174,146,38,56,185,203,178,185,15,48,209,199,79,117,245,131,180,187,220,210,162,175,101,181,73,213,80,14,250,193,228,10,163,86,180,153,36,14,201,196,201,68,61,63,253,145,98,117,215,129,171,115,82,22,117,175,1,203,229,111,98,216,163,149,221,194,117,143,132,31,78,222,192,35,149,109,219,84,103,52,192,19,61,184,95,74,238,37,106,28,21,190,139,223,119,78,184,240,189,53,246,197,216,255,84,193,47,242,221,68,216,249,191,70,58,70,89,95,179,7,200,239,223,61,85,175,158,190,183,43,239,177,115,215,237,252,3,216,114,237,122,232,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("24733d4d-8f04-4aad-aee5-3ff56062b864"));
		}

		#endregion

	}

	#endregion

}

