namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SysSettingsServiceSchema

	/// <exclude/>
	public class SysSettingsServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SysSettingsServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SysSettingsServiceSchema(SysSettingsServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("90e12b08-127f-458f-8d41-8010f4d35587");
			Name = "SysSettingsService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("14a29563-3c13-443c-a7aa-8d0c90d831c2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,85,77,107,219,64,16,61,43,144,255,176,56,23,153,152,165,180,183,132,30,172,184,14,46,149,109,162,52,57,152,30,214,210,216,17,145,118,213,221,149,91,81,242,223,59,43,201,250,174,19,232,169,80,112,28,118,190,222,204,155,183,107,206,98,80,9,243,129,56,107,215,19,59,77,111,4,223,133,251,84,50,29,10,78,189,76,121,160,117,200,247,248,95,30,66,31,206,207,126,157,159,89,169,66,19,65,175,134,248,186,115,166,101,164,43,2,136,78,58,233,35,108,79,7,76,125,29,30,242,86,234,184,186,83,9,195,86,58,115,250,14,196,66,103,28,55,75,153,224,198,136,228,99,187,204,31,185,192,10,88,99,83,182,138,97,90,50,95,127,51,182,169,74,150,160,17,40,193,172,109,24,133,58,187,131,239,105,40,33,6,174,149,221,60,152,25,17,243,149,20,19,69,75,67,48,54,32,73,186,141,66,159,248,17,83,138,244,87,68,174,136,195,20,84,11,179,204,198,44,243,119,33,97,143,163,16,23,244,147,8,212,21,89,231,149,142,238,205,42,129,98,216,230,72,214,6,169,91,240,131,120,6,187,72,196,158,71,235,149,119,63,154,16,71,4,153,167,179,200,204,129,97,46,40,197,246,80,89,233,163,100,73,2,193,196,212,177,204,16,160,244,92,200,152,233,86,66,97,162,159,149,224,19,114,135,146,20,92,193,233,184,156,137,35,21,33,215,228,22,244,130,251,5,105,15,44,74,193,86,90,154,45,171,138,161,37,202,125,76,114,58,172,3,147,196,239,237,159,195,143,174,42,236,175,10,36,18,194,1,197,136,184,70,62,150,101,16,37,168,52,42,176,48,245,93,233,216,17,187,83,151,206,65,251,79,115,41,226,153,99,143,110,112,159,200,92,167,171,99,91,121,225,218,167,190,48,165,151,105,188,5,137,16,216,197,1,164,166,247,98,193,245,135,247,118,167,83,138,20,204,96,87,12,223,238,186,143,87,116,107,93,94,14,130,149,222,46,128,247,102,128,230,185,81,247,8,219,166,238,68,11,47,249,183,4,157,74,222,36,60,247,190,252,251,202,45,53,218,19,239,131,114,153,122,30,150,48,114,219,53,155,224,166,186,123,1,202,200,206,68,97,87,101,213,241,128,124,94,91,109,133,115,221,132,41,246,98,22,153,159,233,167,56,209,89,125,29,110,35,177,101,209,52,73,42,36,4,152,57,158,33,149,251,85,207,249,149,84,165,209,101,73,121,29,189,218,50,124,21,91,121,166,137,58,193,140,228,100,166,225,149,68,225,50,236,210,238,92,132,150,32,235,17,138,125,217,3,4,78,42,0,83,125,9,63,75,210,170,43,213,18,107,83,197,127,251,228,252,127,89,150,111,125,89,222,184,200,19,133,6,30,158,246,155,115,1,60,40,126,79,241,132,86,252,252,6,17,172,209,40,79,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("90e12b08-127f-458f-8d41-8010f4d35587"));
		}

		#endregion

	}

	#endregion

}

