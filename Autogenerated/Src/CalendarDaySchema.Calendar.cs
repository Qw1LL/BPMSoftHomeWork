namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CalendarDaySchema

	/// <exclude/>
	public class CalendarDaySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CalendarDaySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CalendarDaySchema(CalendarDaySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("3532f288-0e70-420a-bfb7-c220e4e8a174");
			Name = "CalendarDay";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("761f835c-6644-4753-9a3e-2c2ccab7b4d0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,85,77,79,219,64,16,61,27,137,255,48,130,75,114,168,211,51,37,65,109,90,161,72,164,69,13,136,243,198,158,132,41,246,174,217,29,19,185,21,255,189,179,246,134,56,31,36,192,37,113,198,243,245,222,188,153,104,149,163,43,84,130,240,237,122,60,49,51,142,135,70,207,104,94,90,197,100,116,60,84,25,234,84,89,119,124,244,239,248,40,42,29,233,57,76,42,199,152,127,217,248,45,145,89,134,137,15,115,241,37,106,180,148,108,249,92,145,126,20,163,152,79,45,206,197,21,134,153,114,14,206,96,89,233,187,170,234,247,189,94,15,206,93,153,231,202,86,131,240,251,55,22,22,29,106,118,160,32,9,1,144,170,42,94,6,244,90,17,69,57,205,40,129,164,46,208,74,47,197,70,107,213,34,129,38,159,171,150,4,1,187,198,86,88,122,82,140,144,120,27,144,102,248,105,244,157,177,15,2,106,164,25,237,147,202,160,15,159,27,80,209,169,100,109,178,172,167,188,182,166,64,203,132,30,234,117,221,88,227,176,9,179,54,248,38,205,12,22,136,15,30,217,54,180,37,54,113,252,53,187,19,183,214,147,159,83,20,205,145,61,249,81,228,194,195,243,158,122,195,21,149,140,55,148,227,161,170,141,87,139,212,96,248,64,109,161,19,22,13,159,126,146,80,52,76,85,251,91,152,26,147,193,200,173,102,241,145,210,203,80,246,173,83,24,166,219,95,248,138,28,159,111,204,127,0,27,6,247,145,110,110,53,61,150,210,71,42,250,166,25,161,245,18,240,140,112,85,28,24,200,101,73,169,87,192,141,120,222,142,210,3,213,95,211,104,45,123,91,38,108,236,155,84,58,210,196,164,50,250,43,162,86,160,113,33,28,58,86,90,142,137,116,206,247,40,33,40,155,99,113,214,63,105,45,220,73,111,208,44,229,126,80,173,136,78,55,64,218,226,185,95,215,221,57,148,78,247,45,160,199,200,247,38,125,19,222,75,228,122,30,139,150,108,94,129,80,91,44,114,105,181,91,219,234,118,236,42,180,237,25,208,167,70,190,209,215,12,184,252,126,189,240,208,4,172,45,64,109,143,224,98,199,125,10,175,206,182,100,26,79,202,188,67,208,31,64,135,226,31,58,133,79,64,241,132,149,229,110,124,99,88,101,99,210,37,163,235,30,190,32,22,229,6,44,117,96,166,127,228,143,64,36,160,228,100,214,183,218,20,213,82,20,73,105,173,72,252,69,44,239,161,240,235,161,244,228,118,229,221,193,111,200,49,204,140,94,209,250,36,39,48,241,22,209,85,167,253,31,209,29,99,62,69,187,32,135,33,162,217,172,218,57,126,151,42,55,157,67,166,48,209,58,225,30,221,54,214,117,227,243,127,131,48,94,16,197,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("3532f288-0e70-420a-bfb7-c220e4e8a174"));
		}

		#endregion

	}

	#endregion

}

