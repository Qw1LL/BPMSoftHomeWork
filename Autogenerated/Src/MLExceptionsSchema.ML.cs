namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MLExceptionsSchema

	/// <exclude/>
	public class MLExceptionsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLExceptionsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLExceptionsSchema(MLExceptionsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("adbab915-dfa7-4d76-8933-ffdeab5c8df5");
			Name = "MLExceptions";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("73704ec6-562c-4400-8a4a-17477a18625f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,87,223,79,219,48,16,126,46,18,255,195,41,236,1,164,170,125,239,128,73,48,54,33,209,137,81,180,119,55,185,180,158,18,187,179,157,21,134,248,223,119,62,39,109,19,160,161,163,32,198,3,194,230,124,223,249,187,31,159,3,74,228,104,103,34,70,56,185,28,142,116,234,122,167,90,165,114,82,24,225,164,86,189,225,197,238,206,221,238,78,167,176,82,77,96,116,107,29,230,31,27,235,222,85,161,156,204,177,55,66,35,69,38,255,240,81,178,34,187,61,131,19,90,192,105,38,172,29,192,185,250,77,6,201,181,17,82,141,208,125,47,208,220,158,221,196,56,243,39,248,64,191,223,135,67,91,228,185,48,183,199,229,250,10,103,6,45,42,103,1,141,209,198,130,155,10,7,58,142,11,3,73,97,124,40,82,57,52,100,230,252,66,167,48,188,128,92,39,152,193,47,143,1,120,227,93,88,127,165,10,164,223,64,57,180,136,34,179,26,98,131,233,81,84,222,109,17,93,4,125,111,57,43,198,153,140,33,246,247,89,127,29,24,192,202,213,58,196,34,253,94,18,162,149,117,166,136,29,93,103,0,151,236,53,88,52,25,224,141,115,37,29,115,139,22,4,40,156,211,133,173,19,138,18,71,151,117,83,228,240,203,208,215,134,21,245,143,67,244,158,136,135,76,132,157,153,48,34,7,95,28,71,17,21,136,21,19,140,142,175,9,165,92,132,4,36,104,99,35,199,20,146,15,128,83,211,59,236,243,89,118,85,114,181,54,156,125,98,193,167,172,116,124,224,207,117,6,48,22,22,247,171,61,240,21,216,185,255,15,232,97,14,234,36,81,229,101,4,20,56,50,40,44,37,63,37,35,166,172,66,173,209,246,0,66,42,133,102,25,97,64,90,148,25,163,200,224,63,22,133,93,92,153,186,195,80,211,44,77,187,149,119,130,39,150,138,44,163,128,82,36,35,226,73,166,160,52,48,212,138,115,242,107,103,24,203,84,98,242,210,220,118,151,253,16,112,22,203,199,178,222,109,218,212,170,96,15,85,18,58,137,215,97,183,177,217,152,61,223,180,59,83,186,152,76,63,11,39,190,104,195,49,83,120,47,156,63,146,201,54,68,160,37,2,137,109,198,128,132,64,56,207,139,65,228,74,188,109,14,160,214,59,109,52,132,140,118,24,59,76,182,213,104,173,209,109,220,108,82,165,58,212,255,10,204,245,96,157,14,213,87,231,222,65,32,146,189,115,34,167,58,75,66,255,216,210,22,19,208,227,159,68,70,200,163,24,235,194,213,59,22,198,232,75,219,77,141,158,183,180,111,172,73,155,110,220,198,113,59,154,22,57,129,156,150,231,155,97,123,191,60,89,74,128,66,100,148,13,170,185,156,29,172,68,109,117,97,124,134,72,45,209,146,66,6,128,90,59,87,185,111,47,169,253,7,132,50,106,23,154,1,87,113,213,186,59,152,86,255,89,215,211,111,34,149,219,47,209,23,203,101,123,2,26,146,9,175,43,151,175,76,209,59,151,204,165,86,86,56,75,201,220,103,150,50,161,38,115,109,18,102,106,74,196,248,70,37,66,225,135,180,190,37,79,132,149,241,193,63,234,235,166,197,208,166,177,91,23,217,199,244,242,140,83,58,159,202,12,129,148,51,145,49,191,202,253,39,3,237,16,191,210,221,62,170,130,53,109,27,177,249,25,91,95,150,94,180,106,81,182,90,56,27,149,249,98,26,215,4,183,140,101,46,221,148,92,44,82,21,170,182,2,44,201,236,109,117,50,192,35,213,208,66,201,70,111,233,78,231,189,243,21,10,229,60,137,142,195,141,121,6,84,245,212,54,0,248,205,229,207,14,249,241,181,230,232,51,185,253,90,72,186,70,25,82,23,120,89,130,212,136,254,16,61,81,254,225,44,220,85,62,238,33,124,68,135,215,225,93,233,235,62,90,51,191,223,56,65,32,84,66,70,203,129,231,52,131,52,135,216,19,227,148,118,86,167,245,123,200,245,91,232,196,146,175,10,209,255,108,91,43,96,187,37,252,204,111,179,13,138,219,103,161,81,218,3,184,171,251,254,212,27,134,74,187,143,248,219,180,211,121,74,142,66,59,208,31,127,1,60,109,69,124,178,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("adbab915-dfa7-4d76-8933-ffdeab5c8df5"));
		}

		#endregion

	}

	#endregion

}

