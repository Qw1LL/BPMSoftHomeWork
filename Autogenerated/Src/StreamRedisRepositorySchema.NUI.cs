namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: StreamRedisRepositorySchema

	/// <exclude/>
	public class StreamRedisRepositorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public StreamRedisRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public StreamRedisRepositorySchema(StreamRedisRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("3edc45b2-e4ec-4f0f-9399-f20f81ffda1d");
			Name = "StreamRedisRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,75,111,219,56,16,62,43,64,254,195,172,122,145,129,66,190,39,177,139,172,225,20,6,154,69,144,4,187,135,160,40,104,105,108,19,75,145,2,73,57,53,138,252,247,29,146,122,71,201,182,61,72,176,230,61,223,55,28,90,178,2,77,201,50,132,63,239,110,31,212,206,166,43,37,119,124,95,105,102,185,146,231,103,63,206,207,206,207,162,202,112,185,135,135,147,177,88,92,142,190,201,67,8,204,156,185,73,63,163,68,205,179,206,102,47,212,150,137,139,139,149,42,10,37,211,47,106,191,39,113,167,239,210,58,253,148,92,99,250,96,233,77,58,210,126,208,184,167,76,176,18,204,152,11,120,176,26,89,113,143,57,55,247,88,42,195,201,242,228,13,231,243,57,92,153,170,40,152,62,45,235,111,239,4,246,192,44,240,162,20,88,160,180,6,116,235,8,86,209,23,197,130,157,210,228,141,8,153,198,221,34,118,5,176,173,192,144,46,158,47,129,60,185,61,165,77,162,121,47,83,89,109,5,207,32,243,201,38,11,188,128,77,247,113,53,12,190,246,129,93,156,0,125,219,241,13,71,145,83,203,119,154,31,153,197,160,44,195,7,108,86,44,59,160,199,9,190,101,237,239,128,89,244,1,101,30,162,12,67,222,105,85,162,182,28,125,88,101,137,69,204,71,129,137,49,248,38,148,167,140,164,181,81,144,187,103,177,244,106,248,244,9,18,255,99,225,196,183,76,178,61,106,154,7,235,40,71,157,196,153,103,248,186,44,169,24,212,241,108,246,63,197,209,32,26,171,171,140,250,112,229,121,80,235,218,2,192,147,208,38,51,248,1,47,63,97,215,71,172,3,140,188,157,103,212,73,210,213,1,179,127,175,245,190,114,211,242,87,37,68,18,79,70,76,123,5,3,171,237,99,215,37,197,235,113,66,0,13,8,138,162,151,247,129,184,69,123,80,249,20,69,45,25,189,94,8,241,238,203,161,225,243,243,29,177,211,171,225,143,5,72,106,165,81,71,26,109,165,229,104,116,34,95,26,189,143,76,131,65,99,168,154,166,133,26,27,103,254,228,223,95,240,136,34,125,8,86,95,47,219,172,67,191,81,90,23,24,181,86,250,150,172,104,96,40,112,252,120,64,178,164,51,40,155,195,104,220,1,217,99,26,135,168,17,77,84,186,118,94,73,223,183,70,58,178,7,173,158,65,226,51,56,178,238,113,71,225,100,134,235,239,25,150,110,73,77,57,133,54,107,16,250,21,255,26,63,189,25,29,175,159,176,127,104,108,44,154,122,121,184,109,99,15,216,182,7,141,217,163,235,192,192,134,150,235,181,32,151,252,180,254,206,141,109,59,0,194,181,14,65,232,176,96,2,232,108,140,219,72,175,87,82,144,148,76,179,2,36,173,252,69,28,252,227,101,88,55,233,213,220,43,59,219,128,133,169,245,192,115,50,105,100,189,179,117,228,218,86,76,192,231,138,231,117,123,201,212,62,171,235,237,143,227,104,80,221,170,248,155,137,10,167,247,97,82,47,220,77,158,62,42,210,208,29,145,204,102,175,230,184,35,255,77,244,146,1,231,163,42,158,166,210,124,165,177,12,242,203,254,156,180,166,205,144,68,209,155,204,223,112,153,27,216,58,32,129,83,101,192,101,203,123,99,179,217,213,42,119,253,84,50,7,70,79,193,44,85,71,151,214,169,68,168,9,240,102,31,27,55,69,51,164,143,220,116,106,135,200,207,206,1,207,227,165,131,42,48,252,198,16,56,131,247,249,159,228,220,53,157,248,201,224,121,195,144,63,241,65,189,24,239,170,39,62,64,189,219,33,221,176,79,230,49,3,225,120,167,13,181,53,247,128,130,0,27,26,58,216,122,163,81,159,250,73,58,239,177,80,71,98,197,243,181,211,170,104,200,12,20,191,162,244,153,25,200,81,160,91,214,13,75,116,85,224,175,176,244,38,59,239,18,115,84,4,127,40,119,76,197,248,0,214,86,3,18,194,89,25,222,167,77,232,205,90,210,29,231,177,157,62,179,240,143,91,229,201,77,37,179,73,131,143,176,85,74,44,161,116,107,62,163,63,156,244,180,55,112,111,141,43,187,105,254,173,97,62,62,199,191,91,27,117,127,77,119,249,111,166,27,221,5,65,58,20,190,192,127,96,167,39,232,93,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("3edc45b2-e4ec-4f0f-9399-f20f81ffda1d"));
		}

		#endregion

	}

	#endregion

}

