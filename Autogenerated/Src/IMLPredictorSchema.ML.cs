namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: IMLPredictorSchema

	/// <exclude/>
	public class IMLPredictorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IMLPredictorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IMLPredictorSchema(IMLPredictorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("aeb1fe7c-c682-4da4-9982-b4e533fa8b82");
			Name = "IMLPredictor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("73704ec6-562c-4400-8a4a-17477a18625f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,85,221,106,219,48,20,190,78,32,239,112,240,205,86,8,246,3,204,245,197,90,40,6,155,5,154,61,128,34,31,167,218,100,201,232,103,155,25,123,247,233,199,78,220,100,107,183,177,148,130,47,116,164,239,252,125,223,145,44,72,135,186,39,20,225,253,166,190,151,173,73,111,164,104,217,222,42,98,152,20,105,93,173,150,223,87,203,133,213,76,236,225,126,208,6,187,119,39,182,115,225,28,169,199,235,244,14,5,42,70,143,152,99,92,133,233,70,73,138,90,63,78,226,176,14,157,101,25,228,218,118,29,81,67,49,218,165,48,168,90,95,93,43,21,176,174,231,216,161,48,193,75,131,108,161,87,216,48,106,164,210,1,81,87,96,136,254,172,211,41,94,118,18,48,55,67,143,61,81,164,3,225,58,191,78,182,31,172,73,138,237,3,130,63,241,33,141,91,75,107,210,60,59,96,189,119,111,119,156,81,96,135,138,202,186,218,76,217,115,31,198,163,60,85,103,157,132,141,173,98,168,193,200,169,100,95,226,121,141,113,103,94,96,39,27,228,145,174,164,112,253,5,27,232,35,145,242,236,80,230,121,128,134,24,18,59,100,162,183,6,188,253,180,135,66,109,249,200,74,92,207,168,126,54,223,17,247,81,163,218,58,57,146,194,175,130,50,240,149,153,135,89,40,192,111,70,17,8,254,250,60,174,66,99,149,208,69,217,2,37,226,141,153,60,97,60,128,156,22,45,225,26,243,140,22,206,125,194,251,0,59,41,185,99,125,24,69,122,91,87,245,145,202,72,99,92,175,225,54,22,227,52,200,181,81,110,104,215,32,119,159,220,68,23,129,173,181,15,183,112,51,1,94,230,145,146,181,27,182,91,119,184,57,107,119,214,222,97,235,26,132,229,252,42,78,250,175,7,100,12,164,39,202,119,3,236,217,23,20,115,217,254,102,102,202,102,54,47,172,113,215,134,181,12,213,255,30,150,75,200,125,228,116,36,227,68,218,32,195,164,235,157,101,77,236,178,108,158,151,242,5,84,243,121,160,85,178,27,245,243,204,155,225,242,218,197,60,222,213,235,23,173,63,118,126,101,50,6,107,106,232,210,162,197,127,135,127,247,163,96,156,233,240,226,41,164,82,53,250,69,95,234,202,229,78,138,234,164,130,87,39,93,229,10,140,63,189,131,128,79,188,175,101,128,255,254,106,198,187,233,65,241,169,253,55,185,23,63,86,75,247,253,4,204,25,227,85,210,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("aeb1fe7c-c682-4da4-9982-b4e533fa8b82"));
		}

		#endregion

	}

	#endregion

}

