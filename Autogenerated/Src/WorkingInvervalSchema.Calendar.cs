namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: WorkingInvervalSchema

	/// <exclude/>
	public class WorkingInvervalSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public WorkingInvervalSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public WorkingInvervalSchema(WorkingInvervalSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("63f091f3-e8da-4447-9246-7bfa1390acc5");
			Name = "WorkingInverval";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("761f835c-6644-4753-9a3e-2c2ccab7b4d0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,85,81,107,219,64,12,126,118,161,255,65,164,80,18,72,147,247,54,241,88,219,49,10,43,45,164,99,15,99,15,23,91,78,110,181,239,204,221,57,161,140,254,247,233,78,182,155,218,89,151,178,61,216,216,178,164,251,244,233,147,172,68,129,182,20,9,194,229,253,237,66,103,110,114,165,85,38,87,149,17,78,106,53,185,18,57,170,84,24,123,124,244,235,248,40,170,172,84,43,88,60,89,135,197,197,241,17,89,78,12,174,200,49,90,56,83,37,14,206,225,155,54,143,228,116,163,54,104,54,34,15,78,211,233,20,102,182,42,10,97,158,226,250,253,35,88,14,113,107,225,192,96,105,208,162,114,22,4,108,57,5,72,229,66,14,216,74,183,134,133,19,198,129,80,41,124,162,171,212,50,56,91,120,144,5,46,74,161,64,47,127,98,226,108,157,223,59,138,220,106,40,141,222,200,20,45,88,93,32,84,78,230,210,73,122,117,58,28,196,201,165,155,52,56,167,59,64,191,223,45,173,206,209,225,112,240,213,226,75,109,53,46,169,136,8,145,78,6,163,31,228,92,86,203,92,38,77,89,61,30,34,34,144,238,45,99,247,70,151,104,2,148,115,184,15,177,236,208,101,43,24,184,122,71,181,114,233,30,110,31,111,131,161,229,132,195,124,235,162,104,133,238,34,60,148,70,110,132,67,176,181,225,249,141,115,61,215,239,62,213,7,253,195,153,15,107,4,146,221,106,237,64,103,164,15,124,81,194,78,191,15,196,242,133,18,81,131,91,56,245,83,100,208,85,134,161,158,49,77,12,244,121,7,221,9,105,159,187,245,186,117,52,35,220,101,109,14,106,222,149,65,170,157,212,170,130,100,132,162,121,163,202,20,110,123,90,255,67,85,193,82,10,35,10,80,52,178,243,1,101,49,110,16,247,100,49,155,6,175,253,65,84,206,32,238,116,116,55,160,230,174,35,221,97,203,101,56,116,252,194,45,229,27,5,210,206,169,75,210,14,71,53,185,140,106,206,254,76,171,63,117,238,3,46,14,224,247,22,221,90,167,135,81,187,198,228,209,130,204,184,166,68,23,165,86,180,71,26,229,172,228,6,21,164,68,191,71,13,75,204,181,90,133,225,247,136,223,77,123,147,104,16,247,136,102,65,89,250,208,60,237,80,186,212,58,135,207,232,110,236,53,101,184,68,183,69,84,195,235,6,86,147,182,33,176,22,103,99,158,248,219,93,118,45,158,32,158,215,51,125,122,186,239,243,108,238,21,253,247,9,51,149,74,130,36,121,186,184,209,176,124,242,139,56,23,137,87,100,104,30,111,199,14,137,68,182,116,255,145,202,150,6,222,224,111,107,216,72,218,11,131,248,70,165,178,174,128,107,33,221,64,42,13,197,251,255,86,27,154,196,25,253,5,112,54,77,98,40,80,40,11,73,229,156,175,47,199,140,38,71,67,72,56,246,158,148,137,29,207,216,232,191,122,175,62,160,166,195,13,143,105,127,142,247,202,160,51,89,109,31,250,74,24,179,100,24,199,28,66,17,141,58,136,255,225,190,222,179,50,26,175,70,68,190,57,59,171,45,242,209,61,37,182,2,236,70,51,0,54,69,31,194,202,234,174,135,112,234,120,143,26,121,55,248,237,176,47,172,239,63,246,218,29,237,98,109,230,0,51,81,229,110,216,73,193,174,251,119,9,91,95,27,159,127,3,198,166,26,204,238,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("63f091f3-e8da-4447-9246-7bfa1390acc5"));
		}

		#endregion

	}

	#endregion

}

