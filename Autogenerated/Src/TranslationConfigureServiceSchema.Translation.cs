namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TranslationConfigureServiceSchema

	/// <exclude/>
	public class TranslationConfigureServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TranslationConfigureServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TranslationConfigureServiceSchema(TranslationConfigureServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("53f3ae78-0e82-479a-84e5-de5828e991cf");
			Name = "TranslationConfigureService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("0b3cc894-bd0d-4e1b-bb7d-87203708d013");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,85,77,111,155,64,16,61,19,41,255,97,68,47,88,178,240,221,177,45,57,110,26,89,138,163,200,78,213,67,212,195,122,25,59,43,193,66,118,23,183,110,148,255,222,89,62,12,24,67,114,65,236,204,188,249,122,143,69,178,8,117,194,56,194,237,211,106,19,239,140,191,136,229,78,236,83,197,140,136,165,255,172,152,212,97,246,126,125,245,126,125,229,164,90,200,61,108,142,218,96,116,115,118,38,108,24,34,183,193,218,191,71,137,74,240,86,204,131,144,111,45,227,58,149,70,68,232,111,8,194,66,241,47,43,216,138,34,239,65,112,92,197,1,134,254,156,234,28,206,226,170,25,20,250,63,24,55,177,18,168,219,254,95,184,165,152,40,202,176,228,253,166,112,79,137,96,17,50,173,199,80,27,186,40,153,69,189,204,117,242,136,134,128,9,249,182,34,20,230,184,198,183,84,40,140,80,26,237,213,15,182,73,152,194,39,16,27,229,23,134,96,240,155,138,36,233,54,20,28,184,237,164,222,72,73,11,22,29,193,24,110,153,46,79,67,88,246,196,82,90,162,142,158,167,65,87,104,94,227,128,70,125,82,118,137,249,124,78,146,31,96,121,39,211,8,21,219,134,56,105,164,13,211,168,74,62,131,123,52,196,76,43,66,159,66,2,111,0,86,52,142,115,96,10,76,103,32,35,162,104,89,217,250,115,218,142,164,31,51,89,246,166,183,168,153,151,165,119,36,254,1,178,107,163,82,11,159,171,61,77,32,141,231,166,26,21,57,100,46,75,119,8,63,27,134,193,192,170,195,113,20,154,84,201,79,90,180,61,245,79,155,37,251,40,118,141,50,200,215,221,181,251,140,234,220,57,26,141,96,162,211,40,98,234,56,171,12,136,192,21,238,166,110,31,189,238,168,66,140,234,57,10,45,245,181,188,166,175,159,214,134,150,203,202,122,113,237,13,46,85,137,155,130,93,253,87,74,20,219,113,140,58,22,137,104,235,185,203,111,128,40,231,87,148,229,63,199,15,66,155,50,237,7,112,102,248,171,119,247,151,99,98,33,128,131,86,157,202,57,5,44,112,117,254,203,192,30,30,115,235,153,177,251,2,233,92,71,134,59,167,221,158,79,148,240,88,146,30,185,129,29,125,29,188,72,80,92,135,181,10,228,202,74,248,101,190,186,6,94,190,51,195,22,69,162,254,251,165,75,25,99,104,252,18,54,185,232,170,49,236,221,210,33,224,6,16,2,106,101,88,23,117,247,221,66,146,182,227,92,208,116,54,208,10,163,45,42,239,145,126,94,68,164,219,232,221,205,174,209,114,78,171,144,222,59,172,169,188,119,216,163,185,1,109,31,86,24,151,200,38,219,127,69,93,220,121,54,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("53f3ae78-0e82-479a-84e5-de5828e991cf"));
		}

		#endregion

	}

	#endregion

}

