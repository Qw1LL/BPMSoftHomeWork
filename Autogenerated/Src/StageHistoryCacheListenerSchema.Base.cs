namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: StageHistoryCacheListenerSchema

	/// <exclude/>
	public class StageHistoryCacheListenerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public StageHistoryCacheListenerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public StageHistoryCacheListenerSchema(StageHistoryCacheListenerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c2317475-139a-4d68-9a80-50db335f8819");
			Name = "StageHistoryCacheListener";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("76eace8e-4a48-486b-bf04-de18fe06b0a2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,84,201,110,219,48,16,61,43,64,254,129,77,46,50,16,232,3,210,56,128,247,26,176,155,160,66,78,69,81,208,210,216,97,75,147,42,23,181,70,225,127,239,144,148,108,217,145,146,162,64,47,90,102,121,124,51,111,56,130,110,65,23,52,3,50,124,92,166,114,109,146,145,20,107,182,177,138,26,38,197,229,197,239,203,139,200,106,38,54,36,221,105,3,219,247,103,255,24,207,57,100,46,88,39,51,16,160,88,246,34,102,193,196,143,163,241,120,146,130,118,107,50,30,118,56,38,194,48,195,64,191,225,78,38,37,8,211,21,53,165,153,145,170,27,37,53,129,25,122,175,21,108,176,52,50,226,84,235,91,146,26,186,129,15,76,99,192,110,68,179,103,88,224,183,43,218,7,127,246,199,239,252,217,181,35,158,235,25,151,43,202,73,159,24,101,161,247,5,3,11,187,226,44,35,153,3,237,198,36,183,100,72,53,180,128,34,4,234,130,207,3,191,41,3,158,35,193,71,197,74,106,32,56,139,240,67,158,52,40,148,85,4,153,200,87,123,242,31,10,141,174,65,228,1,236,20,121,9,230,89,118,66,151,146,229,216,28,160,202,151,177,144,242,187,45,124,21,113,224,77,192,191,122,196,13,82,20,157,157,141,77,9,254,228,148,163,19,38,138,230,56,62,75,153,91,14,205,30,125,130,66,106,230,190,136,110,55,247,137,79,143,188,104,65,236,29,206,166,185,123,11,240,62,14,137,2,126,18,36,163,81,48,151,60,80,27,187,69,158,241,213,41,251,171,155,243,94,246,122,21,243,137,192,12,69,87,28,238,154,71,165,96,12,142,219,253,9,243,202,168,145,119,123,65,142,251,128,243,184,2,47,169,34,153,85,10,25,165,216,232,45,173,0,206,242,107,216,80,82,50,101,74,155,7,53,134,53,181,220,196,186,206,65,46,225,19,199,30,147,3,226,211,60,39,253,131,54,193,150,160,177,98,192,214,36,110,101,240,174,79,132,229,188,86,59,58,78,70,136,11,147,209,150,90,33,239,221,115,255,234,140,53,145,90,122,219,218,154,154,16,42,234,66,180,247,125,196,221,135,61,107,139,111,246,194,133,5,114,103,98,39,131,162,192,107,236,23,165,167,147,76,126,21,76,193,76,73,91,196,199,51,66,105,251,191,189,102,126,55,84,29,8,123,66,150,160,20,203,171,78,60,136,148,150,200,49,150,171,111,72,4,229,19,57,168,27,18,238,219,16,214,184,188,252,182,192,177,213,4,234,210,87,184,74,146,67,110,157,4,141,153,10,106,99,71,170,171,219,11,65,33,96,212,122,199,171,203,221,44,176,131,243,24,56,184,206,254,27,235,67,246,255,227,221,20,166,178,53,77,123,242,7,6,99,232,81,43,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c2317475-139a-4d68-9a80-50db335f8819"));
		}

		#endregion

	}

	#endregion

}

