namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ChatTransferServiceSchema

	/// <exclude/>
	public class ChatTransferServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ChatTransferServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ChatTransferServiceSchema(ChatTransferServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("bb2a93e0-9d5f-4060-9f78-fb689f8953f5");
			Name = "ChatTransferService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6f05d58c-8c35-4460-8cdc-92bf987e5f26");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,88,219,110,227,54,16,125,246,2,251,15,132,251,34,3,129,252,190,137,189,200,165,13,92,212,73,26,111,177,15,65,177,160,165,113,76,84,34,181,36,229,32,187,240,191,119,120,147,117,177,101,239,162,104,209,162,47,137,68,206,28,14,207,204,25,138,230,52,7,85,208,4,200,213,195,124,33,86,58,190,22,124,197,158,75,73,53,19,60,190,207,57,75,214,148,115,200,226,57,40,69,159,25,127,126,251,230,235,219,55,131,82,225,35,89,188,42,13,249,121,235,29,81,178,12,18,3,161,226,91,224,32,89,210,177,121,44,185,102,57,196,11,156,165,25,251,98,87,236,88,225,236,134,37,48,23,41,100,189,147,241,37,174,183,57,14,18,127,132,229,206,96,183,109,9,221,81,52,197,153,60,175,67,118,231,2,252,163,40,53,90,160,41,26,255,32,225,25,67,33,215,25,85,234,29,185,94,83,253,65,82,174,86,32,131,57,50,143,252,128,53,127,186,161,154,34,247,90,210,68,255,142,3,69,185,204,88,66,18,227,222,239,61,48,217,112,0,115,200,151,32,141,123,240,95,10,145,145,69,153,36,152,60,242,149,60,131,62,39,202,252,217,246,56,41,45,205,78,93,194,225,100,183,219,146,165,228,14,94,76,180,179,180,227,182,117,188,0,79,29,53,39,210,100,205,198,227,49,185,80,101,158,83,249,58,245,239,126,158,172,132,36,218,251,216,184,177,96,181,10,78,227,154,215,147,119,169,243,252,116,169,138,59,208,152,201,2,107,103,201,50,166,95,31,225,115,201,36,228,192,181,138,234,47,166,128,200,132,28,113,49,86,177,31,72,71,118,145,27,88,209,50,211,181,66,129,83,146,76,222,145,43,170,160,98,194,164,218,16,30,88,123,144,162,0,169,25,32,117,15,22,203,205,23,210,40,1,44,228,61,90,80,45,100,5,141,207,64,62,41,243,239,252,52,99,247,119,50,245,94,228,253,123,18,249,199,9,225,240,114,216,53,250,77,129,68,186,185,107,6,163,145,19,71,171,10,234,91,66,99,44,191,50,65,239,246,166,28,89,123,104,138,70,72,212,18,137,194,7,43,6,87,106,157,170,177,3,51,206,180,237,55,160,108,236,12,215,163,28,185,22,43,52,6,32,137,132,213,100,184,103,153,225,120,26,87,176,245,186,234,11,173,73,0,41,155,124,132,184,219,195,245,93,180,20,83,49,53,7,189,22,105,139,164,189,91,14,49,41,43,13,162,5,249,92,66,9,251,247,98,71,10,42,105,78,56,158,14,147,97,238,218,192,112,234,154,41,241,239,4,159,139,204,20,14,226,45,129,88,14,212,26,82,66,87,26,164,91,234,133,170,157,54,33,141,47,198,22,121,255,66,54,168,89,58,156,206,110,76,50,236,171,7,119,113,239,128,58,56,18,116,41,185,154,98,91,68,157,25,247,166,11,246,5,92,60,88,217,38,230,10,22,153,172,183,131,193,19,246,245,25,223,136,63,32,114,4,99,137,15,31,238,23,31,134,103,196,104,26,148,254,73,200,28,177,39,4,77,125,143,116,67,241,207,74,240,51,131,50,184,18,233,235,66,191,102,208,48,171,70,227,143,146,22,5,164,30,209,64,187,118,222,143,109,155,73,79,181,5,148,42,227,214,70,252,106,152,140,170,243,59,244,117,159,200,51,215,184,61,251,190,246,6,27,42,137,12,112,59,149,31,88,48,50,194,246,94,145,114,199,205,153,113,114,103,193,200,35,236,9,11,91,216,134,165,32,91,66,57,11,209,141,226,224,20,133,8,221,82,33,184,56,156,110,19,226,23,110,205,239,78,36,27,132,123,14,54,166,30,170,125,158,31,235,29,255,18,33,9,223,138,173,150,82,60,146,216,138,33,16,138,34,204,252,47,171,191,64,86,225,196,59,166,172,93,58,254,70,113,133,224,190,65,95,181,56,255,57,137,221,130,86,4,235,223,246,240,16,145,178,31,121,221,142,126,162,240,20,80,153,172,135,211,192,137,34,110,132,224,247,27,42,140,119,213,20,14,138,95,218,129,252,199,206,16,179,191,139,80,0,129,158,128,51,53,201,168,56,139,252,173,192,81,215,83,201,253,152,245,98,222,165,119,226,190,49,227,230,130,110,37,103,95,217,198,184,151,31,105,178,142,132,249,34,173,74,240,50,77,163,186,10,218,11,251,120,7,182,70,69,60,75,29,199,3,147,56,204,155,143,61,120,249,209,182,115,240,246,211,59,148,193,29,22,90,99,202,12,132,201,135,181,192,214,94,159,181,35,110,118,235,173,22,154,234,210,48,33,98,247,104,135,183,246,147,185,95,71,173,15,196,222,123,214,33,122,14,222,178,42,10,94,152,94,239,206,143,131,122,236,94,186,122,111,182,135,227,9,119,157,218,101,51,242,44,15,89,58,108,148,177,109,179,221,43,231,33,247,196,101,161,137,113,40,245,161,64,78,196,86,54,119,77,232,246,38,125,170,253,191,6,48,66,236,183,142,103,220,254,192,97,50,127,44,201,7,182,242,173,57,246,52,125,71,86,239,15,5,208,249,173,226,88,74,253,125,113,159,135,233,237,77,31,223,161,140,65,143,95,97,180,183,215,209,170,210,40,107,31,187,219,63,1,124,105,238,24,44,19,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateChatTransferredLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateChatTransferredLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("24278162-d754-b4d1-8b38-84781ea9cab9"),
				Name = "ChatTransferred",
				CreatedInPackageId = new Guid("6f05d58c-8c35-4460-8cdc-92bf987e5f26"),
				CreatedInSchemaUId = new Guid("bb2a93e0-9d5f-4060-9f78-fb689f8953f5"),
				ModifiedInSchemaUId = new Guid("bb2a93e0-9d5f-4060-9f78-fb689f8953f5")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("bb2a93e0-9d5f-4060-9f78-fb689f8953f5"));
		}

		#endregion

	}

	#endregion

}

