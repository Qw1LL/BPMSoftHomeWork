namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ForecastHistoryMatcherSchema

	/// <exclude/>
	public class ForecastHistoryMatcherSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastHistoryMatcherSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastHistoryMatcherSchema(ForecastHistoryMatcherSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2663de06-d978-7844-8986-9c48b9483ba2");
			Name = "ForecastHistoryMatcher";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,150,223,111,218,48,16,199,159,83,169,255,195,141,73,85,144,170,32,237,145,2,83,127,140,14,169,104,85,169,250,50,237,193,77,46,96,205,177,153,237,80,161,105,255,251,108,199,9,129,132,178,170,219,94,54,30,128,216,231,251,250,238,252,57,135,147,12,213,146,196,8,23,183,211,153,72,117,116,41,120,74,231,185,36,154,10,30,141,133,196,152,40,253,240,238,248,232,251,241,81,144,43,202,231,48,91,43,141,153,49,101,12,99,107,167,162,107,228,40,105,124,182,107,115,67,249,183,205,224,70,68,98,52,38,177,22,146,162,50,243,198,226,173,196,185,113,5,19,174,81,166,102,75,125,152,148,242,31,169,50,166,235,41,209,241,2,165,51,239,245,122,48,80,121,150,17,185,30,249,231,91,41,86,52,65,5,25,234,133,72,20,104,1,25,249,138,144,122,63,160,56,89,170,133,208,42,42,93,244,106,62,150,249,35,163,49,208,114,7,251,55,16,216,100,52,246,224,6,156,13,104,137,8,154,60,50,132,132,104,98,229,154,122,197,200,146,72,146,1,55,149,24,118,24,166,122,147,214,206,232,126,129,38,2,147,73,9,113,53,108,195,138,69,102,214,97,100,28,186,245,237,238,36,157,47,26,254,20,35,43,252,101,119,18,117,46,185,26,13,148,9,40,150,152,14,59,179,5,162,238,244,70,131,94,57,105,173,39,31,120,158,161,180,33,15,124,186,238,77,18,238,237,192,149,73,193,196,28,135,81,145,157,176,110,219,98,180,157,133,83,235,61,56,176,100,39,210,110,113,166,158,173,144,43,142,73,67,158,113,245,47,22,201,101,240,210,197,223,90,151,250,244,193,138,212,141,91,106,17,252,40,24,71,158,20,152,111,33,127,201,136,82,125,40,97,155,121,72,167,132,147,249,139,113,183,181,173,120,183,101,5,194,19,40,146,0,4,18,154,166,173,240,23,10,136,132,41,225,115,184,7,255,14,244,236,130,207,87,152,146,156,233,11,202,19,211,220,66,189,94,162,72,195,61,139,186,221,47,155,14,19,219,128,161,221,176,255,124,215,177,169,47,243,54,45,226,238,155,76,208,21,209,88,204,46,139,7,88,9,154,192,152,50,86,212,229,129,176,28,85,184,15,77,224,248,116,39,158,78,161,57,99,139,111,255,20,101,111,206,187,122,219,127,93,112,109,49,40,92,69,117,93,24,90,1,184,49,234,85,119,112,103,6,25,27,133,238,136,4,129,45,27,49,229,11,171,169,74,187,230,203,244,231,106,120,75,163,148,15,86,68,90,53,231,160,208,221,149,12,91,252,250,77,184,213,85,72,117,221,225,102,248,253,150,112,52,166,82,233,79,210,31,136,48,94,193,208,225,102,62,241,202,155,78,18,24,14,219,226,217,204,159,156,128,49,191,150,34,95,238,183,246,211,229,110,105,10,97,235,110,223,152,200,115,198,170,164,216,170,216,208,163,243,88,231,132,53,66,170,107,184,111,47,96,200,13,218,107,26,157,39,73,232,189,250,237,56,227,130,245,93,216,91,78,173,131,225,112,163,254,59,87,41,120,52,104,76,88,247,55,183,108,8,139,164,119,95,211,187,125,239,248,195,247,236,75,47,90,127,188,28,52,226,169,149,243,134,147,38,239,123,123,78,9,123,83,177,164,220,156,202,29,200,119,157,85,176,151,204,216,141,150,135,215,44,111,5,191,68,99,35,188,75,57,117,86,35,176,191,209,29,198,66,38,219,212,86,131,173,172,90,203,6,160,22,49,31,198,76,219,38,62,132,250,99,116,133,12,53,38,219,104,54,122,124,217,202,171,198,93,107,209,53,78,3,127,41,218,116,156,213,192,253,255,210,52,56,4,222,43,222,157,246,251,217,131,150,175,82,133,85,125,141,39,169,189,227,182,189,115,153,177,159,157,91,81,195,244,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2663de06-d978-7844-8986-9c48b9483ba2"));
		}

		#endregion

	}

	#endregion

}

