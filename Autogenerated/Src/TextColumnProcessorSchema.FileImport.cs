namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TextColumnProcessorSchema

	/// <exclude/>
	public class TextColumnProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TextColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TextColumnProcessorSchema(TextColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6b785f32-0d9c-44a2-bc45-7bc06b18498b");
			Name = "TextColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("52abf94a-4a51-4e9b-afae-86480a04ff1e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,149,77,111,219,48,12,134,207,45,208,255,64,100,23,7,40,236,123,211,4,104,210,165,203,161,67,128,172,187,12,59,40,54,157,104,176,37,79,146,131,5,67,255,251,40,201,110,44,199,221,7,182,93,90,139,162,248,241,232,165,34,88,137,186,98,41,194,124,253,184,145,185,137,23,82,228,124,87,43,102,184,20,241,146,23,184,42,43,169,204,213,229,247,171,203,139,90,115,177,131,205,81,27,44,39,47,235,211,89,133,195,214,248,173,48,220,112,212,175,108,47,89,106,164,242,251,228,241,70,225,142,210,195,162,96,90,223,192,7,252,102,22,178,168,75,177,86,50,69,173,165,114,110,73,146,192,45,23,123,84,220,100,50,133,84,97,62,29,205,153,198,158,247,40,153,181,238,186,46,75,166,142,237,250,78,0,23,218,48,65,8,100,14,102,207,53,164,54,43,208,135,34,54,82,104,190,45,16,114,169,160,242,241,108,245,182,36,72,93,22,56,176,162,70,29,183,25,146,78,138,79,247,152,179,186,48,115,46,50,58,22,153,99,133,50,143,86,189,250,198,215,240,158,110,2,166,32,232,31,57,12,116,60,30,127,166,128,85,189,45,120,218,148,56,224,5,55,48,208,255,53,244,51,82,40,186,79,250,123,98,77,157,26,85,219,123,32,228,107,151,199,123,252,33,230,51,206,206,176,80,200,12,234,144,54,209,32,79,196,38,228,64,63,20,210,130,61,39,235,45,21,83,172,116,208,166,163,90,163,162,38,4,166,86,186,163,217,19,173,233,138,90,67,124,155,56,111,119,184,193,56,144,48,122,10,194,64,24,117,76,124,183,212,120,212,55,219,225,184,120,110,136,162,200,60,212,144,48,229,168,80,217,41,32,190,74,26,58,139,217,63,68,124,207,12,243,98,244,100,107,193,191,210,55,207,144,134,47,231,168,94,33,89,181,181,128,60,160,82,228,15,15,53,207,92,188,143,54,220,7,138,246,180,202,96,58,11,109,177,229,215,247,154,252,28,194,35,154,189,204,254,135,194,150,52,99,186,157,81,106,198,145,248,93,241,100,168,13,23,238,209,27,205,252,139,215,142,119,103,43,208,208,89,12,239,239,88,244,99,248,90,206,78,43,52,181,18,122,182,238,21,125,155,180,59,29,177,202,237,23,186,37,215,166,203,177,148,106,195,14,24,249,76,30,212,253,169,214,110,221,52,255,29,39,119,186,169,204,125,55,242,189,112,143,244,113,147,238,177,100,96,69,243,178,152,66,56,22,254,61,111,118,31,153,96,59,82,215,3,154,85,51,221,243,35,41,33,234,146,243,174,100,29,79,206,114,249,178,90,86,211,32,53,253,62,88,171,182,209,231,71,251,74,6,97,253,174,53,55,113,61,184,206,100,191,195,130,166,46,94,43,36,248,120,178,187,206,163,232,76,194,99,95,70,28,24,175,187,184,98,15,109,210,25,249,97,1,175,134,213,91,249,251,60,72,154,177,102,47,162,43,128,191,141,117,151,101,141,24,60,92,224,157,69,40,129,166,157,95,232,34,220,126,69,91,47,149,15,76,189,239,40,52,62,255,0,72,130,185,100,116,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6b785f32-0d9c-44a2-bc45-7bc06b18498b"));
		}

		#endregion

	}

	#endregion

}

