namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EnrichmentDtoSchema

	/// <exclude/>
	public class EnrichmentDtoSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EnrichmentDtoSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EnrichmentDtoSchema(EnrichmentDtoSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b5361451-7c4a-4289-85c7-f122f987e03b");
			Name = "EnrichmentDto";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("8f65d303-02ac-4efc-966c-086ff392449b");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,88,75,111,219,56,16,62,187,64,255,3,145,2,69,12,4,206,189,205,6,72,237,160,117,27,7,70,188,187,151,162,7,74,26,203,220,74,164,202,71,91,53,200,127,223,33,41,217,214,35,187,122,184,23,71,210,204,144,31,231,241,205,48,156,166,160,50,26,2,121,183,94,109,196,86,207,230,130,111,89,108,36,213,76,240,217,45,151,44,220,165,192,245,66,139,151,47,30,95,190,152,24,197,120,76,54,185,210,144,190,173,189,163,117,146,64,104,77,213,236,61,112,64,235,134,206,130,209,152,11,165,89,168,26,178,7,195,53,75,97,182,65,75,154,176,95,14,197,65,235,30,126,104,92,218,226,252,168,156,0,69,175,36,196,168,69,230,9,85,234,13,217,236,132,212,115,145,102,148,231,75,190,21,78,231,242,242,146,92,41,147,166,84,230,215,197,251,3,100,18,20,30,77,145,208,171,19,142,238,184,32,63,32,80,76,3,161,60,34,137,136,5,49,50,153,149,139,92,30,173,146,153,32,97,33,9,237,198,45,251,78,208,93,248,187,7,184,150,34,3,169,25,32,202,181,51,245,242,58,56,247,97,126,4,201,110,222,220,125,242,121,65,53,93,65,26,128,60,191,71,53,242,7,57,179,234,103,211,47,86,92,160,83,90,58,215,89,5,27,191,201,36,6,109,93,58,153,168,226,225,169,3,142,210,41,133,47,58,194,137,68,74,25,111,5,180,112,162,49,144,142,99,211,17,143,53,105,69,115,103,215,250,111,44,175,128,71,62,146,238,221,127,173,125,172,229,226,59,170,96,158,8,19,61,96,149,97,226,66,151,100,12,208,8,115,10,173,136,44,204,90,179,207,157,15,203,85,75,26,234,47,245,116,108,217,186,204,199,86,167,222,254,212,32,57,77,136,2,249,157,33,33,124,208,58,219,3,64,55,81,109,84,15,79,123,131,86,95,111,156,136,60,18,235,105,220,15,127,158,134,35,11,69,212,167,64,172,122,21,21,227,26,83,42,130,238,128,164,20,146,32,113,42,26,247,217,186,176,104,245,201,202,203,90,48,116,201,179,50,208,186,79,158,237,61,40,182,123,2,164,70,11,251,156,0,150,122,225,239,1,201,215,192,67,90,107,97,36,65,150,173,230,112,0,180,196,112,110,69,175,124,40,12,45,103,87,67,115,199,148,190,170,211,250,117,65,63,133,197,233,57,99,3,84,134,59,187,246,3,124,51,232,195,46,177,84,206,200,157,29,227,234,204,6,132,173,101,235,81,33,122,15,8,13,75,5,157,162,136,222,1,185,89,47,201,87,200,123,132,7,181,91,235,229,38,99,159,32,31,210,61,252,33,137,50,193,63,152,62,131,250,235,5,89,42,235,33,38,33,194,143,90,26,56,101,203,189,145,146,230,54,169,75,140,216,123,73,217,124,251,112,176,85,255,95,176,46,203,61,226,107,242,23,90,156,4,50,96,115,239,133,213,27,244,67,123,235,108,134,224,181,220,132,179,169,27,84,203,226,9,221,228,219,139,58,172,65,29,242,150,38,170,138,249,80,86,149,225,154,248,183,211,51,8,18,84,106,56,11,221,46,61,70,224,131,145,35,18,153,250,103,101,208,57,84,145,108,39,56,16,110,172,15,46,124,128,221,172,220,141,104,62,47,32,48,113,12,114,193,84,150,208,252,252,236,111,154,24,235,199,71,247,240,244,150,252,153,103,238,221,254,125,242,85,95,237,42,245,115,97,87,89,222,126,51,184,83,144,192,85,67,124,61,126,4,175,185,132,224,51,196,66,246,97,48,141,167,105,165,48,119,220,33,4,230,205,101,25,59,122,212,3,235,120,207,91,131,70,35,204,30,165,166,61,78,241,221,198,168,245,24,62,140,189,146,120,31,142,21,232,157,136,106,177,40,150,15,132,72,136,141,110,162,206,155,145,23,216,78,228,180,216,86,130,54,146,59,135,206,10,11,39,159,217,47,83,242,250,181,7,89,149,185,79,211,147,53,235,74,105,119,28,191,14,20,20,86,136,193,242,104,179,161,171,81,29,189,134,111,84,97,148,236,137,212,41,66,188,167,147,132,241,175,37,143,246,25,136,233,207,141,91,224,206,218,207,5,94,254,155,163,249,170,169,52,134,241,171,60,54,8,243,218,46,112,239,236,159,199,92,87,26,135,217,119,199,65,104,125,147,124,30,232,145,252,247,14,179,3,110,38,90,84,10,193,254,15,98,240,157,164,9,229,55,92,74,54,56,176,132,72,70,56,9,60,223,80,183,232,235,136,4,121,121,182,163,129,189,251,165,165,202,135,213,200,46,221,148,212,236,135,45,29,116,116,196,49,11,254,5,194,81,202,89,69,20,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b5361451-7c4a-4289-85c7-f122f987e03b"));
		}

		#endregion

	}

	#endregion

}

