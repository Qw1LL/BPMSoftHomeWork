namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: TranslationBatchProviderSchema

	/// <exclude/>
	public class TranslationBatchProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TranslationBatchProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TranslationBatchProviderSchema(TranslationBatchProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cd64cd09-2a6a-4dc0-b694-3526d65cb6be");
			Name = "TranslationBatchProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("ab054f7f-9309-4520-a5a0-bfba22ceff76");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,87,221,111,219,54,16,127,86,129,254,15,172,139,1,50,106,200,238,107,19,187,104,190,138,162,73,155,213,221,246,48,12,5,35,157,29,98,18,229,145,148,83,175,200,255,190,227,135,45,202,162,100,103,232,139,37,29,143,247,125,247,59,115,90,128,92,209,20,200,217,237,205,188,92,168,228,188,228,11,182,172,4,85,172,228,201,87,65,185,204,205,251,243,103,63,158,63,139,42,201,248,146,204,55,82,65,129,188,121,14,169,62,148,201,123,224,32,88,122,178,207,115,205,248,63,53,177,214,82,20,37,15,209,5,132,169,201,197,25,30,224,209,75,1,75,212,72,206,115,42,229,27,226,89,120,70,85,122,127,43,202,53,203,64,24,222,85,117,151,179,148,164,154,181,147,147,52,132,212,247,35,244,23,127,107,133,232,166,162,92,161,210,91,193,214,84,129,61,95,217,15,146,234,115,194,184,34,127,8,166,192,147,121,93,46,63,112,5,98,77,115,50,37,175,39,147,201,73,251,162,84,66,251,188,127,215,152,10,114,174,168,80,55,32,37,93,194,87,40,86,120,8,40,107,224,113,74,20,84,161,246,41,249,243,199,228,241,175,193,241,58,46,121,22,16,125,93,166,52,103,255,210,187,28,8,90,94,129,36,52,203,32,251,31,10,140,19,97,45,13,7,114,88,52,236,55,225,7,158,217,12,52,211,113,197,32,207,186,114,161,179,240,109,37,202,20,21,66,230,235,56,215,49,58,32,218,100,90,84,169,42,133,86,96,138,200,201,183,5,213,85,74,241,111,18,4,222,230,182,43,72,213,248,28,145,15,205,162,88,98,241,169,125,202,80,235,137,222,144,59,42,33,222,23,208,230,38,186,43,163,199,126,135,208,190,21,8,197,160,43,94,23,204,40,160,98,115,106,83,216,180,213,56,57,35,223,84,171,46,79,158,46,165,93,220,214,135,104,9,202,189,69,2,84,37,120,72,33,121,251,150,196,33,250,148,112,120,56,206,132,120,56,52,118,235,176,29,140,221,13,168,251,178,179,208,90,194,201,85,41,82,120,15,106,255,32,118,189,241,55,108,92,210,162,246,229,59,253,107,109,99,11,18,191,104,199,10,71,242,6,165,255,174,27,50,70,89,35,82,86,202,222,27,110,229,70,230,211,69,164,101,135,54,192,170,136,2,226,223,101,153,21,107,69,122,113,218,38,165,182,241,177,25,139,117,201,178,112,235,199,29,158,238,2,193,177,206,245,236,52,143,41,9,132,207,178,196,190,85,151,223,33,173,20,252,90,129,216,196,246,174,59,249,204,187,38,80,60,12,89,238,244,119,171,61,206,254,253,170,116,228,169,13,182,78,134,19,215,28,19,182,227,163,40,65,144,40,99,79,211,28,51,82,208,79,136,209,206,175,176,130,100,14,202,191,246,17,54,136,204,85,193,245,205,17,177,239,201,45,21,248,137,40,100,99,152,32,215,182,13,44,1,11,247,146,98,174,60,37,100,58,219,150,84,143,106,239,72,75,13,104,244,57,76,229,238,26,208,61,93,105,133,149,116,214,90,71,154,29,90,198,219,236,180,134,46,6,122,81,198,214,47,219,149,218,249,130,170,248,9,232,59,10,12,178,196,160,139,115,238,56,139,77,77,58,67,123,16,235,213,171,122,42,244,176,145,95,250,151,143,41,153,236,134,68,71,88,250,3,210,6,241,81,31,208,134,6,237,49,41,244,163,162,93,238,10,245,79,240,215,53,223,17,117,16,242,253,64,13,60,17,97,188,77,99,60,30,147,83,89,21,5,66,217,108,75,48,102,73,191,77,146,29,239,120,159,249,116,165,251,143,112,236,193,233,0,71,250,96,246,5,100,89,33,58,105,12,74,78,199,230,60,204,238,105,168,71,201,96,230,121,139,11,159,166,27,254,39,202,50,19,32,40,204,172,153,13,105,110,225,42,215,32,4,110,88,97,140,241,160,117,180,93,65,131,30,140,252,158,111,179,216,209,212,15,206,136,78,157,8,95,35,171,174,89,59,85,113,204,43,138,224,132,131,49,14,218,84,163,182,29,130,62,226,90,17,26,146,195,238,116,185,208,133,130,45,0,60,178,202,172,235,88,219,225,106,115,73,234,198,127,144,187,110,62,52,179,79,14,111,70,15,247,12,255,146,196,54,192,152,143,64,15,154,48,200,228,138,9,169,62,139,11,88,208,42,71,225,67,242,2,151,162,42,207,119,49,15,175,43,254,150,17,90,146,190,64,129,21,233,1,169,101,237,105,118,75,109,18,145,246,31,57,97,203,223,128,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cd64cd09-2a6a-4dc0-b694-3526d65cb6be"));
		}

		#endregion

	}

	#endregion

}

