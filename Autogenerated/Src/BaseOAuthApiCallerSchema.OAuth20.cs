namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseOAuthApiCallerSchema

	/// <exclude/>
	public class BaseOAuthApiCallerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseOAuthApiCallerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseOAuthApiCallerSchema(BaseOAuthApiCallerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b9843273-15ff-08e6-8b05-996518be7c54");
			Name = "BaseOAuthApiCaller";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("c966bd43-e9f4-4f60-86c2-6f60723d4eee");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,87,77,111,227,54,16,61,107,129,253,15,92,109,15,50,96,8,69,143,201,38,129,237,117,82,163,249,194,42,105,15,69,177,160,165,177,204,86,38,5,146,114,236,13,242,223,59,36,245,105,203,246,46,80,160,62,56,161,52,28,190,121,243,102,134,230,116,5,42,167,49,144,241,227,93,36,22,58,156,8,190,96,105,33,169,102,130,135,15,163,66,47,127,249,249,253,187,215,247,239,188,66,49,158,146,52,19,115,154,157,157,77,196,106,133,22,183,34,77,241,241,121,253,62,218,42,13,171,221,53,250,205,50,136,141,83,21,222,0,7,201,226,198,166,57,220,248,236,123,46,161,255,105,56,229,154,105,6,234,196,235,112,186,6,174,15,89,93,211,88,11,217,235,229,14,148,162,38,194,6,28,193,79,215,200,210,52,227,26,82,199,219,190,155,93,139,112,186,137,33,47,109,209,250,163,132,20,23,100,146,81,165,206,200,152,42,176,91,70,57,155,80,100,78,90,171,188,152,103,44,38,116,174,180,68,200,36,54,214,61,198,196,121,176,193,111,109,228,183,12,179,128,172,163,19,147,202,250,188,107,6,89,130,7,62,74,182,166,26,236,41,94,238,22,68,105,196,26,19,9,52,17,60,219,146,25,38,155,124,205,240,235,130,224,191,119,148,211,20,36,166,83,27,21,128,12,252,82,47,254,192,69,229,125,4,158,184,147,202,245,222,177,66,163,42,32,169,14,46,151,228,51,179,90,161,114,251,233,105,155,195,16,177,72,228,243,146,124,133,138,56,151,25,248,2,74,20,50,134,223,96,171,78,156,138,218,70,55,133,201,181,57,219,146,89,30,236,136,221,103,50,56,8,228,24,142,1,177,36,123,71,193,34,137,39,98,241,188,183,227,1,33,125,57,72,163,239,35,84,206,102,9,88,33,68,32,215,44,134,63,36,205,113,23,57,240,248,226,146,220,216,18,31,229,121,4,90,99,176,42,188,6,170,11,9,207,10,34,200,41,74,24,170,87,215,66,214,77,194,20,134,249,120,87,78,199,174,172,182,70,32,159,14,160,184,172,53,211,42,14,127,208,248,50,159,179,31,112,119,74,121,119,160,151,226,160,226,215,130,37,228,94,104,182,216,98,172,114,52,23,133,174,43,53,48,143,80,67,220,245,49,236,1,237,229,144,212,134,77,94,43,33,176,5,9,62,220,169,116,178,164,104,159,85,149,51,83,95,10,206,145,198,202,206,147,128,60,219,254,97,147,143,223,107,42,73,236,182,161,98,122,124,160,166,41,143,177,137,49,158,204,176,213,142,183,207,179,36,232,130,11,39,133,148,72,152,137,32,156,37,134,164,18,85,237,250,130,240,34,203,78,0,81,108,149,103,80,170,21,225,112,120,33,81,231,89,185,125,44,146,109,91,224,87,136,19,219,79,67,209,213,85,243,114,232,246,204,18,220,113,83,176,36,188,135,23,243,55,24,184,227,29,138,206,217,225,175,216,148,48,22,115,142,169,203,123,28,100,184,219,31,97,184,60,125,224,86,84,147,140,97,204,168,99,172,109,39,172,35,158,34,20,140,145,63,65,121,25,143,193,32,124,18,145,45,118,43,42,220,87,114,21,62,10,165,203,221,65,199,215,224,123,138,182,165,192,3,21,107,85,56,89,66,252,207,132,114,151,231,72,100,133,213,160,152,255,141,70,68,89,180,85,182,76,106,92,57,32,254,192,181,253,129,51,57,175,13,186,138,48,201,177,118,97,87,213,206,126,71,61,159,199,17,196,133,52,195,132,227,44,132,176,2,55,221,224,115,13,15,88,122,150,224,192,223,67,236,119,72,105,5,201,164,46,104,230,130,45,253,148,109,55,24,57,136,212,45,135,228,84,225,217,64,198,176,192,89,110,167,221,72,166,138,64,197,142,235,216,4,164,20,178,37,93,84,187,11,182,17,165,160,168,154,102,217,54,210,114,91,105,187,132,85,169,194,85,7,10,44,94,146,0,35,48,29,169,173,116,216,212,69,181,11,1,171,231,86,196,52,99,223,232,60,131,82,108,59,220,87,51,33,194,222,135,219,134,45,125,26,209,151,181,115,124,212,252,169,113,131,88,244,160,27,252,85,70,225,237,197,14,155,99,241,85,8,215,70,20,125,177,150,172,43,107,253,44,25,122,180,119,173,238,5,19,111,135,245,144,193,192,126,167,89,1,59,12,12,73,61,34,90,61,223,248,204,252,106,28,135,211,85,142,146,63,239,165,185,52,193,73,181,162,58,248,255,72,239,165,12,19,48,108,72,250,177,100,124,143,198,254,139,224,253,253,123,145,95,81,224,239,185,83,225,51,135,77,110,171,124,218,2,19,218,228,250,24,46,108,194,78,195,60,25,175,25,84,59,38,31,118,230,21,224,48,197,222,19,67,134,189,229,130,224,53,207,254,98,48,73,194,11,107,104,129,4,63,249,175,109,122,222,206,200,107,215,237,91,217,173,60,239,224,37,96,87,156,93,7,157,158,96,96,119,210,177,11,250,105,41,197,75,227,186,109,219,118,180,215,59,235,31,0,182,121,238,120,233,105,119,125,151,162,210,107,251,209,219,191,2,44,213,155,15,14,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateUnexpectedErrorMessageLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateUnexpectedErrorMessageLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("e3601f79-2863-4171-936b-d3f3c49536ef"),
				Name = "UnexpectedErrorMessage",
				CreatedInPackageId = new Guid("49af2168-effb-4b7f-bce2-28e45d430d96"),
				CreatedInSchemaUId = new Guid("b9843273-15ff-08e6-8b05-996518be7c54"),
				ModifiedInSchemaUId = new Guid("b9843273-15ff-08e6-8b05-996518be7c54")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b9843273-15ff-08e6-8b05-996518be7c54"));
		}

		#endregion

	}

	#endregion

}

