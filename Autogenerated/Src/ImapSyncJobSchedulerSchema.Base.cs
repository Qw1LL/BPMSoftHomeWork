namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ImapSyncJobSchedulerSchema

	/// <exclude/>
	public class ImapSyncJobSchedulerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ImapSyncJobSchedulerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ImapSyncJobSchedulerSchema(ImapSyncJobSchedulerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("183063be-c838-4c18-9571-10db5f203784");
			Name = "ImapSyncJobScheduler";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("80eb4b00-d20b-4335-a2cc-1f02c0e63f83");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,87,219,110,219,56,16,125,118,129,254,3,87,251,34,3,129,220,221,71,199,54,144,58,73,225,162,110,130,58,221,125,40,138,130,166,198,182,26,137,20,72,42,169,55,240,191,239,240,34,69,183,92,218,221,98,247,197,137,200,225,204,153,153,115,70,20,167,25,168,156,50,32,175,47,151,43,177,209,209,146,38,233,203,23,119,47,95,12,10,149,240,45,217,166,98,77,211,241,120,46,178,76,240,232,157,216,110,113,249,184,218,95,237,149,134,172,253,28,205,69,154,2,211,137,224,42,122,3,28,100,194,238,109,202,88,115,33,161,127,53,58,167,76,11,153,128,122,96,127,197,118,16,23,41,72,220,71,139,95,37,108,49,22,153,167,84,169,49,89,100,52,95,237,57,123,43,214,149,161,181,27,141,70,100,162,138,44,163,114,63,243,207,139,44,79,33,3,174,169,129,75,196,6,45,0,8,147,176,153,6,139,62,87,193,104,22,149,206,70,53,111,159,78,97,67,139,84,191,78,120,140,136,67,189,207,65,108,194,94,31,195,225,103,60,145,23,235,52,97,132,25,216,189,168,49,151,254,100,6,216,34,252,189,207,28,43,173,199,228,82,38,55,84,131,219,203,221,3,97,102,143,40,45,77,25,209,205,123,236,58,153,146,192,120,53,222,131,227,7,173,125,224,55,82,20,121,121,108,177,60,185,124,226,200,165,20,12,148,106,7,50,228,50,39,45,112,224,177,195,222,76,228,60,129,52,86,15,100,34,129,198,130,167,123,178,64,34,146,47,41,254,76,9,254,187,164,156,110,65,34,213,180,97,40,200,48,176,137,13,159,8,182,4,189,19,157,104,109,150,216,5,116,173,136,194,68,118,82,240,228,47,71,150,175,98,77,56,38,105,232,208,229,131,91,201,169,164,153,181,154,6,133,2,137,157,226,78,26,193,236,35,62,155,234,249,133,104,50,178,214,253,135,237,255,160,65,170,96,182,106,1,185,223,235,250,144,160,11,201,85,231,76,5,126,50,42,77,234,181,246,237,196,188,61,9,76,55,195,143,141,12,72,51,161,35,115,126,48,88,156,38,246,17,203,48,113,94,142,136,88,127,69,155,89,13,40,118,142,23,105,58,36,102,216,12,6,239,18,165,189,245,204,214,217,71,188,164,82,91,91,184,37,117,155,208,244,22,207,181,77,163,147,56,14,253,130,55,73,54,36,172,197,253,165,25,120,224,160,17,133,28,1,121,150,33,71,209,133,68,250,186,211,173,227,209,149,220,99,77,254,160,105,1,97,176,234,28,10,48,215,162,207,219,176,10,216,143,185,123,34,186,18,43,155,108,56,244,153,12,14,246,143,251,237,245,210,108,72,52,47,164,196,209,102,186,22,45,226,174,67,215,120,223,235,232,173,72,120,24,124,193,20,218,190,157,249,225,185,106,178,99,237,17,49,205,119,192,174,9,22,214,196,177,68,132,111,216,91,245,163,58,170,77,236,38,65,113,84,147,4,135,19,229,12,158,175,46,204,188,78,84,86,189,204,30,22,215,132,205,174,100,1,147,17,195,128,155,122,74,228,66,239,64,222,38,202,140,47,107,76,208,120,67,83,101,173,219,234,115,111,132,181,16,41,57,21,160,188,246,206,140,175,39,196,71,126,72,119,94,230,181,134,163,65,75,244,237,64,247,206,154,52,58,201,243,234,21,21,25,244,21,242,154,251,163,206,75,165,65,174,94,190,124,128,76,220,64,239,252,253,191,142,94,223,200,27,145,196,30,190,79,251,39,118,241,211,231,122,31,203,169,89,237,249,241,243,104,115,135,126,134,63,159,1,110,34,29,215,201,164,165,185,82,78,203,177,114,150,229,122,239,12,180,220,151,48,110,168,68,3,202,174,175,188,181,193,234,175,143,167,9,221,114,161,116,194,84,180,170,108,66,43,154,114,20,222,7,41,247,107,227,205,217,28,8,163,154,237,200,29,113,19,115,131,87,71,138,207,97,15,233,19,222,168,93,53,172,205,37,35,58,147,82,200,115,33,51,170,195,192,117,211,204,8,70,113,48,196,99,82,155,178,228,238,213,161,98,184,117,124,247,219,33,34,22,223,152,220,253,126,8,124,129,7,143,76,106,39,147,134,102,108,182,101,234,13,157,85,112,158,35,50,247,234,120,76,106,115,44,145,254,47,165,134,223,10,34,94,240,101,194,11,196,209,213,91,194,145,118,55,52,253,169,138,117,85,120,166,98,17,17,105,193,254,39,55,33,123,223,104,186,35,147,41,121,85,81,82,99,50,183,86,46,39,114,91,152,79,151,139,66,95,108,62,80,190,133,179,111,12,114,19,50,236,84,178,206,128,65,115,36,61,57,224,255,149,183,68,87,74,37,139,29,196,116,255,61,162,42,133,244,61,58,26,58,32,13,253,244,96,120,92,73,110,165,246,137,211,15,228,79,33,175,237,183,181,135,241,36,206,54,133,58,5,236,191,126,185,213,230,226,225,111,210,130,104,137,217,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("183063be-c838-4c18-9571-10db5f203784"));
		}

		#endregion

	}

	#endregion

}

