namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CustomDataSchemaExtractorSchema

	/// <exclude/>
	public class CustomDataSchemaExtractorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CustomDataSchemaExtractorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CustomDataSchemaExtractorSchema(CustomDataSchemaExtractorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ed941630-e412-4e94-9797-230179cb82d4");
			Name = "CustomDataSchemaExtractor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6b2e55c4-93df-4e50-a678-d373851bda85");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,85,219,110,218,64,16,125,118,164,252,195,74,121,177,165,200,31,144,2,85,67,72,133,26,162,40,36,125,169,170,106,49,3,89,213,222,165,123,161,88,85,255,189,179,94,27,123,109,108,170,170,47,198,51,158,203,57,103,102,23,78,51,80,59,154,0,185,125,90,44,197,70,199,83,193,55,108,107,36,213,76,240,248,25,118,66,106,198,183,241,61,85,218,89,51,190,101,28,226,169,81,90,100,151,23,191,46,47,2,163,48,132,44,115,165,33,123,215,178,177,98,154,66,98,203,169,248,35,112,144,44,233,196,60,48,254,163,118,254,61,150,83,57,18,186,222,71,195,226,37,200,61,75,96,33,214,144,198,179,131,6,174,44,166,110,112,221,232,142,106,186,20,70,38,16,127,88,41,45,169,163,241,15,41,133,31,243,48,243,74,194,22,93,100,154,82,165,110,136,211,177,72,75,222,32,163,136,204,38,9,89,4,51,174,65,114,154,146,196,70,247,7,147,27,50,63,225,30,57,96,53,40,79,210,145,43,55,24,99,221,147,9,34,193,57,227,243,136,254,158,65,186,70,248,79,146,237,169,6,247,113,231,12,34,129,174,5,79,115,242,170,64,98,57,238,230,79,190,25,207,118,122,4,87,192,215,174,170,223,2,3,81,64,99,121,96,163,121,169,132,139,57,234,210,171,72,216,234,237,183,142,136,221,219,32,104,33,34,227,86,156,29,117,240,123,24,231,2,244,155,232,213,226,37,223,225,67,76,83,105,223,66,139,244,51,77,13,20,254,117,211,170,48,73,208,70,114,255,27,97,138,220,50,78,101,238,23,120,79,52,254,136,77,184,202,53,124,249,26,225,30,120,121,241,241,173,201,164,194,86,203,134,135,212,100,133,228,123,144,250,69,180,191,132,56,9,187,240,73,97,61,226,181,113,221,145,190,172,145,156,116,87,228,246,84,98,17,9,62,141,113,79,86,113,108,106,50,14,215,209,14,91,211,139,10,142,1,219,144,176,211,34,158,171,7,33,190,155,93,5,164,146,153,195,79,242,12,27,144,192,19,232,208,118,161,65,131,118,233,169,39,218,105,21,85,49,61,156,142,221,156,183,89,245,92,134,179,109,70,201,21,7,234,83,233,97,208,33,48,132,63,26,222,149,83,91,82,237,135,93,190,6,45,114,199,138,201,224,222,142,92,68,223,218,76,202,213,82,173,83,224,115,42,217,180,186,52,41,42,188,231,237,223,77,120,32,227,201,192,62,31,226,79,144,95,147,131,59,32,145,207,249,252,73,55,171,148,37,165,64,197,59,153,207,184,201,64,210,85,10,163,186,219,132,148,23,82,248,127,110,98,84,169,225,106,105,229,125,43,142,78,236,80,156,21,165,35,199,128,26,206,235,59,209,247,7,114,47,110,156,75,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ed941630-e412-4e94-9797-230179cb82d4"));
		}

		#endregion

	}

	#endregion

}

