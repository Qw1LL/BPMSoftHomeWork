namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MarkNotificationAsReadExecutorSchema

	/// <exclude/>
	public class MarkNotificationAsReadExecutorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MarkNotificationAsReadExecutorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MarkNotificationAsReadExecutorSchema(MarkNotificationAsReadExecutorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("17f0c961-1fc6-42a9-a07e-2c90890eff7b");
			Name = "MarkNotificationAsReadExecutor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,219,110,227,54,16,125,246,2,251,15,172,250,66,1,134,224,182,111,201,38,69,226,92,32,32,241,166,177,183,125,40,138,5,35,141,109,54,18,229,229,37,89,183,187,255,222,161,40,217,186,43,232,75,96,145,156,195,51,231,204,12,35,88,10,106,199,34,32,151,15,247,203,108,173,131,121,38,214,124,99,36,211,60,19,193,34,211,124,205,163,252,67,189,127,247,239,251,119,19,163,184,216,144,229,94,105,72,79,27,223,24,157,36,16,229,167,131,91,16,32,121,212,58,115,199,197,151,227,226,241,222,52,205,68,215,186,132,238,213,224,234,178,103,227,134,69,58,147,28,212,113,223,174,227,253,75,208,26,63,21,57,171,71,212,179,174,28,68,4,196,248,81,194,6,55,200,60,97,74,157,144,123,38,159,171,202,92,168,71,96,241,245,87,136,12,222,155,71,252,121,5,107,102,18,125,201,69,140,56,84,239,119,144,173,105,56,28,234,79,201,2,29,65,118,222,240,65,207,255,11,47,217,153,167,132,71,36,178,172,70,72,145,19,50,114,55,226,161,189,248,247,152,45,186,168,153,208,152,241,131,228,47,76,131,219,223,185,15,18,217,125,194,133,198,187,191,94,36,73,246,10,241,124,107,196,243,146,255,99,115,248,105,54,155,157,182,3,148,150,214,145,48,191,29,11,198,164,194,38,93,38,238,214,189,254,192,71,72,157,168,43,246,148,28,194,14,171,54,50,207,2,68,236,18,169,103,117,195,33,137,251,82,146,120,117,38,146,61,249,164,64,98,254,194,21,51,249,108,106,223,53,114,86,128,207,162,162,235,18,108,15,28,148,24,225,147,171,44,141,173,88,203,42,183,180,32,229,236,29,182,141,54,152,214,137,250,196,182,236,100,210,224,143,130,117,36,244,125,152,232,131,204,118,32,53,182,85,143,120,86,136,69,191,14,5,149,13,232,226,215,132,175,9,29,82,142,156,147,153,239,142,78,36,104,35,197,152,208,246,100,40,184,30,160,65,253,226,220,155,17,191,191,65,156,123,208,219,172,183,172,194,107,97,82,144,182,94,63,220,26,30,159,147,91,168,113,84,171,204,218,76,237,38,169,18,90,225,220,8,227,41,185,66,152,21,199,82,151,121,157,219,159,165,183,47,76,214,66,194,88,253,102,64,238,209,100,1,175,196,165,68,27,21,224,7,171,108,71,7,100,242,3,215,154,212,11,99,175,48,33,184,145,89,74,219,253,231,7,127,108,65,2,245,16,95,227,236,173,68,132,234,250,139,97,9,117,96,193,3,147,120,94,131,108,242,9,230,70,74,16,218,86,115,112,128,241,253,224,66,196,212,91,180,20,25,191,160,173,98,137,246,120,144,176,130,114,7,74,125,148,61,88,21,209,29,70,215,240,26,101,180,102,137,66,0,194,84,97,202,105,159,127,214,186,14,71,3,215,244,112,172,38,100,198,98,144,228,236,60,31,93,168,29,22,150,187,248,119,150,152,162,218,156,135,37,191,85,118,199,149,46,219,160,232,130,198,117,213,121,80,22,241,75,134,181,57,218,92,69,81,218,214,254,161,241,232,6,43,185,71,122,57,177,166,255,83,226,125,218,197,120,77,13,92,51,109,212,1,220,155,186,12,50,163,73,246,244,55,6,18,117,68,207,97,81,221,98,182,12,206,149,179,174,23,171,54,22,42,157,159,27,84,185,168,10,131,9,188,224,76,68,77,67,161,127,249,153,182,248,56,156,17,50,157,224,31,206,200,140,124,251,214,189,121,222,149,128,227,255,107,255,214,73,39,88,175,215,118,34,185,199,134,182,7,88,163,96,74,221,237,196,113,70,182,29,238,26,28,200,166,179,153,166,164,213,62,248,72,194,161,136,139,129,99,235,58,8,69,171,215,20,109,242,243,203,230,41,10,255,205,243,188,253,32,231,226,148,104,255,103,98,183,143,7,243,45,68,207,23,114,131,42,11,125,157,238,244,158,10,76,5,255,101,236,154,99,101,235,150,192,245,240,133,73,146,50,186,58,185,92,212,168,149,238,216,235,150,39,64,104,83,71,172,214,158,167,171,75,131,198,220,220,211,210,191,74,105,53,141,26,112,199,173,214,23,113,237,63,101,247,192,55,197,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("17f0c961-1fc6-42a9-a07e-2c90890eff7b"));
		}

		#endregion

	}

	#endregion

}

