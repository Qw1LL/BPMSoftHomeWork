namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DCReplicaModelSchema

	/// <exclude/>
	public class DCReplicaModelSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DCReplicaModelSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DCReplicaModelSchema(DCReplicaModelSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("eb4f0b98-3e23-4d31-a310-9250a56f1ae8");
			Name = "DCReplicaModel";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("748ec229-6875-456a-9dfd-63087e63e63a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,84,77,111,219,48,12,61,167,64,255,3,151,30,154,0,131,189,115,211,100,88,29,96,8,176,108,197,218,157,134,30,20,153,142,181,218,146,43,201,75,131,98,255,125,148,252,145,56,233,50,111,57,88,17,69,62,62,82,79,148,44,71,83,48,142,112,115,187,188,83,137,13,34,37,19,177,46,53,179,66,201,96,190,149,44,23,156,140,22,165,13,150,42,198,204,156,159,189,156,159,13,74,35,228,26,238,182,198,98,62,57,216,7,159,132,124,218,25,123,97,207,153,101,238,191,102,220,82,40,5,95,104,92,147,35,68,25,51,230,10,230,209,87,44,50,193,153,103,225,61,194,48,132,107,83,230,57,211,219,89,189,247,222,96,21,104,44,52,26,130,134,152,160,33,119,81,144,40,77,17,136,192,53,38,211,97,139,57,12,103,64,174,194,110,131,6,55,220,3,46,202,21,121,1,247,216,135,68,6,212,14,250,182,124,111,181,42,80,91,129,68,250,214,7,86,231,135,108,189,225,155,20,79,37,130,136,93,246,68,160,118,249,143,9,52,12,62,150,34,134,69,12,47,176,70,59,1,227,62,191,96,234,237,193,103,220,184,117,52,158,156,72,88,115,191,52,192,89,225,47,226,100,66,99,181,187,194,168,242,237,230,253,151,178,64,37,64,202,40,50,102,113,175,211,127,169,116,30,221,215,49,135,53,247,200,45,99,124,134,156,153,71,216,8,155,10,9,54,197,29,7,102,96,37,236,70,24,4,2,112,244,86,153,226,143,85,24,26,175,20,94,106,237,4,164,171,158,157,38,44,200,113,233,178,245,229,89,43,191,147,169,165,215,43,101,115,57,53,80,223,196,31,180,102,219,182,98,115,217,214,108,83,102,129,105,215,59,158,149,49,198,255,213,133,239,15,112,227,128,23,53,234,161,86,37,110,188,219,187,135,90,167,23,40,227,234,237,116,31,210,18,109,170,226,62,175,232,203,79,212,154,196,102,0,159,29,73,97,129,43,73,70,235,250,67,195,224,181,55,223,76,27,247,246,237,182,192,182,176,168,10,53,32,203,44,115,209,110,253,67,217,222,82,48,205,114,160,113,134,211,161,159,51,195,89,157,163,30,59,106,245,3,185,133,77,42,120,218,48,195,56,184,14,125,100,247,74,105,58,242,93,25,110,148,48,75,183,112,68,123,212,157,67,85,166,49,76,61,218,160,202,251,134,186,77,220,189,101,240,222,119,254,8,7,220,52,119,63,122,98,211,10,37,88,196,111,107,163,87,116,99,118,155,230,160,17,93,115,86,239,219,227,122,96,180,199,213,190,57,238,8,164,241,217,55,6,247,202,203,116,52,174,34,72,207,110,185,242,245,188,174,155,74,242,93,35,217,126,3,59,197,255,133,228,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("eb4f0b98-3e23-4d31-a310-9250a56f1ae8"));
		}

		#endregion

	}

	#endregion

}

