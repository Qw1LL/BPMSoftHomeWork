namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EntityDataExtractorSchema

	/// <exclude/>
	public class EntityDataExtractorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EntityDataExtractorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EntityDataExtractorSchema(EntityDataExtractorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9387fb49-2e15-4ac1-b41e-ac8498565853");
			Name = "EntityDataExtractor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("de8ae9a8-a9a7-4323-ba50-b61a787183b3");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,87,77,111,227,54,16,61,43,64,254,195,212,123,168,12,164,241,125,215,54,176,142,157,54,64,183,200,38,45,122,44,104,105,28,179,149,40,151,164,156,120,131,252,247,14,57,148,245,17,203,118,15,109,14,137,72,14,135,143,111,102,30,39,74,228,104,54,34,65,152,221,127,121,44,86,246,250,166,80,43,249,84,106,97,101,161,224,242,226,245,242,226,242,34,42,141,84,79,240,184,51,22,243,79,157,49,109,201,50,76,156,189,185,254,17,21,106,153,188,179,153,11,43,234,201,250,176,60,47,212,161,121,141,135,103,219,248,122,108,230,179,158,133,133,178,210,74,52,180,76,6,31,52,62,185,75,222,100,194,152,143,224,23,119,14,232,226,197,106,145,216,66,123,179,209,104,4,99,83,230,185,208,187,105,24,207,132,193,176,1,82,218,1,88,109,185,14,22,193,7,175,46,201,60,5,58,234,17,29,83,240,119,137,122,7,66,165,144,20,106,139,218,130,180,96,11,48,27,76,228,74,38,176,42,116,46,108,229,107,60,106,28,191,41,151,25,89,136,165,225,3,18,135,254,16,120,10,94,196,209,219,223,244,86,98,150,210,85,239,181,220,10,139,188,216,189,159,159,184,149,153,69,109,28,144,234,110,240,213,161,118,152,222,131,138,54,236,17,126,150,198,142,189,33,5,42,37,178,11,53,133,63,86,236,141,105,143,62,160,74,25,80,27,221,189,46,54,196,5,197,231,127,71,88,57,35,190,162,40,122,66,27,190,34,185,130,184,130,15,147,9,168,50,203,134,213,98,84,175,128,194,231,131,174,227,161,203,69,247,163,209,150,90,53,201,112,179,111,128,25,229,210,235,113,35,255,199,255,126,251,55,28,22,150,178,13,211,35,44,142,13,34,36,26,87,147,193,111,6,53,225,86,92,202,131,209,20,164,50,86,168,4,123,25,13,254,161,189,181,59,124,5,34,244,19,84,1,48,110,240,118,4,147,103,48,196,53,241,129,37,47,39,49,108,165,182,165,200,170,18,99,39,225,232,230,145,125,204,17,96,170,168,210,85,142,227,206,87,217,17,144,119,138,226,43,50,249,13,15,213,94,15,90,63,179,17,90,228,160,72,121,39,131,178,205,249,244,188,112,144,87,239,132,25,96,61,56,0,34,238,196,161,125,88,149,197,29,163,73,199,204,103,224,9,234,190,160,93,23,45,93,137,162,94,226,62,167,41,112,118,195,74,23,121,248,54,164,132,213,43,226,148,176,86,49,175,149,231,242,201,206,6,83,174,103,120,94,203,100,13,34,77,41,63,200,41,187,106,145,23,114,114,91,200,212,33,227,125,183,132,43,40,66,253,182,197,21,97,148,152,40,200,109,188,21,116,5,62,72,58,109,245,27,134,77,229,96,61,250,73,152,189,30,212,218,193,107,159,85,26,179,143,225,97,65,96,179,223,215,168,177,107,88,137,66,136,16,115,126,70,140,78,171,194,189,70,226,8,235,87,45,188,88,203,93,253,68,133,53,231,91,151,25,154,147,5,186,127,177,60,217,225,8,127,61,175,145,189,96,110,194,19,201,16,52,154,50,179,166,231,181,228,151,193,15,9,160,200,55,25,126,132,187,133,42,115,212,98,153,225,120,46,61,100,242,63,38,52,212,32,92,65,177,252,147,0,78,167,87,148,46,196,50,252,133,59,248,193,165,99,153,43,159,86,87,176,21,89,137,245,164,31,94,195,153,57,233,58,128,7,20,169,203,203,249,254,219,229,166,93,183,47,213,74,77,239,135,159,3,51,253,218,186,59,101,91,247,238,227,81,101,218,67,250,153,36,84,108,251,3,31,252,121,241,93,3,117,125,153,42,102,167,19,238,148,148,54,20,129,162,250,94,15,254,179,226,103,229,108,215,62,215,236,190,94,3,156,170,108,67,145,95,147,121,171,26,143,61,103,191,34,165,161,19,153,220,51,210,108,88,92,131,218,110,16,59,186,215,236,17,157,113,111,155,216,199,79,149,21,46,132,103,228,13,51,114,110,174,4,176,206,247,94,29,223,213,53,205,157,18,86,182,218,11,38,124,215,233,179,184,147,143,231,179,197,11,38,165,35,39,93,238,63,39,157,118,131,154,124,83,106,156,207,234,169,120,88,203,110,240,117,56,167,201,25,235,45,123,71,158,141,235,211,26,142,162,115,89,74,201,253,35,117,148,147,67,181,229,22,235,122,98,199,161,7,12,251,170,105,150,251,102,43,24,53,31,10,187,214,197,179,239,66,127,33,234,30,112,69,82,70,189,194,226,37,193,141,231,96,80,253,71,194,28,167,50,85,223,91,215,25,65,185,113,153,209,12,92,72,213,65,192,116,164,241,228,217,230,228,219,63,191,142,230,71,84,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9387fb49-2e15-4ac1-b41e-ac8498565853"));
		}

		#endregion

	}

	#endregion

}

