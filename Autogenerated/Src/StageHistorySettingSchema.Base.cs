namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: StageHistorySettingSchema

	/// <exclude/>
	public class StageHistorySettingSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public StageHistorySettingSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public StageHistorySettingSchema(StageHistorySettingSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("42688b4c-cf7a-4a15-b9ff-7de341cf3dd5");
			Name = "StageHistorySetting";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("76eace8e-4a48-486b-bf04-de18fe06b0a2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,88,77,111,219,56,16,61,187,64,255,3,225,94,28,32,176,239,117,236,160,117,155,214,135,100,3,184,221,75,81,4,138,68,59,66,245,97,144,148,23,222,34,255,125,71,34,101,113,70,148,76,185,123,113,66,106,222,155,225,112,248,56,82,22,164,92,238,131,144,179,143,143,247,155,124,171,166,171,60,219,198,187,66,4,42,206,179,183,111,126,191,125,51,42,100,156,237,216,230,40,21,79,231,167,241,42,23,28,143,166,159,51,21,171,152,203,102,186,97,77,211,60,131,121,120,242,78,240,29,112,179,85,18,72,249,158,109,84,176,227,95,99,169,114,113,220,112,165,0,86,153,253,216,112,17,7,73,252,111,240,156,240,159,48,177,47,158,147,56,100,251,64,40,152,103,97,9,119,163,71,16,53,252,158,60,221,197,60,137,192,213,163,136,15,129,226,250,225,94,15,152,224,65,148,103,201,145,73,37,202,144,159,34,190,173,88,87,121,82,164,217,3,100,136,45,216,184,154,26,207,189,144,107,121,23,103,65,130,9,62,103,145,55,124,83,132,33,151,114,91,16,142,102,222,147,234,47,17,113,129,57,30,138,244,153,11,79,124,157,89,5,73,255,4,150,173,156,232,233,97,108,159,10,222,230,50,147,195,152,244,159,56,164,185,110,230,7,175,179,103,223,127,60,228,89,93,148,60,250,105,19,87,149,127,220,132,47,60,13,216,19,183,70,195,144,178,244,118,49,176,94,133,23,254,187,44,43,35,203,120,88,158,116,246,84,160,177,62,170,163,119,60,139,244,33,194,39,10,12,33,133,69,8,238,224,88,85,7,211,156,42,125,72,29,199,114,66,28,98,127,87,172,84,154,209,136,24,45,136,89,181,168,215,254,216,30,69,190,231,160,17,188,58,241,185,2,36,143,234,51,111,134,56,123,104,176,88,226,13,100,183,183,85,100,19,60,187,32,9,212,226,103,158,222,7,25,172,95,76,65,6,162,53,100,42,200,66,254,241,248,125,29,77,108,43,24,95,93,205,123,35,171,242,104,5,102,213,71,19,151,61,121,97,88,150,31,223,168,80,177,53,193,225,105,28,35,129,252,65,168,136,201,142,216,171,40,218,245,74,202,142,12,117,105,238,184,50,255,141,4,87,133,112,157,153,81,85,157,240,43,27,227,67,144,20,124,186,122,225,225,175,15,98,87,164,80,70,15,69,146,76,198,24,61,46,151,80,218,19,86,200,83,197,96,177,191,162,216,191,20,113,196,214,17,251,205,32,194,57,3,207,115,230,176,32,149,119,206,28,87,132,151,53,221,20,47,16,168,173,175,105,115,173,250,35,208,77,234,11,171,111,205,161,11,183,110,201,129,208,230,74,28,8,68,55,224,64,236,125,16,103,186,42,46,90,171,199,222,61,231,121,194,214,242,3,20,242,129,247,216,153,235,216,46,81,125,255,46,209,220,237,180,156,157,187,160,86,185,214,72,107,234,28,16,85,46,194,163,39,231,104,236,206,129,70,174,159,201,74,208,44,33,211,41,188,170,136,65,45,93,221,103,183,63,71,159,73,150,221,225,21,157,164,147,243,74,96,186,155,216,190,56,220,13,171,111,48,244,144,118,70,228,114,211,29,86,171,249,245,139,199,58,253,29,129,16,226,243,117,229,106,159,151,21,167,171,200,58,226,114,171,76,71,136,221,158,207,70,235,104,207,47,141,21,201,154,163,200,187,60,158,141,209,221,248,95,26,38,21,209,254,156,186,124,159,13,24,105,237,31,7,76,149,91,7,236,83,135,187,255,171,6,123,164,203,237,173,163,65,155,205,102,236,70,22,105,26,136,227,178,158,184,139,147,68,150,23,69,249,226,32,217,86,228,41,211,221,247,244,132,153,81,208,13,124,25,8,82,150,129,175,197,88,230,133,8,249,120,169,179,52,189,153,85,15,151,86,126,14,177,80,5,124,71,56,228,112,181,149,14,239,192,139,54,55,93,58,211,36,245,171,9,220,116,11,51,53,133,47,9,165,111,189,186,191,155,246,236,116,215,157,44,191,112,245,237,184,231,145,101,122,83,94,139,203,201,88,155,214,125,31,237,207,122,25,202,251,24,24,8,166,166,34,189,155,15,19,134,32,162,86,91,231,205,71,145,21,173,222,246,145,221,64,120,19,106,123,20,29,110,10,189,153,16,140,16,182,122,198,1,172,20,139,168,237,190,210,155,211,2,153,252,209,141,33,109,231,224,237,193,120,215,222,227,246,116,168,3,132,118,209,183,154,216,161,30,40,129,203,73,171,219,29,234,132,18,56,15,201,37,85,221,198,158,54,250,245,172,72,106,89,100,255,196,234,165,17,204,234,133,81,250,106,165,166,24,164,149,88,39,53,65,173,147,70,168,225,179,143,181,224,201,24,86,117,13,175,169,38,105,29,70,70,18,193,208,8,105,191,57,213,191,107,250,150,219,15,39,162,119,77,94,122,61,192,45,133,51,28,173,239,19,141,240,245,209,153,221,55,36,230,130,61,31,5,22,51,131,198,61,190,15,73,75,187,78,76,173,6,253,60,157,45,91,134,199,110,172,107,33,243,73,46,209,39,146,98,210,14,123,239,25,86,37,76,138,251,86,111,202,175,84,134,48,43,125,236,79,220,146,30,76,220,106,7,253,11,183,93,117,237,39,154,174,252,242,164,229,200,110,225,94,255,3,15,112,203,118,66,26,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("42688b4c-cf7a-4a15-b9ff-7de341cf3dd5"));
		}

		#endregion

	}

	#endregion

}

