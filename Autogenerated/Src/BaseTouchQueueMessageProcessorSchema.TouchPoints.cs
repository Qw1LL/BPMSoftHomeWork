namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseTouchQueueMessageProcessorSchema

	/// <exclude/>
	public class BaseTouchQueueMessageProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseTouchQueueMessageProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseTouchQueueMessageProcessorSchema(BaseTouchQueueMessageProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("3aa70af8-d87d-47b6-96a6-1b7d6c78bd6b");
			Name = "BaseTouchQueueMessageProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,86,77,111,219,56,16,61,187,64,255,195,192,123,145,1,195,222,115,108,171,104,156,116,81,236,38,72,145,244,180,88,20,180,60,82,136,72,164,64,82,238,186,69,255,123,135,162,40,81,146,237,228,36,145,156,207,247,158,70,20,172,64,93,178,4,225,250,225,238,81,166,102,177,149,34,229,89,165,152,225,82,188,127,247,243,253,187,73,165,185,200,224,241,168,13,22,171,193,154,236,243,28,19,107,172,23,127,161,64,197,147,206,166,11,170,176,219,205,114,185,99,249,213,213,86,22,133,20,139,127,100,150,209,246,105,175,197,39,150,24,169,56,106,58,39,139,63,20,102,148,11,182,57,211,250,10,174,153,198,39,89,37,207,95,42,172,240,14,181,102,25,62,40,153,208,155,84,181,199,114,185,132,181,174,138,130,169,99,220,172,27,11,212,96,19,230,8,230,88,226,30,10,231,15,169,146,5,249,32,66,162,48,221,76,187,12,211,101,188,240,49,151,65,208,178,218,229,60,1,182,211,70,81,193,144,216,242,94,169,14,92,249,167,207,8,119,10,219,181,75,240,26,85,89,40,168,235,135,58,155,179,24,182,87,111,124,22,220,112,150,243,31,212,33,3,129,223,129,147,63,19,196,179,76,193,60,99,216,221,229,42,169,99,215,141,237,123,220,184,219,41,153,98,5,8,18,211,102,90,105,84,84,174,112,162,152,198,219,74,41,20,6,236,62,36,237,193,98,189,172,189,234,32,13,124,151,43,137,190,246,34,215,1,187,229,140,224,220,145,127,52,220,182,10,158,76,172,200,40,255,6,232,229,142,9,138,171,72,174,198,109,71,142,225,7,201,133,209,211,153,85,226,100,114,47,13,79,121,237,99,1,28,213,229,207,135,9,157,183,101,224,145,180,96,48,59,70,110,239,87,67,41,138,189,99,181,79,49,245,89,162,50,164,116,34,88,73,67,225,112,239,76,74,191,132,27,94,39,33,240,215,79,36,217,57,124,170,68,178,30,213,54,39,190,77,28,131,175,96,117,81,43,157,50,134,154,191,61,16,115,14,35,171,3,35,33,151,25,61,232,8,74,199,139,253,96,209,154,157,19,72,169,248,129,138,128,97,64,248,134,221,98,213,111,243,192,149,169,88,62,246,9,223,29,177,25,26,216,196,189,96,240,225,3,68,189,141,77,109,58,169,135,134,27,40,71,203,190,3,46,136,25,71,150,234,224,99,251,168,178,170,160,227,104,40,235,57,244,213,56,155,53,196,235,19,245,108,224,192,242,10,223,162,130,59,52,207,114,63,150,192,171,159,185,118,84,147,124,206,242,224,209,109,167,212,65,242,61,140,148,122,198,152,30,150,107,130,173,6,236,158,62,246,104,36,60,63,66,223,30,231,6,117,162,120,105,49,60,31,174,214,51,40,212,85,110,198,161,189,90,234,118,8,242,75,113,110,168,207,39,94,32,149,193,148,177,171,48,54,49,245,231,28,110,255,79,176,46,8,176,125,163,33,80,229,185,159,38,7,166,156,232,45,10,116,214,3,37,128,128,76,121,10,81,16,166,31,167,11,20,192,16,196,11,193,105,91,232,96,176,17,2,245,46,62,139,84,70,109,93,243,176,199,129,247,124,148,213,199,83,104,42,37,220,130,180,58,200,112,171,20,13,226,211,41,218,46,219,108,179,213,36,144,124,71,152,60,160,82,124,143,53,242,205,124,111,152,138,234,127,0,211,47,39,85,21,192,95,232,140,128,242,127,108,166,199,3,186,193,191,37,119,213,250,182,69,83,4,47,136,197,87,147,220,203,239,206,200,168,163,103,168,21,134,255,70,254,165,204,118,120,216,249,27,205,254,35,208,15,242,133,88,215,89,3,225,47,72,152,161,1,25,133,58,106,25,183,250,36,219,211,200,93,89,203,134,8,243,172,124,57,142,135,83,158,61,45,56,234,194,110,223,60,108,94,187,80,220,96,202,5,77,25,82,179,187,218,36,76,248,63,64,75,2,253,64,180,44,220,101,234,173,183,133,194,249,78,227,75,191,161,144,85,123,3,11,175,14,117,68,215,185,142,215,75,255,22,220,42,252,120,216,73,153,195,150,137,129,224,206,207,48,59,199,61,235,246,94,108,24,221,162,254,198,163,255,20,59,21,248,153,52,0,218,193,223,223,164,189,223,216,100,30,202,117,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("3aa70af8-d87d-47b6-96a6-1b7d6c78bd6b"));
		}

		#endregion

	}

	#endregion

}

