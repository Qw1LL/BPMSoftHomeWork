namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ResourceDataProviderSchema

	/// <exclude/>
	public class ResourceDataProviderSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ResourceDataProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ResourceDataProviderSchema(ResourceDataProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("815e9d2c-171b-4c3d-8afc-101c840d40d6");
			Name = "ResourceDataProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("120fd877-7905-4e7f-9414-1956e0c20629");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,84,77,111,218,64,16,61,19,41,255,97,228,244,64,148,8,247,156,18,164,54,168,17,135,72,86,12,231,104,177,199,176,141,189,235,238,7,41,69,252,247,142,119,109,140,41,66,68,205,165,23,203,59,59,243,230,205,123,163,21,172,64,93,178,4,225,91,244,20,203,204,12,30,164,200,248,194,42,102,184,20,131,169,98,201,43,23,139,203,139,205,229,69,207,106,250,133,120,173,13,22,95,14,206,84,152,231,152,84,85,122,240,136,2,21,79,218,156,22,93,33,69,41,126,165,112,65,185,240,144,51,173,239,96,138,130,9,51,102,134,69,74,174,120,138,202,101,133,97,8,67,109,139,130,169,245,168,62,215,9,192,69,38,85,225,120,66,166,100,1,198,97,128,66,45,173,162,145,52,170,21,79,112,208,224,132,123,64,165,157,231,60,129,164,234,14,207,117,197,126,123,104,56,197,30,165,75,173,71,114,208,119,55,197,119,142,121,74,99,68,138,175,152,65,127,89,250,3,17,98,169,20,249,26,180,81,149,24,47,13,195,136,153,101,108,179,140,255,130,123,8,66,86,242,176,161,18,120,149,122,87,40,82,223,163,219,144,108,34,52,155,24,169,170,182,110,26,159,113,40,153,11,236,165,131,204,128,249,193,43,101,254,150,198,71,74,166,88,1,130,246,227,62,176,164,36,33,8,111,111,48,154,16,24,19,164,48,65,205,58,119,131,97,232,10,29,78,173,241,49,117,251,221,50,232,118,184,174,170,123,189,59,152,51,141,253,131,59,216,192,246,180,54,79,104,150,50,61,75,22,178,198,160,110,87,230,141,155,37,184,9,208,160,58,41,144,66,99,149,208,35,26,175,36,117,177,222,193,101,187,119,195,176,201,217,83,99,95,133,93,169,231,209,127,180,60,221,113,153,164,183,224,2,165,146,63,104,246,234,60,151,50,7,174,191,146,18,43,36,37,156,78,43,166,168,232,167,69,109,102,42,167,77,242,123,91,253,223,28,221,181,27,218,181,196,117,172,182,140,16,60,77,136,73,207,169,124,69,193,127,99,26,73,109,158,61,234,240,24,231,81,191,237,121,11,2,223,106,54,189,73,74,20,246,134,240,209,168,25,130,46,219,129,252,93,179,32,211,117,137,116,253,185,14,79,234,57,41,212,140,236,46,182,215,142,245,246,63,240,117,86,166,71,125,253,56,31,173,235,112,202,71,251,62,27,29,208,73,43,63,222,174,49,178,42,223,89,86,47,199,185,79,211,110,151,130,81,189,98,64,227,9,195,51,142,170,243,26,117,204,141,13,51,86,67,34,211,218,223,202,91,122,244,107,49,222,97,241,24,115,90,169,67,139,255,193,211,79,65,152,58,204,112,211,226,109,79,56,236,25,156,107,114,199,141,131,23,212,71,187,65,23,251,3,83,70,11,205,39,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("815e9d2c-171b-4c3d-8afc-101c840d40d6"));
		}

		#endregion

	}

	#endregion

}

