namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: BaseColumnsAggregatorSchema

	/// <exclude/>
	public class BaseColumnsAggregatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseColumnsAggregatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseColumnsAggregatorSchema(BaseColumnsAggregatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("d216f6f8-6004-4467-9e7f-3679e44d223b");
			Name = "BaseColumnsAggregator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,75,111,219,56,16,62,171,64,255,195,172,123,113,0,195,190,55,182,138,38,117,186,1,90,108,176,118,123,45,24,121,108,115,43,147,90,146,114,54,8,242,223,119,36,138,54,69,209,143,4,237,37,17,201,153,111,94,223,12,105,193,54,168,11,150,33,92,221,125,157,201,165,25,94,75,177,228,171,82,49,195,165,24,222,240,28,111,55,133,84,230,237,155,167,183,111,146,82,115,177,130,217,163,54,184,185,12,214,164,154,231,152,85,122,122,248,25,5,42,158,117,100,190,112,241,239,126,115,111,84,97,124,119,56,21,134,27,142,154,142,73,224,157,194,21,225,195,117,206,180,126,15,87,76,35,89,45,55,66,127,92,173,232,140,25,169,106,193,162,188,207,121,6,236,94,27,197,50,3,89,165,16,151,31,207,83,120,15,183,7,176,146,36,121,88,163,66,152,183,133,238,148,204,80,235,90,132,50,83,9,58,231,110,56,230,11,242,238,78,241,45,51,104,15,11,187,128,47,92,155,202,226,143,172,13,211,4,152,188,67,177,176,56,109,80,170,11,133,82,102,228,84,13,45,13,165,26,23,86,104,52,26,193,88,151,155,13,83,143,169,219,184,86,72,6,53,112,82,100,130,74,44,151,96,30,11,36,73,68,200,20,46,39,189,104,208,79,243,231,222,40,29,238,128,71,33,242,184,96,138,109,64,16,121,38,189,82,163,34,231,132,173,124,47,253,70,107,200,118,27,195,241,168,150,174,149,11,231,118,188,18,253,111,45,44,104,67,95,192,36,133,64,98,18,200,156,72,34,165,173,64,85,209,233,204,20,214,30,66,177,43,210,129,164,236,227,114,229,13,72,162,161,234,158,36,89,161,105,190,18,190,132,126,135,4,240,199,4,68,153,231,23,78,42,81,104,74,37,162,116,169,142,159,237,191,46,208,4,62,163,9,189,232,95,52,106,199,81,107,208,231,35,121,9,107,124,42,43,65,213,130,229,19,80,90,46,225,249,120,237,166,91,20,166,170,91,221,217,116,82,155,176,109,142,213,153,149,248,147,137,69,142,106,220,10,125,170,148,84,245,241,71,181,210,41,248,219,39,40,243,21,205,90,118,186,57,154,21,74,184,166,172,180,41,3,102,205,104,252,48,1,15,82,253,132,7,110,214,176,226,228,10,144,55,220,60,130,206,214,184,97,141,222,185,77,103,117,103,181,170,141,180,151,78,99,120,126,247,213,40,182,242,58,13,169,77,146,238,200,31,87,243,8,141,250,211,142,245,38,24,127,203,81,184,161,90,72,69,186,90,148,54,253,128,128,85,139,7,91,195,107,230,22,253,136,21,203,232,134,59,206,235,173,228,11,248,171,85,253,254,17,66,88,254,84,95,206,105,95,236,195,240,86,108,229,79,236,155,53,215,3,79,214,183,124,6,125,78,143,155,23,18,104,129,218,112,97,47,234,51,121,227,169,244,82,123,177,59,131,62,218,235,89,227,58,62,202,27,107,208,238,126,218,155,243,77,255,14,214,248,240,173,162,69,139,240,183,141,7,114,154,228,213,149,105,129,181,119,9,28,201,181,75,198,161,180,236,222,35,238,158,56,52,164,15,186,103,231,91,132,38,88,113,245,92,30,104,162,43,170,94,218,41,116,107,200,56,166,247,246,231,251,167,195,145,126,162,215,195,222,143,216,237,95,247,167,141,164,213,163,242,254,31,18,0,235,221,0,94,212,178,65,187,191,182,77,155,219,101,231,63,23,244,250,227,102,33,179,38,238,248,67,177,9,185,185,143,182,92,153,146,229,224,19,190,121,143,217,69,107,132,130,146,210,216,207,1,156,53,91,7,246,22,247,225,191,179,188,164,210,236,191,93,94,170,119,70,23,1,38,193,67,195,53,156,239,164,143,230,189,12,146,121,216,109,209,215,70,108,90,91,148,198,86,167,101,125,219,126,78,34,9,104,69,218,233,233,87,21,237,112,177,78,228,153,166,143,192,135,182,126,147,213,91,34,242,127,148,29,79,190,250,153,68,223,245,73,83,199,153,44,21,189,207,219,98,245,223,58,176,203,95,69,199,166,189,110,184,88,212,232,55,82,205,216,22,207,153,203,131,86,120,7,201,118,38,51,252,137,124,148,18,29,87,91,46,29,226,64,208,229,118,215,223,164,157,255,1,103,209,6,233,250,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("d216f6f8-6004-4467-9e7f-3679e44d223b"));
		}

		#endregion

	}

	#endregion

}

