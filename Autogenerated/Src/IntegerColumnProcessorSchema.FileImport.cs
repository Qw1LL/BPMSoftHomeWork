namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: IntegerColumnProcessorSchema

	/// <exclude/>
	public class IntegerColumnProcessorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IntegerColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IntegerColumnProcessorSchema(IntegerColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e2041887-39e3-41a7-a400-517b34bdbd2a");
			Name = "IntegerColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bdeb1980-c322-4103-af7f-58bfe7162080");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,84,193,110,226,48,16,61,83,169,255,48,203,94,136,132,146,123,91,88,109,169,88,113,104,133,22,216,203,106,15,110,50,1,75,137,157,29,219,72,168,226,223,119,236,132,133,132,180,151,94,146,120,242,230,205,204,123,182,149,40,209,84,34,69,120,92,62,175,116,110,227,153,86,185,220,58,18,86,106,21,207,101,129,139,178,210,100,111,111,222,110,111,6,206,72,181,133,213,193,88,44,239,255,175,207,185,132,253,209,120,46,82,171,73,162,225,255,140,248,74,184,101,126,152,21,194,152,59,88,40,139,91,164,153,46,92,169,150,164,83,52,70,83,64,38,73,2,15,82,237,144,164,205,116,10,41,97,62,25,190,104,181,68,50,146,251,80,182,147,246,182,254,137,198,21,246,56,76,166,39,2,227,202,82,208,225,180,254,174,64,42,99,133,226,193,117,14,118,39,13,164,190,21,224,15,98,69,180,50,242,181,64,200,53,65,85,19,251,145,154,62,33,13,21,97,47,10,135,38,62,21,73,46,170,252,126,194,92,112,19,143,82,101,156,57,178,135,10,117,62,90,116,122,141,198,240,194,22,192,4,20,191,60,160,87,137,40,250,195,156,149,123,45,100,218,52,218,15,132,59,248,72,26,22,210,126,155,142,161,219,6,147,179,187,252,60,27,195,10,88,114,222,52,246,103,25,42,215,136,79,27,114,229,72,8,204,8,133,69,211,246,133,69,99,36,98,83,164,127,102,102,245,22,92,123,80,71,42,65,162,12,242,78,134,206,248,108,165,48,245,187,123,56,221,152,96,230,41,16,63,36,1,29,146,27,181,251,107,142,54,45,38,104,19,71,108,195,171,48,56,234,134,253,17,26,28,27,165,81,101,181,216,109,229,185,70,133,100,249,168,176,238,164,45,231,98,118,33,125,119,192,39,97,69,189,19,107,189,156,146,127,249,91,102,108,132,204,37,210,59,226,84,39,110,208,123,36,98,60,252,112,50,11,124,191,60,221,154,217,54,139,12,38,211,118,44,110,36,233,2,239,63,158,235,25,237,78,103,239,12,245,169,253,84,93,79,226,247,185,223,195,188,182,161,199,81,125,139,213,76,33,210,28,226,240,221,56,51,240,166,249,27,240,156,118,9,242,87,219,96,32,115,24,125,97,254,120,77,135,165,32,118,249,2,19,135,231,24,180,179,190,135,218,151,185,166,149,216,99,20,133,252,1,161,117,164,64,185,162,168,25,155,192,37,54,252,232,223,40,117,180,29,60,254,3,55,101,187,162,200,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e2041887-39e3-41a7-a400-517b34bdbd2a"));
		}

		#endregion

	}

	#endregion

}

