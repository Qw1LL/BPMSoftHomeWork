namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EmailFooterSupplierSchema

	/// <exclude/>
	public class EmailFooterSupplierSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EmailFooterSupplierSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EmailFooterSupplierSchema(EmailFooterSupplierSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9da4f22e-1e43-486d-bd33-7e00cd97b7a7");
			Name = "EmailFooterSupplier";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("77fa8847-960e-4748-ad77-e37bb90e03a0");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,87,219,142,219,54,16,125,118,128,252,3,171,62,196,11,184,118,210,244,234,139,210,196,221,77,247,97,129,109,236,246,157,150,198,54,11,137,84,40,202,91,117,225,127,207,144,20,109,221,44,219,69,251,178,88,138,51,103,134,51,115,14,105,78,99,72,19,26,0,249,240,248,176,16,107,53,156,11,190,102,155,76,82,197,4,127,249,226,249,229,139,94,150,50,190,33,139,60,85,16,79,14,235,163,131,132,246,175,195,91,174,152,98,144,226,54,26,124,45,97,131,152,100,30,209,52,29,147,219,152,178,232,78,8,5,114,145,37,73,196,64,26,179,209,104,68,166,105,22,199,84,230,126,177,190,19,50,38,18,146,40,39,9,149,138,216,88,239,3,197,118,42,31,58,167,81,201,43,201,86,17,11,72,160,99,181,135,234,233,163,29,147,18,60,85,148,43,76,236,81,162,97,160,32,52,233,244,18,183,36,129,182,33,169,146,58,248,111,42,142,150,16,39,17,85,64,102,228,23,111,186,146,254,52,100,59,127,186,197,127,176,168,28,77,243,8,102,175,214,130,171,111,158,128,109,182,106,76,86,34,10,39,175,252,231,31,246,99,141,222,195,172,209,212,58,248,207,175,247,110,189,186,4,228,199,86,144,55,215,129,252,180,31,147,22,148,111,175,67,249,185,29,229,237,117,40,111,94,183,195,124,87,129,209,85,126,254,126,239,77,58,250,243,24,81,198,151,240,183,42,53,201,211,85,39,88,100,93,56,130,117,50,103,199,147,154,236,49,87,27,31,163,157,67,191,147,34,158,211,68,115,68,227,234,101,167,253,2,120,88,178,199,165,34,130,119,186,124,130,128,37,12,13,75,126,75,209,233,50,23,73,222,230,54,15,58,221,150,76,69,80,206,46,91,253,133,102,218,199,80,4,115,183,44,41,214,5,101,144,39,9,72,205,111,228,140,161,155,221,175,19,216,124,248,35,5,169,163,114,4,70,103,205,217,38,105,29,107,181,241,252,96,91,95,26,222,246,54,160,204,153,240,80,108,167,219,155,22,31,246,221,89,27,162,203,44,80,66,94,146,247,61,71,5,163,17,251,7,82,66,9,135,39,194,140,80,160,98,138,53,81,91,64,23,0,18,72,88,207,188,22,157,241,70,190,21,161,19,39,54,95,80,211,104,76,56,106,241,204,203,42,135,245,252,37,134,200,106,197,155,142,140,71,185,100,45,161,251,181,186,85,145,111,138,58,214,140,102,53,179,75,74,250,0,106,43,66,163,156,166,21,78,55,139,190,216,33,251,8,234,147,22,112,71,199,254,74,136,136,176,84,235,232,7,17,230,46,31,9,42,147,188,180,65,222,85,181,118,220,164,246,149,73,86,228,189,181,235,239,195,208,222,46,76,229,88,248,40,139,121,74,158,88,176,197,63,81,68,86,122,218,34,3,114,105,91,33,253,236,249,7,72,92,85,155,120,32,230,142,73,149,209,136,236,4,195,20,194,208,185,204,109,18,125,115,165,230,139,96,11,49,253,61,3,105,176,92,237,52,44,250,88,219,190,167,171,231,221,76,218,182,180,30,225,112,158,216,84,120,199,254,138,117,61,177,143,18,3,70,98,78,236,23,50,212,105,99,52,231,196,222,253,161,247,133,193,190,163,85,56,87,132,186,186,134,84,209,75,59,226,156,238,195,82,99,88,136,41,179,53,178,231,76,127,108,31,116,116,231,139,5,163,253,143,25,182,237,136,236,26,179,163,82,247,9,217,165,21,164,209,195,26,83,135,101,131,7,202,233,6,228,128,120,46,144,171,90,203,116,232,89,152,148,105,164,43,139,57,90,192,90,152,65,57,209,179,117,214,79,48,170,136,114,52,180,79,176,127,85,121,135,225,249,235,42,104,165,230,13,55,123,136,50,139,204,135,51,141,58,200,15,7,124,211,130,209,32,61,90,253,98,195,197,30,184,150,186,35,213,4,105,97,204,135,182,12,253,163,151,51,215,101,94,230,9,20,83,252,39,141,50,152,218,24,254,145,111,3,3,217,187,208,233,200,195,75,227,148,104,119,85,168,26,101,47,13,87,176,248,170,80,150,215,131,242,19,106,80,122,30,13,26,15,159,65,235,187,166,136,89,126,187,92,38,22,135,9,166,60,36,155,98,44,236,143,139,107,165,227,191,152,197,254,137,177,211,146,81,186,4,103,221,29,209,151,169,223,162,156,6,230,112,226,89,243,22,46,93,192,21,225,104,242,165,57,242,55,215,221,187,231,158,90,230,71,222,218,60,97,106,234,242,191,72,122,102,222,77,141,214,40,251,136,234,82,242,131,232,153,122,86,244,191,174,168,189,2,183,56,214,177,139,228,43,188,11,50,124,75,188,171,141,195,113,14,198,78,115,110,227,68,229,149,238,88,184,142,242,219,175,213,143,251,47,136,103,199,243,237,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9da4f22e-1e43-486d-bd33-7e00cd97b7a7"));
		}

		#endregion

	}

	#endregion

}

