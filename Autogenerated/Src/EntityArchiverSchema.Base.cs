namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EntityArchiverSchema

	/// <exclude/>
	public class EntityArchiverSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EntityArchiverSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EntityArchiverSchema(EntityArchiverSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4048c8a8-0d47-4749-9c1f-91baef67ce53");
			Name = "EntityArchiver";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("76eace8e-4a48-486b-bf04-de18fe06b0a2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,87,75,111,219,70,16,62,203,128,255,195,194,185,208,64,65,163,185,20,240,11,136,37,39,21,224,52,134,213,156,130,34,88,45,71,210,162,203,93,117,119,41,71,105,253,223,59,220,7,73,241,33,203,46,90,212,7,153,228,206,243,227,204,55,67,73,115,48,107,202,128,220,220,127,156,169,133,77,199,74,46,248,178,208,212,114,37,143,143,254,60,62,58,62,26,21,134,203,37,153,109,141,133,252,162,117,143,26,66,0,43,197,77,250,1,36,104,206,106,153,218,172,134,142,230,29,151,127,244,139,166,147,27,60,192,163,47,159,230,70,9,176,144,156,252,148,254,248,54,125,75,254,34,83,105,65,47,202,160,185,33,42,156,19,42,51,242,200,133,32,115,32,26,114,181,129,140,112,73,138,53,83,121,105,94,131,0,106,192,164,39,167,191,161,225,55,26,150,24,114,109,236,156,76,223,105,182,226,27,20,190,149,150,219,173,11,96,93,204,5,103,104,41,250,236,74,141,60,72,163,179,179,51,114,105,138,60,167,122,123,29,31,204,216,10,114,74,36,2,157,86,66,103,77,41,99,181,195,196,9,254,130,114,4,237,141,70,163,37,216,18,28,20,8,23,79,123,220,252,204,141,85,122,75,204,161,238,130,194,63,243,58,149,25,103,212,130,33,118,133,239,34,56,199,43,13,11,208,32,25,190,3,255,112,32,152,185,82,130,124,0,59,53,15,149,134,15,41,57,189,216,227,248,179,1,77,152,146,210,23,222,128,245,82,106,92,9,57,165,198,237,43,242,197,82,47,114,233,208,53,3,62,167,119,8,236,165,7,249,58,40,148,240,154,215,225,139,33,91,66,99,197,145,140,90,138,121,163,148,204,134,2,152,220,140,189,64,80,159,97,225,51,27,159,237,70,177,207,249,4,124,95,189,210,185,87,223,231,214,255,190,1,153,249,94,28,108,248,177,160,198,188,174,217,203,151,222,207,109,41,146,208,189,86,12,140,185,83,75,223,212,88,84,92,34,53,209,172,197,18,46,130,115,226,59,222,201,2,10,55,9,130,185,24,91,2,4,73,165,241,200,169,68,182,136,166,223,115,16,25,218,190,215,124,131,173,228,15,215,254,6,243,160,153,146,98,75,90,164,51,3,75,190,66,188,188,232,85,153,220,220,126,3,86,96,151,147,175,217,60,94,135,174,106,161,94,39,138,44,110,117,193,80,178,140,201,229,22,66,242,121,182,50,76,26,94,106,39,63,244,197,91,133,123,26,170,161,78,128,92,213,167,190,59,26,17,227,225,78,248,85,213,14,229,240,17,236,74,13,66,186,81,60,11,236,199,191,131,11,143,131,73,28,19,173,168,25,83,195,104,6,49,70,63,154,146,70,56,241,100,100,145,110,195,101,51,220,116,102,169,182,191,106,42,13,117,68,227,152,204,73,249,126,172,160,153,96,63,37,53,8,105,140,165,146,231,11,146,116,67,194,63,223,91,53,101,122,144,159,181,247,68,64,96,59,180,204,188,19,34,74,62,111,161,39,223,178,197,121,111,194,79,4,135,3,91,145,228,246,27,131,181,35,93,136,87,117,54,77,91,15,184,75,204,41,251,189,23,62,187,210,234,177,182,16,157,184,127,79,47,171,11,101,145,18,33,139,149,17,110,201,134,107,91,80,225,107,164,239,109,97,55,23,57,104,58,23,112,217,94,4,174,125,13,151,112,133,220,22,184,201,208,50,255,182,104,168,246,146,178,218,58,35,127,148,246,112,119,234,97,130,157,106,188,232,164,63,144,206,158,154,121,89,86,157,100,234,97,31,30,92,85,58,233,123,174,141,253,164,39,176,160,133,176,9,144,43,52,152,14,76,252,144,76,89,246,93,155,87,68,22,66,212,221,231,138,65,194,99,147,145,92,80,177,62,146,147,218,67,4,220,172,84,33,178,114,106,152,53,48,190,224,144,157,52,33,28,181,253,166,59,99,108,248,13,28,130,125,187,209,254,189,98,74,31,74,110,54,128,144,182,202,234,192,116,14,234,167,113,129,36,154,119,70,28,246,89,62,71,239,123,86,139,56,62,76,140,93,3,83,58,27,218,169,194,232,113,80,6,47,73,76,172,203,228,56,190,96,231,165,180,226,255,15,214,142,222,229,161,59,18,187,251,67,159,76,123,97,120,118,68,119,141,84,104,69,144,176,69,203,214,113,187,106,167,244,146,221,146,30,52,250,178,250,61,204,117,165,117,200,160,71,30,95,35,73,162,248,46,14,67,187,123,248,76,37,106,225,183,90,112,107,109,213,52,123,139,207,239,245,221,52,171,180,90,235,125,205,4,173,69,255,127,82,141,183,3,172,185,119,167,221,145,196,229,54,124,199,55,148,95,92,172,67,214,147,240,157,138,95,78,134,46,225,212,129,122,78,230,152,80,18,159,121,204,15,199,21,37,255,6,210,178,128,48,241,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4048c8a8-0d47-4749-9c1f-91baef67ce53"));
		}

		#endregion

	}

	#endregion

}

