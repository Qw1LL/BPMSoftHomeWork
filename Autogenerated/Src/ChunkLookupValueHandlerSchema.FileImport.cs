namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ChunkLookupValueHandlerSchema

	/// <exclude/>
	public class ChunkLookupValueHandlerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ChunkLookupValueHandlerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ChunkLookupValueHandlerSchema(ChunkLookupValueHandlerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0b286e0a-684a-4d22-a2be-ff6633bab9da");
			Name = "ChunkLookupValueHandler";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,87,75,111,227,54,16,62,123,129,253,15,132,247,34,163,134,124,111,108,5,187,174,179,53,16,23,65,188,105,143,11,70,26,59,108,36,210,75,138,110,220,34,255,189,195,135,100,61,40,187,245,69,210,112,158,223,60,56,230,180,0,117,160,41,144,47,15,155,173,216,149,241,82,240,29,219,107,73,75,38,120,124,199,114,88,23,7,33,203,143,31,254,249,248,97,164,21,227,123,178,61,169,18,138,155,250,123,41,36,180,191,226,59,154,150,66,50,80,103,250,217,66,81,8,142,116,60,249,36,97,143,118,8,89,230,84,169,159,201,242,69,243,215,123,33,94,245,225,119,154,107,80,191,82,158,229,32,45,243,65,63,231,44,37,169,97,189,192,57,50,142,214,154,87,71,224,37,106,126,176,194,86,79,165,8,204,17,249,156,154,72,231,170,148,232,228,148,184,103,66,30,164,72,65,169,149,148,66,58,95,71,159,128,103,78,171,255,246,38,238,24,228,153,49,33,217,145,150,224,109,184,15,34,129,102,130,231,39,242,164,64,34,184,28,172,189,206,231,77,83,100,237,16,119,193,217,56,213,47,180,164,232,209,145,101,32,201,119,102,207,155,180,150,124,19,21,31,134,64,169,60,68,30,20,252,38,60,79,91,176,38,183,4,29,104,228,59,24,180,54,120,74,247,240,13,138,67,142,135,87,192,67,117,7,144,37,86,202,0,128,215,208,112,199,77,146,145,182,53,48,218,67,73,22,73,8,48,114,123,75,162,16,125,225,74,209,213,239,41,254,10,229,252,138,7,73,196,225,47,172,122,142,40,104,35,245,89,238,117,129,165,21,141,117,43,201,227,169,117,10,127,237,228,79,38,19,139,230,123,59,240,112,26,131,212,118,196,238,109,196,118,81,56,231,100,177,32,92,231,249,164,226,28,13,241,245,177,8,154,79,162,42,48,242,159,161,232,52,192,100,122,93,197,145,230,44,67,100,30,225,135,102,18,178,165,200,117,193,21,234,66,86,240,32,14,70,19,55,59,154,252,180,8,35,89,245,187,209,131,249,48,15,9,165,150,252,82,255,56,206,78,250,124,79,172,2,45,49,152,174,80,255,244,179,181,126,4,37,180,76,97,139,240,32,39,154,114,207,69,7,212,248,15,33,95,237,120,143,59,34,53,84,97,139,54,7,247,34,69,192,255,166,207,57,74,153,88,34,111,103,74,198,190,23,108,2,106,44,206,245,61,238,201,170,56,4,68,108,209,28,79,194,128,15,76,147,14,222,67,131,165,81,66,225,241,63,116,131,68,157,73,221,174,220,137,25,40,29,142,69,135,231,202,200,219,64,249,34,6,47,140,240,16,198,222,11,30,68,65,234,6,76,199,8,210,44,217,170,126,142,84,182,232,103,27,87,218,189,102,252,31,3,175,219,229,62,211,65,251,166,70,81,25,22,12,194,16,181,92,119,82,190,46,134,175,35,95,17,179,217,140,204,149,46,10,42,79,73,69,88,226,69,92,130,34,140,239,132,44,236,118,67,232,179,208,37,57,56,13,166,89,109,197,197,181,142,89,87,201,252,64,37,45,8,199,173,105,49,78,33,207,31,97,183,3,9,60,133,113,178,238,105,134,55,228,33,134,47,158,207,172,104,88,19,66,199,202,211,54,125,129,130,62,173,179,113,178,178,4,162,44,133,104,206,126,104,32,120,215,32,121,199,64,94,214,86,48,27,140,107,173,100,133,62,28,172,79,133,235,164,190,176,195,85,37,243,89,245,22,152,99,14,191,86,199,55,59,58,250,170,89,70,58,129,84,219,20,105,186,212,172,67,31,96,111,110,173,26,122,54,148,163,126,105,202,113,141,91,231,151,19,42,142,58,134,218,5,226,140,198,119,54,27,81,104,238,160,99,86,52,94,82,139,205,180,237,97,232,54,62,10,140,111,248,202,136,196,243,159,232,60,17,211,11,76,118,23,197,102,81,110,245,52,111,21,26,33,248,16,151,154,175,5,9,158,221,212,24,154,242,82,107,158,193,27,86,247,98,96,91,187,53,240,45,27,156,254,198,238,37,236,108,208,165,250,55,44,169,38,117,211,195,105,212,116,224,214,160,190,162,233,75,100,168,150,136,243,210,217,106,86,205,109,188,230,71,241,10,103,182,234,238,184,86,103,23,60,174,75,61,246,204,147,137,85,218,202,231,245,161,220,191,41,108,238,87,111,144,106,28,76,231,125,211,94,32,126,68,218,119,67,76,72,106,94,171,188,134,211,129,121,26,28,232,86,60,54,170,226,206,145,29,140,30,244,82,158,170,125,192,20,129,159,97,144,57,17,212,127,127,105,7,114,228,246,122,120,158,195,190,211,84,84,175,84,13,159,60,83,101,201,250,132,230,58,14,196,91,122,244,131,188,173,163,226,119,40,90,212,44,233,172,215,179,247,215,250,248,233,96,182,63,7,144,215,250,78,118,140,211,28,255,94,121,48,6,241,54,43,212,229,229,193,211,154,164,247,127,1,22,100,119,22,32,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0b286e0a-684a-4d22-a2be-ff6633bab9da"));
		}

		#endregion

	}

	#endregion

}

