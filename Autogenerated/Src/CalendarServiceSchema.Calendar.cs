namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CalendarServiceSchema

	/// <exclude/>
	public class CalendarServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CalendarServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CalendarServiceSchema(CalendarServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("19e7e663-ecc5-416e-a133-01cf5e006037");
			Name = "CalendarService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("1f3bf3a0-74bb-4421-8cee-dbd8548cc5df");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,75,111,219,48,12,62,123,192,254,3,145,94,28,96,112,238,109,146,162,205,182,34,195,210,22,77,135,29,138,97,80,109,38,17,102,91,158,36,167,203,138,253,247,81,178,228,71,220,244,113,113,44,138,252,72,126,124,56,57,203,80,21,44,70,56,191,94,44,197,74,71,51,145,175,248,186,148,76,115,145,71,51,150,98,158,48,169,222,191,123,124,255,46,40,21,207,215,176,220,41,141,217,201,222,57,90,162,220,242,24,23,34,193,244,217,203,232,59,222,63,175,112,22,107,190,181,17,244,244,110,202,92,243,12,141,62,103,41,255,187,167,69,208,148,66,150,181,101,51,33,49,250,204,98,45,36,71,69,114,186,57,146,184,38,67,152,165,76,169,99,240,121,186,40,172,202,104,52,130,177,42,179,140,201,221,212,157,175,165,216,242,4,21,100,168,55,34,81,160,55,76,195,131,144,191,20,60,112,189,129,216,1,69,30,96,180,135,48,86,136,44,85,2,98,137,171,201,192,211,222,196,29,157,51,133,46,142,1,140,140,221,157,59,82,109,180,164,60,126,24,217,153,42,46,81,147,77,65,20,220,243,148,235,221,13,254,46,185,196,12,115,173,194,246,193,176,10,19,120,193,196,104,69,78,144,12,141,147,162,188,79,121,12,177,33,105,159,35,56,134,86,164,164,76,13,66,207,23,152,189,161,118,19,185,170,24,14,238,62,50,205,218,89,61,235,209,219,146,231,78,151,246,160,3,19,75,208,132,66,85,43,80,106,42,254,49,92,91,7,149,251,94,137,43,201,5,106,5,66,130,50,191,122,131,117,81,129,74,79,221,183,226,104,235,27,244,43,236,68,91,150,150,216,156,111,95,198,104,89,88,82,22,152,221,163,12,47,105,62,169,112,3,207,196,60,25,216,194,212,68,93,148,60,57,173,137,154,39,240,8,107,212,39,38,246,19,248,231,210,60,162,203,138,10,115,116,210,182,176,83,55,226,80,203,50,214,123,100,57,135,123,53,9,135,240,216,2,61,160,52,247,2,147,218,146,230,16,199,181,168,121,251,200,118,211,41,40,186,102,107,116,184,193,207,120,223,148,248,112,58,39,175,72,167,83,123,41,52,198,26,19,163,96,195,149,102,205,32,188,37,190,126,64,54,140,194,99,191,9,172,167,234,178,166,26,186,183,64,162,46,101,254,132,91,56,61,173,52,130,32,124,138,37,127,25,216,73,172,246,223,46,162,230,30,191,62,192,105,88,163,4,144,227,67,211,29,66,158,201,117,105,246,70,56,40,21,74,186,200,41,127,162,124,240,1,190,117,4,195,225,208,82,100,74,69,15,120,190,96,139,106,179,118,155,175,55,168,70,48,75,69,142,221,9,181,35,213,159,74,43,41,152,100,25,228,52,81,147,65,220,204,211,244,208,116,142,71,214,162,1,168,42,161,166,227,145,127,179,59,236,138,250,203,238,161,206,34,187,163,141,62,207,183,226,23,134,85,70,102,140,175,175,150,183,134,30,201,111,49,43,82,211,122,102,184,77,30,158,118,186,62,23,201,110,169,119,169,185,36,148,5,42,69,205,94,75,163,239,146,21,5,38,31,44,167,126,235,125,22,50,163,79,81,219,162,18,69,95,20,149,160,189,92,15,173,213,78,28,161,217,44,53,47,243,196,207,227,150,72,146,222,98,82,245,196,211,120,161,171,186,150,59,223,203,7,218,172,161,191,11,24,182,220,87,88,65,175,117,163,175,130,37,33,125,75,107,16,175,106,34,141,77,74,201,172,129,15,15,132,48,172,59,200,178,224,99,15,248,10,194,190,207,37,219,98,216,197,30,122,130,204,196,86,4,212,255,158,104,45,79,246,66,137,230,137,243,96,135,130,166,34,102,58,222,64,248,233,79,140,133,233,38,168,87,96,3,216,92,78,160,90,59,206,220,45,9,175,120,104,49,58,89,91,68,146,255,173,65,59,120,5,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("19e7e663-ecc5-416e-a133-01cf5e006037"));
		}

		#endregion

	}

	#endregion

}

