namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MLRegressionEntityPredictorSchema

	/// <exclude/>
	public class MLRegressionEntityPredictorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLRegressionEntityPredictorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLRegressionEntityPredictorSchema(MLRegressionEntityPredictorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7403bef1-8736-4cee-aa53-a71b6b7f8596");
			Name = "MLRegressionEntityPredictor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("97d940bd-1454-46d7-84c7-92245c2594a8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,86,77,111,26,49,16,61,19,41,255,97,68,47,68,66,203,61,37,123,72,211,68,72,208,162,64,123,169,122,112,214,3,184,101,189,91,219,75,66,163,252,247,142,237,93,246,131,100,33,85,115,233,165,197,222,249,124,239,205,56,146,197,168,83,22,33,92,78,39,179,100,97,130,15,137,92,136,101,166,152,17,137,12,38,227,211,147,199,211,147,78,166,133,92,194,108,171,13,198,239,27,103,114,89,175,49,178,246,58,184,65,137,74,68,123,54,99,33,127,149,151,31,18,133,245,83,112,205,34,147,40,129,186,188,47,75,162,239,83,149,68,168,117,189,62,178,37,235,193,96,0,67,157,197,49,83,219,48,63,223,226,82,145,57,217,128,136,211,53,198,40,141,115,129,100,65,198,136,16,41,92,92,116,71,147,241,71,105,132,217,78,21,114,97,75,232,14,66,96,146,55,140,118,159,31,231,159,51,243,68,70,65,145,121,80,73,253,237,10,23,44,91,155,75,33,57,181,208,51,219,20,147,69,111,63,203,89,31,62,17,246,112,1,147,49,181,164,141,14,202,146,169,215,59,42,121,78,206,103,223,91,163,238,226,13,121,146,145,79,248,170,184,41,185,136,8,162,53,211,154,236,75,195,70,177,112,78,95,47,153,198,198,125,145,148,66,145,72,232,223,206,59,133,75,11,178,75,157,89,27,125,14,83,151,198,27,52,185,114,23,35,41,140,96,107,241,27,53,48,144,120,15,130,220,153,36,89,18,91,102,133,85,50,90,234,180,212,185,102,44,55,251,228,248,155,148,41,22,131,36,144,46,186,153,70,69,165,74,175,222,110,56,167,84,246,14,162,221,101,48,28,56,15,23,32,7,172,165,132,222,151,90,72,23,173,60,158,17,146,119,132,99,175,121,109,103,172,243,148,99,136,146,123,24,235,152,18,123,41,42,67,35,66,144,170,196,144,47,242,22,84,111,208,104,7,94,234,105,7,43,27,16,156,38,65,44,4,170,54,144,54,108,157,225,238,56,63,42,72,233,147,22,213,65,178,65,165,200,26,110,50,193,161,162,191,17,135,139,208,81,109,191,244,14,136,245,125,59,50,19,52,171,132,31,9,75,78,149,6,191,100,44,64,58,197,200,118,195,109,151,15,219,99,213,227,140,189,104,188,95,85,42,123,214,113,194,113,237,173,221,207,118,107,206,12,243,198,66,166,153,1,123,110,247,72,125,95,132,135,149,224,156,233,159,221,208,254,2,67,63,225,94,152,21,148,38,128,15,70,49,112,254,122,63,174,66,147,41,169,155,152,17,64,68,14,45,162,10,66,85,211,103,120,247,27,162,8,96,87,214,12,213,70,68,72,84,61,108,61,110,125,26,168,137,133,196,239,118,15,79,223,6,236,116,174,124,189,196,193,80,27,69,132,245,33,185,251,65,73,66,7,137,117,189,162,255,167,123,205,87,154,45,174,242,49,235,108,152,130,123,197,210,20,185,245,165,93,105,117,56,22,218,12,95,78,23,194,163,203,8,79,246,129,234,116,124,223,57,241,185,106,123,158,88,215,203,40,223,96,95,70,188,95,205,118,22,92,11,165,205,103,149,239,244,158,21,247,110,246,219,21,235,193,215,176,160,149,108,117,187,20,27,148,180,80,76,180,178,139,82,97,148,40,126,244,242,123,189,32,45,68,221,240,178,153,239,128,44,221,144,76,198,160,61,241,199,204,202,91,104,185,148,72,33,226,131,226,117,146,200,223,184,157,132,159,211,42,140,14,170,167,192,47,215,245,139,131,240,106,53,191,74,136,69,21,135,69,55,99,27,44,158,143,250,240,211,70,2,187,254,205,246,109,148,230,99,143,184,119,240,167,234,139,115,140,114,144,223,186,90,139,237,220,88,95,181,55,125,159,247,77,66,143,149,5,160,246,184,35,255,106,95,56,253,188,2,220,3,87,148,222,47,246,94,163,156,234,6,74,235,81,243,45,84,145,80,45,77,17,145,214,144,23,208,99,145,184,145,2,136,84,250,156,111,169,82,73,182,29,21,148,77,149,15,109,222,149,103,166,116,240,102,179,104,133,49,179,29,149,189,53,42,255,11,45,85,134,240,127,151,208,116,215,241,63,208,77,25,172,164,179,146,192,35,99,195,188,52,255,207,144,152,103,168,146,216,248,59,139,110,159,254,0,17,57,123,48,41,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7403bef1-8736-4cee-aa53-a71b6b7f8596"));
		}

		#endregion

	}

	#endregion

}

