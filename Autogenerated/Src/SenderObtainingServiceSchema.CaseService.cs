namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: SenderObtainingServiceSchema

	/// <exclude/>
	public class SenderObtainingServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public SenderObtainingServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public SenderObtainingServiceSchema(SenderObtainingServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5bf1c040-6f5b-435c-9b08-854bd766f820");
			Name = "SenderObtainingService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("33bac096-c819-4c57-86af-fe71bbb0cb56");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,87,75,111,227,54,16,62,107,129,253,15,172,247,34,3,134,124,223,196,94,36,105,18,164,168,147,212,218,238,30,130,30,104,105,236,16,213,43,36,149,172,186,200,127,239,12,73,89,146,165,56,238,182,5,90,96,47,78,56,28,14,191,121,125,67,101,60,5,85,240,8,216,233,237,34,204,215,58,56,203,179,181,216,148,146,107,145,103,111,223,124,125,251,198,43,149,200,54,44,172,148,134,244,104,103,141,250,73,2,17,41,171,224,18,50,144,34,234,233,252,44,178,135,158,112,89,102,90,164,16,132,120,132,39,226,15,115,97,79,11,119,31,69,4,139,60,134,100,239,102,112,130,32,30,95,55,18,124,134,85,163,208,120,45,33,56,71,64,90,128,106,182,81,23,183,210,212,216,68,233,59,9,27,188,128,157,37,92,169,247,44,132,44,6,121,179,210,92,100,168,238,174,49,154,211,233,148,29,171,50,77,185,172,230,110,237,246,217,58,151,76,153,163,44,229,34,89,229,95,88,94,219,8,234,179,211,214,225,59,119,18,115,163,37,143,244,111,36,59,81,197,53,104,68,87,160,211,43,145,8,93,45,225,161,20,18,82,200,180,242,219,11,242,156,205,216,43,71,72,43,112,130,120,76,151,20,229,42,17,17,139,200,221,23,188,101,239,217,41,87,176,245,221,195,138,193,223,195,66,181,196,226,195,194,177,33,235,197,204,8,150,80,72,192,104,105,181,27,179,152,107,206,34,12,9,154,4,73,129,235,71,206,187,251,17,181,218,113,59,196,167,26,22,250,214,105,135,30,106,143,188,245,6,144,187,124,119,240,102,216,107,6,229,0,76,139,115,1,233,10,164,127,141,138,152,173,209,194,30,164,229,200,164,99,11,94,105,73,229,217,82,96,95,217,6,244,17,198,8,127,158,109,60,15,131,37,226,111,1,117,21,239,64,186,44,69,92,3,186,138,119,225,120,158,195,244,14,47,183,149,209,45,147,5,232,251,60,198,66,185,149,212,197,174,34,10,187,176,198,47,65,147,253,83,178,239,187,8,56,39,8,220,152,217,92,60,114,201,64,61,32,214,12,158,152,233,233,42,140,238,33,229,191,148,32,43,255,87,5,18,179,154,89,210,10,218,10,11,158,241,13,200,201,214,203,176,202,162,16,180,198,171,212,104,76,188,224,121,104,59,64,144,20,37,99,16,9,176,76,179,224,74,157,36,79,188,82,33,16,29,226,237,90,150,208,156,184,16,137,6,169,130,147,56,246,105,125,38,1,29,179,210,207,66,223,223,114,137,62,144,138,111,133,166,75,165,80,121,246,177,42,144,155,30,74,158,76,186,53,49,233,184,239,224,89,127,26,86,102,216,58,93,193,140,194,131,92,173,119,85,119,66,227,12,74,208,165,236,155,9,78,178,202,31,179,15,253,141,11,33,149,14,62,241,164,4,186,133,224,199,54,72,70,118,76,201,156,251,35,170,32,108,176,24,214,188,76,180,79,82,123,227,193,149,98,10,111,15,117,216,182,238,241,198,170,98,200,5,226,17,81,51,9,145,40,4,177,203,132,69,72,99,150,79,48,127,60,139,81,160,97,147,203,106,75,45,24,31,133,215,0,240,68,229,44,146,176,158,141,206,201,108,155,70,48,159,146,23,5,200,209,116,254,2,41,25,9,102,151,167,134,20,102,163,6,198,104,110,12,118,128,41,32,93,13,49,123,194,74,193,101,42,162,60,193,72,31,79,141,145,97,155,206,19,12,243,252,172,237,153,205,23,182,61,253,179,22,200,156,251,205,184,32,52,118,156,224,16,67,182,118,212,124,75,168,206,129,30,143,227,209,90,215,176,246,13,198,207,80,110,135,186,239,112,30,95,101,143,249,239,224,219,42,32,66,186,189,9,63,98,43,208,220,2,165,47,114,153,114,106,63,84,93,128,82,216,207,86,20,252,132,173,52,97,167,121,92,133,186,74,160,163,178,149,6,54,119,241,196,148,126,13,123,191,81,203,131,142,6,95,25,40,118,195,42,185,86,174,169,172,157,113,195,119,219,4,214,235,109,38,218,84,247,100,139,173,166,187,23,171,113,184,185,201,66,157,7,107,97,128,249,134,143,106,44,1,11,163,109,197,141,9,135,138,250,63,44,139,34,151,53,117,251,157,142,107,60,108,57,103,205,215,188,67,152,94,9,170,67,225,133,101,20,97,118,240,250,31,108,76,145,148,175,203,36,185,145,231,105,161,43,191,205,150,54,193,158,215,30,161,179,182,19,78,225,217,162,121,38,128,209,61,243,207,191,68,80,88,94,173,179,240,87,144,178,6,227,26,73,4,38,172,49,136,188,204,234,235,182,60,248,157,220,190,147,219,255,152,220,78,43,243,89,134,115,2,223,108,134,197,234,209,219,101,177,191,253,96,171,175,169,95,105,100,20,169,6,12,213,216,215,135,235,113,122,252,224,43,204,202,252,209,178,86,26,141,3,210,104,142,211,123,128,198,15,34,222,103,128,134,98,224,244,2,122,212,12,153,113,236,70,59,175,219,170,159,29,3,198,76,244,112,232,238,188,225,118,98,52,105,71,249,232,31,26,21,200,247,230,239,55,112,190,67,61,248,26,180,76,61,247,7,146,53,158,48,199,210,251,12,216,231,228,96,178,208,192,129,39,7,243,83,63,169,219,190,226,167,205,172,251,37,210,158,42,255,169,209,229,53,95,99,219,109,28,181,221,185,102,126,7,102,91,157,230,127,115,182,245,223,248,86,220,149,62,255,9,139,226,14,113,164,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5bf1c040-6f5b-435c-9b08-854bd766f820"));
		}

		#endregion

	}

	#endregion

}

