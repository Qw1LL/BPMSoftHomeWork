namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DCTemplateServiceSchema

	/// <exclude/>
	public class DCTemplateServiceSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DCTemplateServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DCTemplateServiceSchema(DCTemplateServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e9551305-a29e-4f49-b6a7-068d23b25927");
			Name = "DCTemplateService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e81fdc99-2bd3-4785-b2cd-a2accfc6f9a3");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,87,75,111,219,56,16,62,171,64,255,195,172,123,145,129,64,190,183,182,129,36,238,238,122,129,52,129,221,96,15,193,30,104,113,20,115,171,87,73,202,174,209,245,127,223,33,41,74,170,95,77,210,77,186,23,219,26,14,231,241,241,155,79,116,206,50,84,37,139,17,46,110,174,230,69,162,163,203,34,79,196,125,37,153,22,69,30,77,54,57,203,68,76,70,141,185,126,253,234,235,235,87,65,165,68,126,15,243,141,210,152,189,219,121,142,230,40,87,34,198,171,130,99,122,114,49,58,143,181,88,217,44,167,253,254,196,69,235,240,144,42,163,9,211,204,252,150,44,214,143,220,106,83,170,253,77,84,4,109,204,50,91,44,173,190,145,120,79,219,225,50,101,74,189,133,201,229,71,204,202,148,105,172,75,183,78,131,193,0,134,170,202,50,38,55,227,250,185,94,135,162,68,170,0,21,172,133,94,2,119,85,128,174,163,168,8,110,80,38,133,204,20,92,206,110,39,181,59,101,84,145,15,60,232,68,190,171,195,250,174,255,50,182,115,85,126,64,77,85,151,180,115,33,82,161,55,51,252,92,9,137,25,181,170,194,238,131,233,27,70,240,157,45,198,43,170,13,188,111,146,148,213,34,165,186,99,3,195,62,10,240,22,46,152,106,49,9,136,62,244,217,160,119,133,122,89,112,194,239,198,134,113,139,187,168,57,216,216,138,176,242,240,128,200,97,114,97,144,216,135,194,89,74,38,89,6,4,42,142,122,126,87,111,60,84,136,16,75,76,70,189,182,86,143,89,111,48,166,184,74,179,156,10,215,75,166,33,166,21,70,166,54,47,71,50,164,42,26,14,108,130,54,159,68,93,201,92,117,51,124,195,179,26,130,25,13,27,157,33,154,92,197,226,111,140,181,59,255,182,239,7,109,143,230,85,28,163,82,38,76,41,13,55,244,6,180,172,16,214,75,204,65,17,88,176,102,10,148,115,139,30,27,127,183,188,167,212,229,83,54,245,37,44,85,246,228,10,189,68,185,22,228,62,28,120,220,140,247,221,181,39,121,151,198,193,29,205,222,52,95,21,159,48,116,124,33,158,246,110,174,231,31,123,103,112,43,133,63,70,99,53,44,33,171,97,40,42,253,43,141,15,157,226,8,40,192,21,85,197,238,209,153,162,63,84,145,159,153,216,129,175,252,180,175,165,186,231,250,41,0,44,79,195,125,110,53,12,234,131,81,208,32,88,49,9,210,111,26,65,142,235,147,113,195,190,145,164,32,208,114,83,7,176,17,124,212,25,150,133,18,186,160,85,23,171,173,160,93,26,182,70,171,114,227,240,86,161,164,172,57,157,51,165,172,83,212,165,249,93,51,100,252,186,180,202,211,196,158,29,90,221,13,127,230,28,9,49,230,210,249,194,131,182,180,110,232,110,201,222,30,189,255,18,167,21,199,115,173,165,88,84,164,139,117,136,224,159,147,254,117,222,223,117,150,54,111,46,179,107,219,105,17,191,8,122,215,240,14,125,246,209,36,173,99,252,130,186,140,11,201,167,60,244,30,145,183,156,29,70,202,67,41,18,8,119,243,252,66,40,86,105,234,137,64,103,234,131,78,13,179,119,220,201,88,199,218,2,218,249,161,144,157,29,209,251,207,21,205,85,248,91,37,232,119,86,234,77,255,88,100,235,242,1,215,230,219,243,41,216,186,175,3,173,91,38,119,168,108,15,177,223,240,216,237,223,66,204,116,188,132,144,128,71,219,59,52,20,15,60,191,163,118,145,250,171,55,218,79,55,253,205,32,216,165,237,137,183,128,129,184,163,198,137,44,178,39,188,7,166,188,55,190,205,5,105,4,8,78,220,16,137,64,9,69,66,162,79,194,143,14,178,135,40,252,254,156,31,19,80,150,166,164,124,230,125,110,167,27,216,162,168,90,81,248,207,117,208,224,244,236,58,120,188,123,123,78,150,146,77,139,83,126,66,249,142,71,122,105,221,211,93,199,227,146,16,118,218,122,183,67,246,61,233,31,193,129,23,66,51,72,205,69,249,197,135,105,130,41,154,11,232,179,142,211,154,145,252,242,71,77,213,207,187,55,217,143,6,14,150,115,59,183,169,200,63,81,11,62,149,233,80,11,115,113,71,137,254,134,149,144,162,111,232,118,104,16,229,209,19,174,89,62,186,237,234,71,186,121,129,91,150,35,206,207,189,103,185,26,30,161,49,255,151,219,149,220,57,188,195,34,83,183,183,39,51,207,39,17,111,48,231,238,95,153,125,118,214,111,141,219,127,1,7,48,56,64,45,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e9551305-a29e-4f49-b6a7-068d23b25927"));
		}

		#endregion

	}

	#endregion

}

