namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: EventTypePostProcessSchema

	/// <exclude/>
	public class EventTypePostProcessSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EventTypePostProcessSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EventTypePostProcessSchema(EventTypePostProcessSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("56c02107-d8dd-4eec-92f9-a7d0a311d526");
			Name = "EventTypePostProcess";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("47949cd8-6780-414e-8fda-4fa996b6db3c");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,86,75,111,219,56,16,62,171,64,255,3,161,94,100,108,42,163,215,174,237,194,78,188,65,182,201,198,168,211,246,44,75,99,135,173,36,186,36,229,172,177,200,127,223,161,168,7,73,211,110,178,89,212,7,89,26,206,124,243,30,78,153,20,32,182,73,10,100,182,184,89,178,181,140,207,89,185,166,155,138,39,146,178,50,158,239,160,148,119,251,45,44,152,144,11,206,82,16,226,245,171,127,94,191,10,42,65,203,13,89,238,133,132,226,119,231,27,65,242,28,82,133,32,226,75,40,129,211,180,231,233,53,21,5,43,125,116,14,126,170,109,220,17,158,139,25,30,224,209,27,14,27,228,34,231,121,34,196,123,226,247,4,249,134,195,33,25,137,170,40,18,190,159,52,223,138,135,128,146,32,18,69,72,170,48,90,222,161,193,188,173,86,57,77,137,144,104,81,170,217,142,104,10,48,104,248,236,204,186,1,121,207,50,52,108,81,67,232,67,215,150,154,176,4,203,22,201,136,228,73,250,93,57,46,128,239,104,10,113,39,107,218,166,41,219,132,39,5,41,49,207,227,176,66,126,12,97,169,83,19,78,62,91,223,241,104,88,51,215,178,182,99,59,70,51,101,71,231,90,100,139,18,27,121,64,84,133,4,193,46,225,36,167,162,23,35,99,82,194,3,185,70,218,168,35,78,162,129,74,101,208,36,51,186,152,205,255,134,180,146,140,147,108,213,189,142,29,29,241,188,20,21,135,139,89,79,138,6,173,226,96,9,170,254,136,76,86,57,52,239,90,181,254,136,28,123,181,80,160,234,182,42,202,40,92,82,9,157,125,225,25,9,175,178,112,16,79,133,115,162,168,174,232,85,134,135,116,77,129,123,206,196,20,245,237,224,240,68,155,197,120,171,239,156,101,208,106,52,142,52,217,21,254,10,43,225,26,108,0,184,199,54,200,31,156,21,174,195,221,225,53,172,229,109,37,129,255,201,168,107,101,203,20,196,183,30,7,234,128,93,137,249,143,42,201,61,241,52,217,205,40,58,10,15,60,179,149,250,28,255,137,98,87,68,177,147,68,52,117,161,235,176,45,68,85,190,153,170,60,163,140,98,93,144,240,9,146,12,120,212,23,104,95,123,193,195,61,205,129,68,25,143,21,151,81,149,65,208,119,2,56,61,209,183,86,211,13,248,235,120,226,171,12,217,16,240,18,164,206,250,151,36,175,96,116,89,209,108,226,41,74,47,66,45,226,133,17,146,163,195,19,187,120,61,24,119,106,238,220,96,249,28,49,71,172,246,18,219,217,83,178,30,176,143,180,204,126,130,227,175,92,15,214,84,79,33,31,214,138,177,124,98,182,30,249,64,162,90,193,128,188,35,239,187,247,183,239,58,92,107,100,197,211,44,139,58,77,157,242,71,253,175,255,244,211,154,143,246,128,57,179,199,160,70,121,60,49,243,221,11,232,215,12,253,3,89,203,234,112,162,230,182,97,213,255,118,95,156,185,55,130,19,46,227,58,17,6,232,39,248,81,129,232,39,187,161,174,201,147,146,208,185,107,130,119,205,54,84,213,9,238,41,200,47,145,162,22,20,89,151,138,155,51,157,225,112,126,32,143,3,230,142,45,235,158,57,170,104,129,155,192,3,227,217,11,116,181,16,79,81,55,221,210,143,176,127,129,50,13,240,20,85,216,148,211,237,246,51,207,95,160,173,195,240,40,164,235,72,207,35,156,226,127,85,121,126,203,231,197,86,238,155,30,116,1,6,205,141,192,65,86,188,94,9,219,185,112,96,238,111,99,18,14,205,42,249,176,102,188,72,228,248,155,192,190,208,162,245,195,83,99,49,202,205,18,65,211,105,37,239,109,83,234,146,56,243,103,191,113,233,8,96,243,170,55,193,40,92,220,46,239,194,19,18,93,142,61,153,63,46,213,17,234,230,29,219,157,117,66,76,95,115,199,162,110,14,176,55,80,102,122,169,173,191,53,213,33,58,203,184,153,133,163,75,120,219,222,245,144,1,220,9,4,121,128,85,59,254,44,140,248,196,110,174,151,114,147,27,167,62,230,18,93,21,242,60,167,72,28,209,82,78,14,87,116,220,221,183,192,37,5,103,75,239,102,157,170,82,210,164,69,143,168,13,200,46,166,102,140,26,17,119,204,217,201,57,13,241,31,194,108,199,216,138,135,113,244,76,183,213,206,65,240,226,126,146,195,98,133,151,43,49,247,134,167,137,233,208,182,59,203,51,84,53,91,197,51,36,154,221,225,197,193,127,252,23,132,160,185,47,76,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("56c02107-d8dd-4eec-92f9-a7d0a311d526"));
		}

		#endregion

	}

	#endregion

}

