namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: LeadBaseEventListenerSchema

	/// <exclude/>
	public class LeadBaseEventListenerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LeadBaseEventListenerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LeadBaseEventListenerSchema(LeadBaseEventListenerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("35d507ab-cec6-4338-b5f5-5484897ca57f");
			Name = "LeadBaseEventListener";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b424f2c1-869b-44e8-aaf1-c9a818421e06");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,84,77,79,219,64,16,61,7,137,255,48,50,23,71,66,206,29,2,8,82,64,145,72,161,114,233,165,170,170,141,119,156,108,235,236,70,187,235,84,41,226,191,119,246,195,36,113,28,232,201,154,217,121,111,222,190,153,181,100,11,52,75,86,32,220,60,77,114,85,218,108,164,100,41,102,181,102,86,40,121,124,244,114,124,212,171,141,144,51,200,215,198,226,226,252,45,222,0,52,118,103,179,91,105,133,21,104,62,56,206,110,87,40,173,171,162,186,19,141,51,234,12,163,138,25,115,6,15,200,248,13,51,232,75,30,4,73,144,168,125,225,96,48,128,161,169,23,11,166,215,151,49,110,10,160,84,218,67,129,80,194,174,1,125,135,172,129,13,90,184,161,65,100,149,81,80,104,44,47,146,247,84,102,94,141,103,221,209,148,192,192,177,125,239,56,74,243,98,142,11,246,153,188,134,11,72,156,174,164,255,131,138,151,245,180,18,5,20,238,170,221,55,133,51,56,208,143,224,110,54,111,126,221,9,172,56,25,246,164,197,138,89,244,22,245,150,33,240,220,185,101,182,54,163,57,22,191,137,247,103,213,78,5,251,123,39,40,121,160,140,113,228,127,210,106,137,218,25,225,122,40,139,133,69,222,116,137,33,60,27,212,180,64,146,34,135,105,133,47,48,67,123,14,141,40,227,130,215,247,187,78,208,206,213,193,107,77,149,170,96,108,220,237,198,242,78,72,86,133,27,165,193,47,112,119,236,131,183,169,119,95,11,238,19,161,100,204,105,20,46,204,238,209,126,93,47,145,143,84,85,47,228,55,86,213,56,116,197,151,105,242,165,102,149,40,215,13,34,233,187,69,238,245,246,221,220,240,230,150,118,134,168,137,117,175,44,141,120,141,182,214,178,13,202,186,46,178,45,56,160,95,63,154,108,119,231,232,66,108,189,63,125,184,186,130,180,35,125,1,18,255,236,119,73,119,71,219,239,212,182,82,100,121,190,150,197,92,43,41,254,162,99,33,140,101,133,221,158,208,41,132,224,186,180,168,253,142,95,235,153,1,108,52,139,18,90,237,220,204,198,230,14,73,144,166,183,193,166,21,242,52,233,238,148,244,27,30,79,116,200,228,77,85,244,40,140,202,93,201,125,182,8,183,218,132,193,119,229,55,182,117,156,182,205,139,173,14,112,101,91,65,60,254,196,44,243,170,79,1,179,137,226,162,20,59,251,107,34,165,23,255,223,47,204,255,140,226,4,107,255,99,82,43,212,90,240,56,201,71,249,188,228,52,87,158,170,233,47,146,78,15,88,114,212,31,141,111,74,255,175,236,81,230,108,69,200,6,130,81,225,214,26,144,103,113,43,250,161,42,84,180,254,33,241,209,238,102,67,229,129,77,139,62,237,108,104,203,140,144,221,77,82,238,31,19,189,238,231,29,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("35d507ab-cec6-4338-b5f5-5484897ca57f"));
		}

		#endregion

	}

	#endregion

}

