namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: StageGetRepositorySchema

	/// <exclude/>
	public class StageGetRepositorySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public StageGetRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public StageGetRepositorySchema(StageGetRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("602bf7f9-b3e3-4f06-8629-f23daa6cba77");
			Name = "StageGetRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("76eace8e-4a48-486b-bf04-de18fe06b0a2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,89,143,219,56,12,126,118,129,254,7,53,251,98,3,129,243,222,28,197,76,166,211,166,152,11,147,238,190,44,22,11,197,102,82,1,182,148,234,8,144,45,250,223,151,58,156,248,156,102,250,18,71,20,249,145,252,72,81,226,180,4,181,167,25,144,235,167,251,181,216,234,116,41,248,150,237,140,164,154,9,254,246,205,143,183,111,34,163,24,223,145,245,81,105,40,167,173,117,122,67,53,61,11,151,162,44,5,175,175,37,52,87,233,205,117,75,240,145,107,166,25,168,150,248,150,102,90,72,47,199,157,63,36,236,48,34,178,44,168,82,239,201,39,208,107,77,119,240,12,123,161,24,42,30,157,214,100,50,33,51,101,202,146,202,227,34,172,159,164,56,176,28,20,41,65,127,19,185,34,90,16,177,209,148,113,162,44,132,74,43,195,73,203,114,166,143,123,216,83,73,75,194,145,168,249,232,171,139,245,104,115,30,45,236,239,108,114,82,177,70,127,223,192,150,154,66,95,51,158,99,34,177,221,20,219,120,133,209,158,3,157,121,146,92,248,22,99,145,140,201,3,194,147,185,243,130,250,110,171,97,147,36,255,32,252,222,108,10,150,145,204,82,64,186,74,196,209,242,130,35,130,24,88,80,252,61,211,41,184,210,210,88,170,145,213,39,231,192,107,4,103,93,55,241,159,10,36,218,113,200,108,143,16,211,88,142,189,197,103,166,172,238,26,180,182,21,85,93,89,98,157,68,209,123,178,161,10,226,54,72,143,65,234,128,215,217,55,40,169,229,43,33,182,57,163,168,207,223,188,15,192,54,88,244,51,228,15,60,247,20,52,249,192,102,217,131,180,237,136,108,72,161,49,30,200,3,33,213,178,55,195,62,217,15,178,3,61,37,193,229,94,178,3,213,64,124,15,249,60,200,191,202,125,87,88,5,202,51,123,86,154,174,26,202,235,134,46,153,47,218,230,228,195,7,18,183,101,115,178,148,128,142,155,214,113,146,76,95,166,226,222,31,23,203,131,11,188,153,197,70,136,130,124,166,106,109,178,12,148,218,154,98,41,10,83,242,184,42,139,4,109,36,111,197,156,122,37,149,222,226,9,185,62,218,50,250,110,239,43,245,170,3,238,203,254,14,15,138,41,138,122,57,123,185,237,79,187,25,94,179,151,211,186,253,61,229,24,132,116,161,86,230,191,10,185,214,157,125,225,29,4,203,201,85,158,223,48,181,47,232,49,48,182,134,2,221,19,229,62,85,124,7,42,73,94,87,11,35,162,197,39,158,76,44,143,29,90,13,76,23,165,15,33,98,91,18,183,172,86,234,78,100,180,96,255,209,77,113,58,71,206,101,17,228,150,141,64,99,159,207,187,142,90,229,109,0,37,68,223,221,72,237,78,48,253,100,144,158,204,72,9,92,187,194,224,40,53,18,86,57,90,182,10,181,60,107,165,120,19,157,52,3,146,231,50,116,91,124,107,120,134,57,63,96,211,196,94,148,174,133,145,25,132,253,254,112,199,93,254,147,177,135,143,162,62,152,22,77,67,24,73,146,94,169,184,43,15,208,233,23,193,120,108,127,190,226,237,145,222,193,86,63,26,13,114,60,192,106,101,23,165,143,3,33,140,86,249,40,193,252,63,126,55,180,24,76,118,244,12,153,144,185,213,61,33,94,241,124,88,191,78,123,13,63,48,243,100,239,68,192,184,227,190,130,186,225,131,30,126,18,40,20,84,13,216,172,218,133,116,246,147,25,224,47,152,248,181,49,55,48,238,197,1,164,196,23,4,9,7,213,190,61,220,191,211,48,177,61,239,131,199,78,181,247,89,90,211,153,158,85,234,71,225,130,25,226,45,61,176,103,168,226,230,140,52,30,6,122,148,185,61,51,157,6,67,194,94,105,243,42,183,43,133,19,147,22,175,116,60,100,149,222,74,81,94,62,112,221,180,235,189,150,146,254,46,187,48,165,222,155,232,178,188,122,77,107,253,25,117,46,132,112,19,76,235,23,149,151,53,47,149,78,131,182,30,124,182,83,237,55,94,217,223,103,160,88,91,34,221,167,222,185,18,20,158,203,90,231,58,155,160,87,5,97,85,210,7,83,110,16,98,30,64,172,174,15,249,47,90,24,152,49,174,23,151,183,86,3,25,167,7,207,7,129,237,99,99,241,154,222,105,96,7,114,29,212,160,11,124,5,35,222,162,61,117,94,188,95,47,110,185,83,146,103,157,223,207,245,151,253,20,58,198,59,125,225,209,235,165,77,33,202,254,7,58,227,242,215,20,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("602bf7f9-b3e3-4f06-8629-f23daa6cba77"));
		}

		#endregion

	}

	#endregion

}

