namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: LeadRightsRegulatorSchema

	/// <exclude/>
	public class LeadRightsRegulatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LeadRightsRegulatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LeadRightsRegulatorSchema(LeadRightsRegulatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4e9f69bb-2120-45dc-bb05-4600e0fec67e");
			Name = "LeadRightsRegulator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("ee0be05f-9653-462f-890a-39e216314520");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,85,219,110,218,64,16,125,118,164,252,195,150,188,24,41,24,212,134,180,37,23,41,88,16,33,149,130,66,219,215,104,99,15,102,37,123,109,237,133,212,173,250,239,221,11,6,219,92,172,54,79,176,187,51,103,102,206,153,25,83,156,0,207,112,0,104,56,159,46,210,165,240,252,148,46,73,36,25,22,36,165,231,103,191,207,207,28,201,9,141,208,34,231,2,146,155,237,121,231,144,36,41,61,116,207,224,240,173,55,162,130,8,2,188,225,217,123,224,57,13,102,25,216,100,254,213,220,155,80,1,108,169,138,211,158,202,247,130,65,164,30,144,31,99,206,7,232,11,224,208,248,230,163,53,80,81,245,126,96,17,55,78,153,124,137,73,128,2,237,211,236,130,6,168,1,210,209,140,22,168,141,120,174,125,69,96,126,46,145,53,211,129,160,248,215,214,120,206,0,189,96,14,110,97,183,123,69,38,158,179,192,49,112,127,133,41,133,24,221,109,240,188,5,94,194,35,8,63,141,101,66,127,224,88,194,237,163,36,225,189,219,42,219,79,194,86,91,115,239,252,49,140,20,201,107,75,84,193,181,161,34,16,133,245,198,227,2,104,104,185,63,166,195,19,137,86,130,63,65,36,99,44,82,102,204,186,221,46,186,229,50,73,48,203,239,55,103,227,114,137,94,87,36,88,33,194,81,130,41,142,0,197,10,2,49,8,82,166,126,12,148,87,0,116,75,8,123,90,214,194,42,245,38,71,229,176,210,233,194,138,252,199,4,226,80,21,48,103,100,141,5,108,200,177,7,149,13,14,83,26,231,150,166,231,12,51,65,129,105,186,102,89,150,50,33,169,10,243,45,207,64,169,65,225,213,152,185,45,255,170,223,235,143,198,126,231,218,31,247,59,87,195,158,223,25,126,254,116,213,233,247,123,31,175,135,254,251,15,253,113,111,35,70,17,104,193,51,155,115,189,152,103,86,189,176,67,80,23,99,91,205,20,196,42,61,90,206,58,85,85,76,13,219,154,184,25,139,48,37,191,12,49,54,174,123,122,46,48,139,100,162,158,182,13,89,207,206,179,224,22,229,0,252,22,192,206,123,62,9,47,13,142,83,127,40,53,51,247,84,115,107,142,195,74,111,207,173,22,186,173,247,48,102,113,248,31,48,213,241,56,66,217,171,50,222,20,211,188,71,246,248,34,75,84,226,160,50,118,239,238,78,245,87,1,224,48,16,146,153,69,109,103,179,73,131,82,190,135,153,126,131,4,6,252,173,2,108,65,218,55,168,44,64,115,135,155,61,80,89,102,70,172,209,79,8,164,0,247,59,7,166,190,131,20,2,173,7,146,149,163,90,194,111,235,116,100,7,254,216,220,186,245,112,117,118,23,193,10,18,252,85,125,185,109,219,57,39,199,114,151,206,158,113,73,224,230,142,108,215,128,14,115,125,104,223,171,187,191,222,99,184,9,103,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4e9f69bb-2120-45dc-bb05-4600e0fec67e"));
		}

		#endregion

	}

	#endregion

}

