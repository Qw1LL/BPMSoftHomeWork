namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CaseTermIntervalSelectorSchema

	/// <exclude/>
	public class CaseTermIntervalSelectorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseTermIntervalSelectorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseTermIntervalSelectorSchema(CaseTermIntervalSelectorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("cda0dd91-7b53-42bf-ab60-415b9b107ffe");
			Name = "CaseTermIntervalSelector";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f69a32ba-7e77-47bd-be6b-d095bbdc629a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,86,219,110,211,64,16,125,54,18,255,176,45,18,114,164,202,121,167,77,42,8,42,84,80,40,164,60,33,132,182,206,196,93,88,175,195,94,82,5,200,191,51,123,243,45,110,27,241,130,132,42,53,246,236,217,153,51,115,102,118,45,104,9,106,69,115,32,47,46,47,230,213,82,103,179,74,44,89,97,36,213,172,18,143,31,253,122,252,40,49,138,137,162,5,144,112,60,104,205,206,104,174,43,201,64,53,235,243,141,210,80,226,50,231,144,91,151,42,123,5,2,36,203,17,99,255,146,39,18,10,180,147,25,167,74,61,35,51,170,224,10,100,121,46,52,200,53,229,115,176,27,43,233,176,227,241,152,156,40,83,150,84,110,166,225,253,57,201,237,78,162,111,168,38,202,161,21,161,68,105,76,1,138,13,161,98,65,10,64,91,94,73,137,201,86,98,97,137,161,247,146,176,16,36,139,190,199,45,231,159,223,175,65,74,182,128,47,248,178,50,215,156,229,33,212,93,28,201,51,114,62,100,63,137,27,230,26,57,41,235,28,235,138,255,235,228,207,24,240,5,102,127,41,217,26,33,126,113,229,95,136,4,186,168,4,223,16,235,98,70,121,110,184,83,231,109,85,204,209,59,144,175,249,174,241,56,4,0,177,240,49,186,1,47,101,181,2,169,81,43,12,234,114,243,235,253,10,59,195,39,5,18,203,39,132,151,208,86,107,183,92,177,68,22,60,171,177,253,87,219,79,73,130,122,216,22,105,82,84,193,176,189,159,53,58,66,93,141,173,105,143,119,8,126,151,50,233,200,71,222,238,135,238,145,54,157,215,224,42,233,129,38,61,152,79,112,72,26,132,222,161,228,185,96,154,81,206,126,130,196,49,209,206,150,246,162,239,83,167,11,208,55,213,98,31,105,61,210,15,143,4,109,164,192,73,98,37,212,163,65,150,216,215,173,36,134,181,119,150,21,149,180,36,2,143,148,201,33,149,133,41,65,104,117,56,125,30,31,157,171,48,151,216,120,217,201,216,237,104,28,4,2,211,171,54,1,132,69,123,75,186,53,147,218,32,187,206,188,245,231,140,96,13,211,151,204,213,13,153,158,96,108,28,253,35,82,93,127,195,98,78,73,77,50,74,218,111,8,44,137,50,92,163,96,2,110,119,218,37,245,90,36,107,90,167,181,249,96,192,88,129,221,105,230,207,195,141,149,178,69,173,5,156,166,206,65,226,188,55,189,29,43,150,30,118,181,63,60,234,141,211,104,128,193,5,21,180,192,121,221,131,67,128,78,219,137,184,19,238,29,106,136,14,58,73,101,47,225,135,253,109,131,87,18,150,32,233,53,135,51,78,11,101,99,118,20,176,183,137,166,76,168,143,160,42,190,6,242,251,30,0,158,204,202,221,44,73,114,123,195,56,144,180,225,114,128,10,24,206,201,211,167,228,192,107,98,19,186,160,234,123,58,202,94,83,101,195,167,61,54,163,168,106,167,60,173,180,66,250,214,211,57,94,82,77,184,163,166,51,118,42,238,9,38,221,52,72,110,240,110,17,142,16,6,232,51,12,123,180,220,68,70,187,157,230,238,163,134,155,221,220,233,181,86,132,232,175,79,194,186,8,12,236,227,78,252,132,45,73,122,208,114,84,87,238,126,213,70,97,123,146,96,249,99,144,125,247,214,34,248,240,131,231,97,163,110,29,105,8,151,181,78,76,27,241,13,195,171,125,242,80,207,181,8,12,123,245,167,62,44,226,84,144,73,141,127,144,70,220,243,209,112,140,124,134,132,82,134,173,68,38,83,98,127,179,184,62,107,166,106,210,140,88,45,204,29,129,236,57,104,19,139,130,134,140,172,41,123,135,80,124,140,136,211,211,29,72,237,28,47,11,255,16,250,178,133,25,240,28,183,109,255,190,105,220,36,255,109,215,248,205,255,180,109,60,133,255,170,111,92,74,15,52,78,141,57,190,167,115,106,208,144,243,184,49,236,219,226,135,131,206,111,234,66,238,125,183,32,20,213,96,194,132,251,32,58,220,219,129,199,251,239,134,112,28,187,133,225,239,38,111,237,26,183,127,0,186,180,209,28,27,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("cda0dd91-7b53-42bf-ab60-415b9b107ffe"));
		}

		#endregion

	}

	#endregion

}

