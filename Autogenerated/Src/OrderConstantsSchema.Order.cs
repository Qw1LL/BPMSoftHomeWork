namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: OrderConstantsSchema

	/// <exclude/>
	public class OrderConstantsSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public OrderConstantsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public OrderConstantsSchema(OrderConstantsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ed265f93-108e-4a1c-ac7b-79b19bae5ef1");
			Name = "OrderConstants";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d6ad04c1-fa0b-4adb-bfd8-17ec17775a03");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,149,91,111,155,48,24,134,175,137,148,255,96,117,55,155,132,19,140,141,141,213,174,82,56,164,234,197,52,164,254,2,3,38,66,3,18,113,208,20,85,253,239,51,132,100,144,145,40,109,135,18,115,240,251,125,126,124,122,221,84,105,177,1,47,251,170,150,249,253,124,214,12,94,23,238,54,203,100,84,167,219,162,90,60,201,66,150,105,164,36,243,89,33,114,89,237,68,36,129,19,252,120,217,38,181,82,22,73,186,105,74,209,138,23,63,203,88,150,129,136,126,137,141,156,207,94,231,51,109,215,132,89,26,129,170,86,130,8,68,153,168,42,160,98,212,123,81,87,170,190,213,76,138,186,84,109,101,167,208,186,98,185,92,130,135,170,201,115,81,238,31,251,47,7,33,72,11,176,43,183,155,82,170,208,54,79,83,45,254,134,44,71,49,227,214,74,41,226,109,145,237,193,83,147,198,135,100,207,69,208,167,122,233,50,61,199,224,59,40,228,239,78,242,245,206,181,25,49,41,38,208,95,217,14,36,212,227,208,89,49,4,17,183,185,195,45,196,152,233,221,125,187,191,9,59,46,69,242,105,94,79,37,169,39,81,81,130,69,140,77,10,101,146,196,144,136,8,67,129,165,9,185,197,36,139,101,130,169,77,110,69,141,218,153,46,243,110,162,63,141,236,14,146,77,146,155,60,17,148,74,172,200,41,135,36,145,33,20,150,72,160,140,80,44,145,105,9,138,110,32,15,68,89,167,34,83,77,239,68,26,127,8,247,148,34,80,25,70,136,204,35,220,226,30,134,134,99,175,33,49,176,11,87,152,88,16,175,29,215,231,38,53,16,246,59,196,249,12,12,174,51,208,243,42,87,20,145,204,100,60,17,52,128,30,214,93,163,63,102,27,129,219,43,199,88,219,216,128,220,104,23,176,225,49,104,27,43,12,217,154,112,127,205,12,215,103,198,7,192,183,249,46,147,245,127,35,63,166,27,161,43,88,223,166,190,15,77,70,60,133,206,109,168,246,156,90,208,190,227,185,170,79,30,89,187,239,71,63,172,64,176,219,86,105,231,121,215,123,160,105,87,216,189,180,179,77,165,124,104,137,117,101,76,245,99,223,64,208,231,239,123,52,45,125,29,55,222,94,175,19,219,92,7,8,188,233,23,181,83,251,75,7,230,181,144,127,93,79,7,248,66,192,104,83,232,128,92,144,157,230,80,7,214,37,73,191,64,117,64,193,219,113,108,223,222,55,129,224,203,241,234,159,14,183,197,245,105,28,214,93,60,128,2,177,207,101,209,143,122,231,21,135,227,104,194,110,186,79,99,142,3,132,54,109,58,103,174,211,155,141,42,250,22,180,141,172,79,207,90,41,235,166,44,134,59,129,153,8,99,91,42,91,76,16,36,150,201,33,167,161,132,49,78,48,66,22,178,109,100,30,13,82,211,186,161,61,221,110,132,127,47,251,208,40,111,235,132,48,19,196,34,22,170,3,137,134,144,176,72,109,103,41,44,24,90,196,10,25,17,38,77,232,133,78,116,101,91,168,191,250,253,1,59,222,19,36,206,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ed265f93-108e-4a1c-ac7b-79b19bae5ef1"));
		}

		#endregion

	}

	#endregion

}

