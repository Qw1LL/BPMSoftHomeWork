namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: PingValidationRuleSchema

	/// <exclude/>
	public class PingValidationRuleSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public PingValidationRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public PingValidationRuleSchema(PingValidationRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("51af48d6-a7a0-4a85-9246-942230ecb7ff");
			Name = "PingValidationRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bbfdb6d8-67aa-4e5b-af46-39321e13789f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,147,223,107,219,48,16,199,159,29,232,255,160,121,47,14,12,251,61,107,2,107,72,33,208,108,161,94,182,135,177,7,197,62,59,2,69,50,39,57,107,55,242,191,239,100,201,181,219,100,48,8,177,116,63,190,39,221,125,164,248,17,76,195,11,96,119,219,77,174,43,155,46,181,170,68,221,34,183,66,171,155,201,159,155,73,212,26,161,234,235,1,233,114,149,127,188,153,80,80,150,101,236,214,180,199,35,199,231,69,216,63,66,131,96,64,89,195,236,1,88,227,100,12,224,73,80,61,222,8,118,226,82,148,157,14,195,86,66,218,203,100,35,157,166,221,75,81,176,66,114,99,216,150,20,190,189,36,61,82,14,155,177,245,134,11,73,142,220,114,11,175,189,148,79,23,160,255,232,61,66,237,234,108,192,30,116,105,102,108,139,226,68,241,222,219,248,13,219,107,45,187,34,91,212,39,81,2,38,107,186,224,39,58,106,56,54,45,167,204,245,36,138,44,62,135,85,36,42,150,24,139,148,151,174,205,231,86,202,47,248,253,32,44,228,174,179,201,144,154,222,113,3,59,148,211,94,35,138,16,108,139,138,85,92,26,160,70,58,211,217,127,70,105,238,68,201,52,184,67,134,197,54,36,156,89,193,109,113,232,37,47,21,59,193,115,232,3,168,210,183,226,95,125,233,250,237,157,111,103,234,12,209,234,9,138,150,122,53,26,94,165,241,114,184,253,68,47,71,234,45,13,71,126,100,138,0,156,199,198,141,46,94,124,37,72,186,101,167,56,20,72,111,179,46,122,72,246,151,52,139,181,162,120,69,21,117,69,39,5,96,5,66,53,143,71,20,16,222,90,25,136,179,5,195,1,199,49,121,96,90,105,13,213,232,69,59,34,60,118,151,66,189,9,146,49,118,254,216,253,88,131,135,94,138,133,39,203,138,240,157,251,40,247,130,220,222,15,199,177,243,238,21,114,33,60,205,7,228,94,120,9,202,59,75,31,43,192,164,15,186,78,87,136,26,239,53,30,185,77,226,31,4,172,139,146,35,201,52,204,44,167,225,111,192,24,94,195,207,25,243,100,119,112,177,123,202,48,105,252,134,49,5,191,174,117,160,103,55,111,139,130,212,232,94,29,108,31,130,249,161,248,157,119,143,97,169,75,32,103,188,148,186,45,119,10,129,23,7,190,151,176,49,117,28,80,31,1,250,127,69,135,154,238,1,248,236,78,228,58,223,100,165,223,95,217,95,80,179,230,4,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("51af48d6-a7a0-4a85-9246-942230ecb7ff"));
		}

		#endregion

	}

	#endregion

}

