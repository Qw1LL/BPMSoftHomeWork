namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DeduplicationManagerSchema

	/// <exclude/>
	public class DeduplicationManagerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DeduplicationManagerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DeduplicationManagerSchema(DeduplicationManagerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4cc7ee52-03cd-40e1-a490-68646fea7b0b");
			Name = "DeduplicationManager";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("4c53ad23-c903-414d-89cd-b08703861304");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,86,221,79,219,48,16,127,14,210,254,7,139,189,180,82,149,238,153,209,34,88,1,33,173,131,81,222,145,73,174,197,154,99,103,182,211,169,154,246,191,239,28,59,228,163,78,83,182,151,86,241,125,253,124,247,187,59,11,154,129,206,105,2,228,234,97,185,146,107,19,127,145,98,205,54,133,162,134,73,17,47,32,45,114,206,146,242,235,195,201,239,15,39,81,161,153,216,144,213,78,27,200,80,155,115,72,172,80,199,183,32,64,177,228,115,87,103,193,232,70,72,109,88,162,247,100,95,153,248,89,31,86,24,150,82,48,35,21,30,213,178,133,199,1,186,142,73,102,40,142,250,161,196,119,215,162,200,64,209,23,14,231,7,212,22,172,60,160,106,119,174,141,13,59,33,238,127,62,71,0,24,227,163,130,141,141,151,112,170,245,25,105,101,101,73,5,221,128,42,245,166,211,41,57,215,69,150,161,171,185,255,126,80,114,203,82,208,36,3,243,42,83,77,214,82,17,13,84,37,175,246,94,149,39,84,160,34,37,154,101,140,83,69,20,36,82,165,58,174,156,78,27,94,243,226,5,77,28,152,32,22,114,70,238,194,24,35,172,160,205,89,117,33,172,182,54,84,24,188,212,131,98,91,132,225,228,185,251,32,137,149,251,100,188,149,0,13,87,37,254,133,167,201,18,80,33,249,134,92,34,51,114,218,136,251,236,238,249,156,122,197,83,151,206,232,35,136,212,33,104,195,185,97,192,211,62,44,10,104,42,5,223,145,59,23,221,39,86,17,31,165,250,254,28,54,114,32,31,33,151,202,88,163,172,245,221,99,84,179,238,177,224,80,165,23,239,19,56,238,115,209,44,132,67,254,189,0,181,187,42,24,47,209,167,135,21,122,220,222,48,145,174,28,89,30,29,87,30,225,103,1,218,188,249,93,15,104,12,212,162,164,134,42,18,108,68,91,145,146,115,190,32,142,127,33,134,141,172,60,234,22,168,93,159,137,211,233,212,163,93,14,175,19,78,127,48,251,149,197,64,182,7,146,237,189,12,38,119,40,183,99,98,71,101,20,117,168,137,237,17,224,106,212,225,34,106,5,200,25,133,89,135,202,253,108,68,155,129,124,160,245,17,244,139,6,201,132,142,142,224,91,20,253,57,76,186,165,155,145,61,19,32,184,3,246,107,229,73,88,235,156,183,121,180,120,186,159,119,146,166,93,225,173,175,134,174,131,95,94,172,62,189,23,43,186,5,47,171,234,204,214,100,212,241,136,155,166,16,134,204,102,228,83,165,21,41,48,133,18,68,20,156,187,188,98,58,240,119,139,3,95,215,153,199,92,14,213,205,185,139,203,175,134,180,139,97,114,16,187,131,224,49,181,226,207,74,136,228,194,253,157,117,39,108,236,66,142,26,54,227,102,117,171,122,53,215,111,160,4,183,96,174,133,97,102,87,98,29,253,87,242,15,168,197,165,251,139,248,82,236,70,99,123,55,156,106,208,45,201,160,189,175,23,1,174,129,12,69,124,218,229,184,10,103,13,194,90,31,246,52,190,199,233,125,137,172,220,238,65,8,247,55,62,82,176,129,248,143,182,43,125,48,252,42,121,133,140,218,125,60,110,193,62,54,222,255,197,122,87,155,55,214,74,249,206,97,226,21,159,100,38,149,248,190,81,176,158,157,6,31,50,113,155,43,167,211,121,115,47,245,77,137,90,240,239,92,179,173,106,24,146,26,155,84,192,47,178,50,50,255,69,13,54,131,191,190,193,254,241,121,46,245,226,149,161,202,84,210,210,30,106,210,163,151,78,23,12,55,108,85,191,192,224,107,120,142,159,228,87,166,49,240,49,51,192,141,33,212,163,156,239,193,151,249,27,250,206,162,138,111,105,177,129,209,17,239,194,137,75,90,124,205,105,174,33,93,50,206,153,70,208,34,213,1,218,188,151,9,237,44,220,40,153,33,106,5,233,145,188,232,51,47,89,210,39,172,56,163,246,249,209,174,175,218,107,20,59,25,222,78,101,161,18,168,101,46,207,23,239,104,206,125,255,99,231,228,236,95,156,200,54,156,73,0,190,47,88,189,180,130,75,223,46,177,161,23,129,219,95,254,172,194,208,94,75,71,147,252,0,148,214,110,234,140,36,119,218,62,252,243,23,210,170,146,243,22,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4cc7ee52-03cd-40e1-a490-68646fea7b0b"));
		}

		#endregion

	}

	#endregion

}

