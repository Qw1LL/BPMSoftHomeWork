namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ColumnValueDeserializerSchema

	/// <exclude/>
	public class ColumnValueDeserializerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ColumnValueDeserializerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ColumnValueDeserializerSchema(ColumnValueDeserializerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("bc27e9cc-fbe8-41c3-9180-d3aa27934c4e");
			Name = "ColumnValueDeserializer";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6c038aa0-46cd-4697-bc93-5c682e364aef");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,88,91,111,219,54,20,126,118,129,254,135,147,12,40,28,32,144,223,235,58,197,114,89,103,108,233,130,197,237,195,222,24,137,114,184,74,164,71,82,73,188,54,255,125,135,55,133,148,228,58,73,19,32,203,131,98,30,30,126,60,119,146,135,147,154,170,21,201,41,28,158,157,158,139,82,103,71,130,151,108,217,72,162,153,224,217,17,169,87,132,45,185,122,253,234,235,235,87,163,70,49,190,132,243,181,210,180,158,182,227,187,165,117,45,248,16,93,82,164,34,253,39,73,151,8,11,71,21,81,234,45,28,137,170,169,249,103,82,53,84,29,83,69,37,35,21,251,151,74,203,59,153,76,224,157,106,234,154,200,245,129,31,159,84,180,166,92,67,41,36,206,81,10,185,164,229,108,55,198,153,107,138,178,11,185,59,57,128,235,75,150,95,66,113,135,92,128,210,210,136,38,233,74,34,153,107,171,38,136,18,114,139,1,87,6,4,180,0,113,241,55,205,117,22,4,153,68,146,172,154,139,138,229,144,27,37,54,234,0,169,122,65,44,175,1,162,160,61,241,219,53,73,207,12,163,149,100,87,68,83,32,23,40,59,201,181,223,55,101,28,5,184,22,239,76,138,21,149,154,81,4,61,179,2,123,6,47,125,34,235,71,122,163,225,43,44,169,158,130,50,159,219,128,70,121,225,0,59,240,167,84,95,138,194,96,75,161,209,80,180,8,240,97,12,87,76,234,134,84,112,33,68,5,71,132,35,103,78,149,26,71,102,241,86,183,191,247,7,237,133,225,168,141,112,185,251,191,7,179,3,40,73,165,124,64,197,251,181,6,114,174,131,57,174,144,156,84,11,185,62,20,55,22,246,199,246,158,222,223,40,219,12,254,59,227,95,140,209,199,9,149,35,197,7,200,30,152,124,195,63,73,117,35,185,243,208,44,230,48,121,54,26,221,166,155,120,213,159,76,229,32,5,43,97,28,185,48,193,9,188,45,115,144,121,200,1,131,43,157,42,70,151,176,151,85,119,7,245,109,170,170,135,107,38,179,7,130,250,165,6,47,53,92,215,153,158,222,37,119,211,20,51,114,193,106,186,57,93,125,150,14,240,97,101,24,72,222,225,220,178,88,109,164,59,100,239,227,15,84,91,141,127,17,178,221,133,104,98,105,139,245,138,142,3,21,10,255,195,27,232,56,30,254,198,120,1,95,240,179,239,109,108,102,254,18,156,206,121,41,64,251,193,31,101,137,101,161,117,132,186,102,26,11,235,216,172,187,243,78,78,20,237,131,103,134,242,214,179,4,55,36,18,89,142,233,247,65,204,232,187,32,91,214,7,74,23,35,214,214,28,125,87,88,50,13,109,33,62,233,124,220,49,92,199,26,97,203,130,150,164,169,244,125,196,115,193,248,20,197,85,160,164,146,21,244,105,171,171,147,18,75,108,180,50,155,171,96,61,7,49,221,44,204,35,42,175,183,218,67,139,209,78,144,201,20,130,51,34,85,82,5,50,251,125,159,45,196,185,61,239,199,123,251,32,26,141,167,187,76,253,226,53,30,141,190,125,235,4,229,201,63,120,118,169,54,137,178,83,230,160,251,101,238,174,166,196,21,44,150,38,201,75,96,81,89,72,38,130,0,102,208,219,101,107,186,119,130,53,6,203,76,14,180,149,209,38,83,63,142,211,66,57,16,189,63,86,49,63,52,172,216,86,45,187,60,195,149,242,69,167,138,81,225,5,165,137,17,231,193,25,178,196,69,46,214,225,205,27,216,177,24,39,245,74,175,67,82,220,49,244,194,180,157,122,214,227,247,16,61,73,9,223,22,79,3,108,255,195,144,242,90,188,160,168,50,90,63,56,170,204,162,13,65,211,78,61,107,208,56,145,182,197,76,159,235,37,135,12,108,136,153,5,78,62,71,192,60,62,142,123,145,49,125,156,51,147,119,109,124,63,14,110,76,92,23,15,212,208,11,119,99,204,8,142,175,201,38,71,245,58,239,185,110,95,194,18,142,221,29,208,152,32,44,107,187,15,37,227,84,1,227,28,229,201,47,9,179,237,134,168,41,33,149,233,50,244,219,12,225,77,183,169,195,48,14,121,52,231,76,39,138,90,227,110,181,228,240,51,35,152,241,74,176,2,6,144,253,158,169,97,205,195,244,122,240,177,227,69,73,249,93,128,100,237,35,216,44,238,158,253,227,189,189,33,182,129,146,190,129,179,159,200,200,248,48,187,108,247,122,11,174,146,6,146,130,82,138,58,52,155,176,155,164,241,22,134,29,17,155,79,23,226,198,80,77,28,180,61,166,1,239,91,202,138,72,82,3,199,46,221,108,215,167,215,238,65,200,55,211,5,91,185,42,98,0,169,235,11,168,236,221,196,46,139,99,168,205,121,235,214,129,210,179,173,238,227,94,148,152,55,159,41,229,81,94,27,53,194,189,50,134,75,206,139,184,14,252,74,212,41,201,165,80,254,134,209,190,30,17,132,241,238,17,224,14,142,27,90,252,73,149,201,175,89,154,209,247,238,2,24,28,108,248,57,8,19,29,145,172,14,58,17,210,205,126,154,155,215,45,56,61,103,137,28,183,30,55,168,238,200,42,251,185,40,134,129,246,253,246,94,32,171,222,112,28,58,106,74,188,253,15,66,21,132,86,168,21,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("bc27e9cc-fbe8-41c3-9180-d3aa27934c4e"));
		}

		#endregion

	}

	#endregion

}

