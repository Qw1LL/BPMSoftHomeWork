namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: ExternalAccessRequestLogListenerSchema

	/// <exclude/>
	public class ExternalAccessRequestLogListenerSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ExternalAccessRequestLogListenerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ExternalAccessRequestLogListenerSchema(ExternalAccessRequestLogListenerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b61b3cd4-1448-48b6-904d-b7f6096e5b0e");
			Name = "ExternalAccessRequestLogListener";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("c3c7809d-fee0-4b66-8bb6-9b3983c2cffd");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,86,223,111,211,72,16,126,54,18,255,195,96,144,112,68,229,188,167,77,165,38,228,184,72,20,170,166,192,195,233,132,54,235,73,178,135,189,155,219,93,167,13,85,255,119,102,119,109,55,118,27,74,209,157,4,47,86,60,59,63,190,111,230,219,113,36,43,208,172,25,71,24,157,157,206,212,194,166,99,37,23,98,89,106,102,133,146,233,228,202,162,150,44,63,225,28,141,57,99,252,11,91,226,211,39,215,79,159,68,165,17,114,9,179,173,177,88,28,118,222,211,25,242,82,11,187,189,61,88,230,106,206,242,193,96,172,138,130,18,191,85,203,37,153,111,207,111,235,187,243,251,236,26,211,137,180,194,10,52,15,28,167,147,13,74,235,188,200,239,185,198,37,81,129,113,206,140,25,64,155,209,57,254,91,162,177,132,230,173,32,224,18,181,143,233,247,251,112,100,202,162,96,122,123,92,189,215,14,176,80,26,94,238,75,243,18,168,50,17,7,244,16,210,58,89,191,147,237,200,32,178,220,40,224,26,23,195,248,123,52,210,17,51,232,109,91,111,168,129,196,208,119,217,254,186,231,40,153,241,21,22,236,29,77,23,134,16,239,3,27,247,254,166,4,235,114,158,11,14,220,245,231,193,246,192,0,246,192,161,76,36,11,122,54,29,255,67,96,158,81,203,207,180,216,48,139,225,112,29,94,192,88,82,24,7,141,44,83,50,223,194,148,138,192,231,156,30,67,160,159,167,76,146,210,116,250,6,93,117,250,149,116,88,196,189,48,222,232,57,202,44,20,108,23,216,40,145,193,120,133,252,203,152,201,144,110,166,242,210,201,58,81,243,127,144,91,48,20,138,186,7,78,206,81,180,97,186,30,222,16,146,192,176,23,92,14,27,135,210,160,166,43,34,41,220,81,28,86,17,233,135,150,61,248,183,125,211,215,163,250,86,76,36,105,31,211,26,220,228,138,236,22,223,175,49,220,186,36,190,131,216,179,141,162,155,118,131,79,209,174,148,239,176,31,97,56,236,106,215,27,254,100,50,203,209,212,252,102,108,131,89,144,168,83,232,93,137,6,203,154,105,86,128,36,21,13,227,208,136,248,216,207,188,234,92,122,212,247,46,247,71,96,124,124,177,66,175,244,74,229,23,131,61,58,247,168,78,22,52,95,159,254,68,47,141,83,55,8,73,50,145,180,157,184,146,150,9,233,110,188,93,97,93,206,19,128,140,89,214,66,82,9,90,109,80,107,145,85,74,120,47,167,146,230,97,41,69,123,252,7,16,202,143,144,46,54,54,245,1,107,93,204,73,239,233,110,120,29,135,97,40,255,189,112,196,2,146,135,196,67,23,227,71,165,83,19,137,52,218,82,87,53,72,74,244,124,83,82,107,116,184,229,152,141,182,211,236,22,25,85,184,216,174,49,27,83,162,66,126,100,121,137,71,206,255,56,137,207,119,35,42,109,122,212,237,84,207,134,29,218,233,184,212,154,210,59,210,238,75,99,25,183,211,172,193,135,233,212,16,126,142,57,169,115,8,86,151,24,82,71,110,49,164,159,152,150,201,139,216,5,195,245,119,18,187,181,119,67,209,130,178,88,229,68,68,131,219,187,217,224,82,216,21,196,240,42,84,138,94,236,178,35,20,215,45,78,55,53,91,63,84,250,120,26,106,53,121,73,188,164,181,197,89,46,190,178,121,142,51,170,78,74,233,128,60,71,163,74,205,233,84,105,10,59,216,191,153,155,29,127,80,161,138,239,36,55,233,84,114,69,172,169,133,198,148,14,222,105,128,51,102,107,95,206,143,172,193,107,87,90,93,122,156,141,146,174,56,122,207,164,226,209,219,145,198,205,143,111,147,15,107,186,130,238,106,254,98,11,165,115,163,247,109,148,186,22,45,150,71,110,148,154,248,35,23,202,158,143,82,245,53,58,220,93,58,77,133,206,206,121,196,116,94,211,109,250,141,167,3,63,189,239,107,226,255,223,116,154,10,247,79,167,243,207,36,88,219,70,178,125,3,146,151,64,112,131,11,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateIncorrectIssuedByMessageCaptionLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateIncorrectIssuedByMessageCaptionLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("a11562cc-42e9-443d-b91d-cd15870af6dd"),
				Name = "IncorrectIssuedByMessageCaption",
				CreatedInPackageId = new Guid("c3c7809d-fee0-4b66-8bb6-9b3983c2cffd"),
				CreatedInSchemaUId = new Guid("b61b3cd4-1448-48b6-904d-b7f6096e5b0e"),
				ModifiedInSchemaUId = new Guid("b61b3cd4-1448-48b6-904d-b7f6096e5b0e")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b61b3cd4-1448-48b6-904d-b7f6096e5b0e"));
		}

		#endregion

	}

	#endregion

}

