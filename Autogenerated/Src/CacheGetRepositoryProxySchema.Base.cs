namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: CacheGetRepositoryProxySchema

	/// <exclude/>
	public class CacheGetRepositoryProxySchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CacheGetRepositoryProxySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CacheGetRepositoryProxySchema(CacheGetRepositoryProxySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("84941d76-6dfe-4b00-93b7-fefccbe56c51");
			Name = "CacheGetRepositoryProxy";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("76eace8e-4a48-486b-bf04-de18fe06b0a2");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,75,111,219,56,16,62,171,64,255,3,225,94,100,192,144,119,247,216,216,46,178,110,18,4,155,182,193,218,69,15,197,34,160,165,177,77,84,36,85,146,74,43,4,249,239,59,36,245,160,20,185,70,15,113,196,121,241,155,153,143,67,10,202,65,23,52,5,242,247,253,135,141,220,155,100,45,197,158,29,74,69,13,147,226,245,171,167,215,175,162,82,51,113,32,155,74,27,224,23,131,53,218,231,57,164,214,88,39,55,32,64,177,244,133,205,29,19,223,59,97,183,19,231,82,140,201,21,140,75,147,141,241,58,212,190,81,112,192,77,201,58,167,90,191,37,107,154,30,225,6,204,191,80,72,205,208,172,186,87,242,103,229,76,231,243,57,89,232,146,115,170,170,85,189,70,237,35,203,64,19,14,230,40,51,77,140,36,114,103,40,19,36,163,134,146,189,146,156,164,54,104,210,68,152,15,66,44,76,85,64,65,21,229,68,96,25,151,147,237,123,244,156,172,236,239,98,222,42,173,121,81,238,114,150,146,212,98,61,5,117,225,220,87,228,45,185,237,41,107,57,70,137,126,28,65,1,113,107,52,187,18,134,153,202,46,102,68,192,143,120,138,38,216,46,107,216,20,231,154,65,158,97,117,238,21,123,164,6,188,178,240,11,162,128,102,82,228,21,209,70,217,74,63,184,116,255,129,106,11,188,200,173,197,146,76,78,128,125,120,250,227,249,225,233,79,252,251,235,121,114,209,143,123,235,124,92,171,234,152,65,219,162,55,32,50,143,174,15,21,121,135,56,202,20,77,45,96,87,176,58,174,47,222,9,36,241,103,13,10,157,133,39,33,41,123,203,217,120,49,49,247,70,50,107,210,215,24,158,211,143,216,201,41,177,172,143,162,126,168,100,125,132,244,219,165,58,148,28,132,249,88,230,121,108,219,46,247,113,223,110,58,181,228,141,162,110,139,211,158,157,77,227,213,161,120,233,245,73,125,57,50,3,27,123,94,155,8,1,234,58,194,160,30,203,65,69,188,81,87,17,52,232,80,120,229,166,141,137,202,110,3,167,124,254,117,23,177,37,5,40,195,192,145,78,26,220,19,178,134,30,245,146,12,16,14,150,190,246,7,48,225,126,157,243,120,63,131,124,206,248,215,221,14,114,60,183,97,64,231,224,179,245,170,191,34,182,39,113,64,119,178,92,18,129,77,107,200,20,69,61,229,32,235,228,178,40,144,228,110,232,186,77,146,47,204,28,239,100,74,115,187,68,196,113,135,184,110,180,133,106,255,41,48,165,18,131,163,214,168,207,244,235,131,159,126,39,38,68,93,43,172,56,78,133,184,201,228,145,42,146,150,57,110,58,146,199,186,84,10,233,106,165,248,237,140,146,150,60,13,84,31,55,185,150,138,83,19,191,152,59,179,160,157,120,167,152,45,142,210,120,234,194,204,130,198,205,26,20,211,126,227,234,41,116,37,240,224,40,186,203,161,33,9,134,178,31,215,56,218,93,141,123,25,125,3,123,20,154,84,123,112,187,174,127,69,171,255,8,213,99,209,223,189,179,83,152,220,49,109,106,81,60,10,236,81,178,140,108,60,148,173,244,64,70,194,217,91,232,28,190,33,176,165,243,250,189,106,232,182,10,39,64,104,191,237,160,114,201,86,94,42,69,91,40,150,253,206,58,185,213,126,86,93,241,194,160,186,229,127,19,171,223,219,75,28,134,47,130,69,131,242,56,215,90,247,28,118,198,41,46,126,139,231,193,197,50,124,23,56,1,98,210,4,220,213,234,95,2,187,138,224,67,1,5,123,134,156,110,253,194,215,128,151,132,79,1,150,77,86,219,35,16,28,215,60,116,95,204,219,55,129,119,242,137,104,103,28,236,138,134,141,38,184,2,253,205,143,8,227,155,18,73,196,178,144,32,131,94,233,1,137,125,115,174,153,210,230,147,122,15,123,138,103,39,230,192,119,160,200,114,133,207,32,251,149,220,102,201,213,247,146,230,58,198,224,61,250,158,46,22,205,243,30,244,95,148,168,201,169,123,52,18,185,63,159,247,56,123,29,117,234,2,212,73,14,114,31,39,133,151,246,133,40,251,31,62,157,118,168,11,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("84941d76-6dfe-4b00-93b7-fefccbe56c51"));
		}

		#endregion

	}

	#endregion

}

