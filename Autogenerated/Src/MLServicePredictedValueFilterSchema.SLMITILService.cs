namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: MLServicePredictedValueFilterSchema

	/// <exclude/>
	public class MLServicePredictedValueFilterSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLServicePredictedValueFilterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLServicePredictedValueFilterSchema(MLServicePredictedValueFilterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5d952c78-4f98-48e7-8948-9c86f90db786");
			Name = "MLServicePredictedValueFilter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e45998c9-62eb-4d7e-9232-63ecc763f5be");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,86,77,111,219,56,16,61,171,64,255,195,68,187,64,101,212,43,239,94,91,71,64,146,58,89,21,241,198,88,167,219,195,162,7,90,26,217,4,100,210,75,82,113,221,32,255,125,135,31,242,135,226,56,189,56,228,112,230,205,204,227,227,40,130,45,81,175,88,129,112,57,25,79,101,101,210,43,41,42,62,111,20,51,92,138,116,124,251,246,205,227,219,55,81,163,185,152,195,116,163,13,46,63,110,247,187,24,133,199,173,233,167,203,23,14,70,194,112,195,81,191,112,124,205,10,35,213,209,243,241,109,154,11,131,170,162,178,237,49,57,252,162,112,78,229,194,85,205,180,254,0,227,219,41,170,7,94,224,68,97,201,11,131,229,63,172,110,240,154,215,20,230,2,6,131,1,12,117,179,92,50,181,201,194,254,79,38,202,26,21,84,82,65,136,135,138,99,93,194,202,195,216,12,228,67,70,139,67,37,165,45,210,96,15,234,223,187,7,84,138,151,248,141,54,171,102,86,243,2,10,91,215,233,178,108,213,151,76,191,80,114,68,151,64,191,187,70,165,208,70,53,150,35,234,119,226,178,120,143,110,103,206,144,11,226,154,213,252,7,106,96,32,112,13,156,226,153,160,14,101,5,102,129,20,130,8,133,194,234,60,62,89,102,60,200,124,55,182,247,231,205,123,203,138,41,182,4,65,218,58,143,27,141,138,170,21,232,248,139,179,123,74,102,109,80,108,141,233,112,224,34,28,64,96,236,100,17,201,151,3,80,135,183,219,246,62,192,140,136,76,58,86,176,58,142,158,2,143,40,74,79,229,33,175,99,52,11,89,254,12,165,87,172,174,177,132,245,2,5,160,213,242,38,136,69,32,150,26,140,132,25,130,70,3,179,77,171,31,114,127,176,77,252,44,117,30,214,83,230,215,7,76,61,243,47,100,221,44,133,227,233,47,50,196,153,253,109,47,216,31,134,2,78,194,40,212,77,109,124,218,110,229,207,2,21,154,70,9,157,13,139,140,244,136,195,65,145,193,111,192,43,239,15,156,244,86,215,114,77,0,91,70,250,128,181,70,242,162,152,138,209,210,6,17,114,11,181,167,2,25,158,18,204,164,172,225,78,76,201,101,117,168,136,196,13,146,77,32,168,15,244,44,236,176,232,112,209,183,160,81,228,230,3,175,120,225,166,219,223,174,81,240,253,6,125,68,84,122,114,102,245,147,30,79,215,230,233,38,104,97,90,156,200,183,3,174,67,59,196,156,246,66,130,78,48,156,157,67,28,244,158,211,132,205,203,184,11,99,201,237,162,156,221,52,188,76,239,213,102,194,20,233,221,23,144,58,212,62,200,198,208,29,40,34,124,15,118,87,221,173,156,167,95,153,18,201,175,109,98,224,228,18,174,237,113,31,235,9,214,76,131,144,198,201,153,150,220,188,243,123,102,221,121,9,55,95,242,79,113,239,227,233,190,109,177,109,53,19,154,238,121,9,231,173,172,111,208,220,111,86,88,94,237,120,25,90,255,44,105,171,243,17,109,18,223,88,77,47,155,48,146,169,91,245,236,88,243,203,206,124,232,249,194,162,212,195,39,254,143,253,210,105,147,252,209,11,199,233,181,146,203,109,190,92,236,37,142,123,233,133,78,98,189,138,91,223,156,176,213,103,201,197,54,96,106,152,105,116,235,105,23,119,194,133,244,233,106,221,153,45,63,205,245,232,191,134,213,206,133,78,172,45,64,126,93,160,194,109,196,161,24,182,97,161,116,186,112,146,141,157,132,7,215,75,129,150,181,184,109,41,74,47,68,217,129,108,137,124,21,210,59,190,4,233,170,191,32,122,31,240,20,150,149,45,57,94,210,243,69,38,8,197,223,159,81,155,86,136,238,101,115,77,119,206,253,11,163,27,245,87,155,142,190,99,209,24,156,22,172,102,106,200,133,201,146,30,100,240,123,16,154,123,2,251,145,91,113,191,166,238,3,210,142,200,27,74,137,90,188,35,75,67,155,199,3,66,158,32,134,247,33,77,180,131,103,115,133,184,36,57,3,253,247,64,83,207,61,143,64,79,168,215,63,131,246,125,236,23,30,158,9,208,88,42,22,144,140,190,23,184,114,31,182,93,75,182,163,145,82,82,81,75,39,191,141,199,199,22,125,2,148,92,107,192,45,244,35,62,189,246,100,143,127,43,189,245,208,72,182,255,1,185,85,67,2,74,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5d952c78-4f98-48e7-8948-9c86f90db786"));
		}

		#endregion

	}

	#endregion

}

